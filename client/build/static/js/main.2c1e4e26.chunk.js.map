{"version":3,"sources":["actions/Types.js","SetAuthToken.js","actions/Authentication.js","FullNavbars.js","components/Signup.js","components/Signin.js","actions/VoteAction.js","actions/TeamsAction.js","components/UserVote.js","components/FormVote.js","components/Vote.js","components/ChangeUser.js","components/MonCompte.js","Content.js","App.js","reducers/TeamsReducer.js","reducers/VoteReducer.js","hocs/is-empty.js","reducers/AuthReducer.js","reducers/ErrorReducer.js","reducers/reducers.js","serviceWorker.js","index.js","images/nhl.svg"],"names":["GET_ERRORS","SET_CURRENT_USER","setAuthToken","token","axios","defaults","headers","common","updateUser","userID","newDatas","dispatch","put","catch","err","type","payload","loginUser","user","history","post","then","res","data","localStorage","setItem","decoded","jwt_decode","setCurrentUser","id","pseudo","push","getUser","getItem","logoutUser","removeItem","window","location","assign","FullNavbars","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isAuthenticated","nextProps","nextState","auth","setState","authNav","react_default","a","createElement","Navbar","Collapse","Nav","lib","to","NavItem","eventKey","pullRight","onClick","onLogout","bind","collapseOnSelect","Header","Brand","className","Toggle","Component","connect","Signup","nom","prenom","email","password","password_confirm","errors","handleInputChange","assertThisInitialized","handleSubmit","e","defineProperty","target","name","value","registerUser","Grid","fluid","Col","xs","md","mdOffset","PanelGroup","Panel","Heading","Title","componentClass","Body","FormGroup","controlId","FormControl","classnames","is-invalid","placeholder","onChange","Button","Link","response","Signin","bindActionCreators","postVote","vote","getVote","get","getTeams","UserVote","_this2","teamsSelected","allTeams","map","team","i","teams","indexOf","_id","key","src","img","alt","FormVote","count","isValid","teamId","checked","teamsArray","toConsumableArray","teamIndex","splice","preventDefault","teamsLength","length","teamsDiff","userPseudo","setTimeout","href","nhlLogo","Form","onSubmit","onFormSubmit","lg","Checkbox","onTeamChange","Vote","isVoted","userVote","prevState","components_UserVote","components_FormVote","ChangeUser","modifyUser","newUserInfos","findDOMNode","refs","newNom","newPrenom","newPseudo","newEmail","InputGroup","defaultValue","ref","changeUser","MonCompte","_Component","modifyName","inherits","createClass","userData","components_ChangeUser","Main","Switch","Route","exact","path","component","App","src_FullNavbars","Content","initialeState","error","isEmpty","undefined","keys","trim","initialState","combineReducers","arguments","action","objectSpread","concat","Boolean","hostname","match","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","promise","thunk","createLogger","ReactDOM","render","es","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.2c1e4e26.chunk.js","sourcesContent":["export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if(token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  }\n  else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from './Types';\nimport setAuthToken from '../SetAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nexport const registerUser = (user, history) => dispatch => {\n  axios.post('/user', user)\n  .then(res => history.push('/signin'))\n  .catch(err => {\n    dispatch({type: GET_ERRORS, payload: err.response.data});\n  });\n}\n\nexport const updateUser = (userID, newDatas) => dispatch => {\n  axios.put('/user/' + userID, newDatas)\n  .catch(err => {\n    dispatch({type: GET_ERRORS, payload: err});\n  });\n}\n\nexport const loginUser = (user, history) => dispatch => {\n  axios.post('/login', user)\n  .then(res => {\n    const { token } = res.data;\n    localStorage.setItem('jwtToken', token);\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n    localStorage.setItem('userID', decoded.id);\n    localStorage.setItem('userPseudo', decoded.pseudo);\n    history.push('/vote')\n  })\n  .catch(err => {\n    dispatch({type: GET_ERRORS, payload: err});\n  });\n}\n\nexport const getUser = (userID) => dispatch => {\n  axios.post('/login', userID)\n  .then(res => {\n    let token = localStorage.getItem('jwtToken');\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n  })\n  .catch(err => {\n    dispatch({type: GET_ERRORS, payload: err});\n  });\n}\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  }\n}\n\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  localStorage.removeItem('userID');\n  localStorage.removeItem('userPseudo');\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n  window.location.assign(\"/\");\n}\n","import React, { Component }  from 'react'\nimport { Nav, Navbar, NavItem } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { logoutUser } from './actions/Authentication'\n\nclass FullNavbars extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isAuthenticated: false,\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.auth.isAuthenticated !== this.state.isAuthenticated) {\n      this.setState({ isAuthenticated: true })\n      return true\n    }\n    return false\n  }\n\n  onLogout() {\n    this.props.logoutUser()\n  }\n\n  render() {\n    const authNav = (\n      <Navbar.Collapse>\n        <Nav>\n          <LinkContainer to={\"/vote\"}>\n            <NavItem eventKey={0}>Vote !</NavItem>\n          </LinkContainer>\n          <LinkContainer to={\"/classement\"}>\n            <NavItem eventKey={1}>Classement</NavItem>\n          </LinkContainer>\n        </Nav>\n        <Nav pullRight>\n          <LinkContainer to={\"/monCompte\"}>\n            <NavItem eventKey={2}>Mon Compte</NavItem>\n          </LinkContainer>\n          <NavItem eventKey={3} onClick={this.onLogout.bind(this)}>Me déconnecter</NavItem>\n        </Nav>\n      </Navbar.Collapse>\n    )\n    return (\n      <Navbar collapseOnSelect>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <div className=\"navbar-brand\">NHL vote app</div>\n          </Navbar.Brand>\n          <Navbar.Toggle id='collapseButton' />\n        </Navbar.Header>\n        {this.state.isAuthenticated ? authNav : null}\n      </Navbar>\n    )\n  }\n}\n\nFullNavbars.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, { logoutUser })(FullNavbars);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { Grid, Col, FormGroup, FormControl, Button, PanelGroup, Panel } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport { registerUser } from \"../actions/Authentication\";\n\nclass Signup extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nom: '',\n      prenom: '',\n      pseudo: '',\n      email: '',\n      password: '',\n      password_confirm: '',\n      errors: {}\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit() {\n    const user = {\n      nom: this.state.nom,\n      prenom: this.state.prenom,\n      pseudo: this.state.pseudo,\n      email: this.state.email,\n      password: this.state.password,\n      password_confirm: this.state.password_confirm\n    }\n    this.props.registerUser(user, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <Grid id=\"logup\" className=\"vertical-middle\" fluid>\n        <Col xs={12} md={4} mdOffset={4}>\n          <PanelGroup id=\"logup-panel-group\">\n            <Panel>\n              <Panel.Heading>\n                <Panel.Title componentClass=\"h2\">Créer ton compte</Panel.Title>\n              </Panel.Heading>\n              <Panel.Body>\n                <FormGroup controlId=\"nom\">\n                  <FormControl\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.nom\n                    })}\n                    placeholder=\"Entre ton nom\"\n                    name=\"nom\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.nom } />\n                  {errors.nom && (<div className=\"invalid-feedback\">{errors.nom}</div>)}\n                </FormGroup>\n                <FormGroup controlId=\"prenom\">\n                  <FormControl\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.prenom\n                    })}\n                    placeholder=\"Entre ton prénom\"\n                    name=\"prenom\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.prenom } />\n                  {errors.prenom && (<div className=\"invalid-feedback\">{errors.prenom}</div>)}\n                </FormGroup>\n                <FormGroup controlId=\"pseudo\">\n                  <FormControl\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.pseudo\n                    })}\n                    placeholder=\"Entre ton pseudo\"\n                    name=\"pseudo\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.pseudo } />\n                  {errors.pseudo && (<div className=\"invalid-feedback\">{errors.pseudo}</div>)}\n                </FormGroup>\n                <FormGroup controlId=\"email\">\n                  <FormControl\n                    type='email'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.email\n                    })}\n                    placeholder=\"Entre ton email\"\n                    name=\"email\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.email } />\n                  {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n                </FormGroup>\n                <FormGroup controlId=\"password\">\n                  <FormControl\n                    type='password'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.password\n                    })}\n                    placeholder=\"Entre ton mot de passe\"\n                    name=\"password\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password } />\n                  {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n                </FormGroup>\n                <FormGroup controlId=\"password_confirm\">\n                  <FormControl\n                    type='password'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.password_confirm\n                    })}\n                    placeholder=\"Confirme ton mot de passe\"\n                    name=\"password_confirm\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password_confirm } />\n                  {errors.password_confirm && (<div className=\"invalid-feedback\">{errors.password_confirm}</div>)}\n                </FormGroup>\n                <Button onClick={this.handleSubmit}>Enregistrer</Button>\n                <Col xs={12} className='signup-to-signin'>\n                  <Link to='/signin'>Sinon pour te connecter c'est par ici</Link>\n                </Col>\n              </Panel.Body>\n            </Panel>\n          </PanelGroup>\n        </Col>\n      </Grid>\n    )\n  }\n}\n\nSignup.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(Signup);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Col, FormGroup, FormControl, Button, PanelGroup, Panel } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport classnames from 'classnames';\n\nimport { loginUser } from '../actions/Authentication';\n\nclass Signin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit() {\n    const user = {\n      email: this.state.email,\n      password: this.state.password,\n    }\n    this.props.loginUser(user, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors.response.data\n      });\n    }\n  }\n\n  render() {\n    const {errors} = this.state;\n    return (\n      <Grid id=\"login\" className=\"vertical-middle\" fluid>\n        <Col xs={12} md={4} mdOffset={4}>\n          <PanelGroup id=\"signinPanel\">\n            <Panel>\n              <Panel.Heading>\n                <Panel.Title componentClass=\"h2\">Connecte toi</Panel.Title>\n              </Panel.Heading>\n              <Panel.Body>\n                <FormGroup controlId=\"email\">\n                  <FormControl\n                    type='email'\n                    placeholder=\"Entre ton email\"\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.email\n                    })}\n                    name=\"email\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.email } />\n                  {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n                </FormGroup>\n                <FormGroup controlId=\"password\">\n                  <FormControl\n                    type='password'\n                    placeholder=\"Entre ton mot de passe\"\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.password\n                    })}\n                    name=\"password\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password } />\n                  {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n                </FormGroup>\n                <Button onClick={this.handleSubmit}>Envoyer</Button>\n              </Panel.Body>\n            </Panel>\n          </PanelGroup>\n        </Col>\n      </Grid>\n    )\n  }\n}\n\nSignin.propTypes = {\n  errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors\n})\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators ({\n    loginUser\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)\n","import axios from 'axios';\n\n// POST VOTE\nexport function postVote(vote) {\n  return function(dispatch) {\n    axios.post('/vote', vote)\n    .then(function(response) {\n      dispatch({type:\"POST_VOTE\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"POST_VOTE_REJECTED\", payload:err})\n    })\n  }\n}\n\n// GET VOTE\nexport function getVote(id) {\n  return function(dispatch) {\n    axios.get('/vote/' + id)\n    .then(function(response) {\n      dispatch({type:\"GET_VOTE\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_VOTE_REJECTED\", payload:err})\n    })\n  }\n}\n","import axios from 'axios';\n\n// GET ARME\nexport function getTeams() {\n  return function(dispatch) {\n    axios.get('/teams')\n    .then(function(response) {\n      dispatch({type:\"GET_TEAMS\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_TEAMS_REJECTED\", payload:err})\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport { Col, Panel } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { getTeams } from '../actions/TeamsAction'\n\nclass UserVote extends Component {\n  constructor(props) {\n    super(props)\n\n    this.props.getTeams()\n  }\n\n  render() {\n    const teamsSelected = (this.props.allTeams.map((team, i) => {\n      let teamsArray = this.props.teams\n      let teamsIndex = teamsArray.indexOf(team._id)\n\n      if (teamsIndex !== -1) return (<Col xs={12} md={4} key={i} className='user-vote-list-item'><img className=\"teams-logo\" src={team.img} alt={team.name} /> {team.name}</Col>)\n      return true\n    }))\n\n    return (\n      <Col xs={12} md={8} mdOffset={2} className='user-vote'>\n        <Panel>\n          <Panel.Heading>\n            <Panel.Title componentClass=\"h2\">Voici ton vote pour les Playoffs</Panel.Title>\n          </Panel.Heading>\n          <Panel.Body className='user-vote-list'>\n            {teamsSelected}\n          </Panel.Body>\n        </Panel>\n      </Col>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    allTeams: state.teams.teams\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getTeams\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserVote);\n","// Lib\nimport React, { Component } from 'react'\nimport { Panel, Col, Form, FormGroup, Checkbox, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Actions\nimport { getTeams } from '../actions/TeamsAction'\nimport { postVote } from '../actions/VoteAction'\n\n// Components\nimport nhlLogo from '../images/nhl.svg'\n\nclass FormVote extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.props.getTeams()\n\n    this.state = {\n      'teamsSelected': [],\n      'count': 16,\n      'errors': '',\n      'isValid': ''\n    }\n  }\n\n  onTeamChange(e) {\n    const teamId = e.target.id\n    const checked = e.target.checked\n    let teamsArray = [...this.state.teamsSelected]\n\n    if(checked) {\n      teamsArray.push(teamId)\n      this.setState({\n        'count': this.state.count - 1\n      })\n    }\n    else {\n      let teamIndex = teamsArray.indexOf(teamId)\n      teamIndex !== -1 && teamsArray.splice(teamIndex, 1)\n      this.setState({\n        'count': this.state.count + 1\n      })\n    }\n\n    this.setState({\n      'teamsSelected': teamsArray,\n      'errors': ''\n    })\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault()\n    let teamsLength = this.state.teamsSelected.length\n\n    if(teamsLength < 16) {\n      let teamsDiff = 16 - teamsLength\n      this.setState({\n        'errors': 'Il te manque ' + teamsDiff + ' équipe(s)'\n      })\n    } else if(teamsLength > 16) {\n      let teamsDiff = teamsLength - 16\n      this.setState({\n        'errors': 'Tu as sélectionné ' + teamsDiff + ' équipe(s) en trop'\n      })\n    } else {\n      let vote = {\n        'userID': localStorage.getItem('userID'),\n        'userPseudo': localStorage.getItem('userPseudo'),\n        'teams': this.state.teamsSelected\n      }\n\n      this.props.postVote(vote)\n      this.setState({ isValid: 'Merci ton vote est bien pris en compte' })\n      setTimeout(\n        function() {\n          window.location.href(\"/classement\")\n        }, 1500\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Panel>\n        <Panel.Heading>\n          <Panel.Title componentClass=\"h2\"><img className='nhl-logo' src={nhlLogo} alt='NHL Logo' />\n            Il te reste {this.state.count > 1 ? this.state.count + ' équipes' : this.state.count + ' équipe'} à sélectionner\n          </Panel.Title>\n        </Panel.Heading>\n        <Panel.Body>\n          <Form onSubmit={this.onFormSubmit.bind(this)}>\n            {this.props.teams.map((teams, i) =>\n              <Col xs={12} md={4} lg={3} key={i}>\n                <FormGroup>\n                  <label>\n                    <img className='teams-logo' src={teams.img} alt={teams.name} />\n                    {teams.name}\n                    <Checkbox\n                      className='form-checkbox'\n                      id={teams._id}\n                      name={teams.name}\n                      onChange={this.onTeamChange.bind(this)}\n                      value={teams.name}\n                      ></Checkbox>\n                  </label>\n                </FormGroup>\n              </Col>\n            )}\n            <Col xs={12} className='align-center'>\n              <Button type=\"submit\">Submit</Button>\n              {this.state.errors !== '' && (<div className=\"invalid-feedback\">{this.state.errors}</div>)}\n            </Col>\n          </Form>\n        </Panel.Body>\n        {this.state.isValid !== '' && (<div className=\"valid-feedback\">{this.state.isValid}</div>)}\n      </Panel>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    teams: state.teams.teams\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getTeams,\n    postVote\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormVote);\n","// Lib\nimport React, { Component } from 'react'\nimport { Grid, Col } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Actions\nimport { getVote } from '../actions/VoteAction'\n\n// Components\nimport UserVote from '../components/UserVote'\nimport FormVote from '../components/FormVote'\n\nclass Vote extends Component {\n\n  constructor(props) {\n    super(props)\n\n    let userID = localStorage.getItem(\"userID\");\n\n    this.state = {\n      userID: userID,\n      isVoted: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.getVote(this.state.userID)\n    this.props.userVote.length === 1 && this.setState({ isVoted: true })\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.userVote.length !== this.props.userVote.length) {\n      this.setState({ isVoted: true })\n    }\n  }\n\n  render() {\n    return (\n      <Grid id='vote-form' fluid>\n        <Col xs={12}>\n          {this.state.isVoted ? this.props.userVote.map((vote, i) => <UserVote key={i} {...vote} />) : <FormVote />}\n        </Col>\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userVote: state.vote.userVote\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getVote\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Vote);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Col, Panel, Button, FormGroup, InputGroup, FormControl } from 'react-bootstrap'\nimport { findDOMNode } from 'react-dom'\n\nimport { updateUser, logoutUser } from '../actions/Authentication'\n\nclass ChangeUser extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let userID = this.props.id\n\n    this.state = {\n      userID: userID,\n      modifyUser: false\n    }\n  }\n\n  modifyUser() {\n    this.setState({modifyUser: !this.state.modifyUser})\n  }\n\n  changeUser() {\n    let newUserInfos = {\n      nom: findDOMNode(this.refs.newNom).value,\n      prenom: findDOMNode(this.refs.newPrenom).value,\n      pseudo: findDOMNode(this.refs.newPseudo).value,\n      email: findDOMNode(this.refs.newEmail).value\n    }\n    this.props.updateUser(this.state.userID, newUserInfos)\n    this.props.logoutUser()\n  }\n\n  render() {\n    return (\n      <Col xs={12} md={6} mdOffset={3}>\n        <Panel>\n          <Panel.Heading>\n            <Panel.Title componentClass=\"h2\">Modifie tes informations de compte</Panel.Title>\n          </Panel.Heading>\n          <Panel.Body>\n            {this.state.modifyUser ?\n              <ul>\n                <li>\n                  <FormGroup controlId=\"newNom\">\n                    <InputGroup>Change ton Nom :</InputGroup>\n                    <FormControl\n                      type='text'\n                      defaultValue={this.props.nom}\n                      ref='newNom' />\n                  </FormGroup>\n                </li>\n                <li>\n                  <FormGroup controlId=\"newPrenom\">\n                    <InputGroup>Change ton Prénom :</InputGroup>\n                    <FormControl\n                      type='text'\n                      defaultValue={this.props.prenom}\n                      ref='newPrenom' />\n                  </FormGroup>\n                </li>\n                <li>\n                  <FormGroup controlId=\"newPseudo\">\n                    <InputGroup>Change ton pseudo :</InputGroup>\n                    <FormControl\n                      type='text'\n                      defaultValue={this.props.pseudo}\n                      ref='newPseudo' />\n                  </FormGroup>\n                </li>\n                <li>\n                  <FormGroup controlId=\"newEmail\">\n                    <InputGroup>Change ton email :</InputGroup>\n                    <FormControl\n                      type='text'\n                      defaultValue={this.props.email}\n                      ref='newEmail' />\n                  </FormGroup>\n                </li>\n                <li>\n                  <Button onClick={this.changeUser.bind(this)}>Sauvegarder</Button>\n                  <Button onClick={this.modifyUser.bind(this)}>Annuler</Button>\n                </li>\n                <li><p>Attention tu seras déconnecté automatiquement afin de faire la mise à jour. Il faudra te connecter à nouveau.</p></li>\n              </ul> :\n              <ul>\n                <li>nom : {this.props.nom}</li>\n                <li>prénom : {this.props.prenom}</li>\n                <li>pseudo : {this.props.pseudo}</li>\n                <li>email : {this.props.email}</li>\n                <li><Button onClick={this.modifyUser.bind(this)}>Modifier</Button></li>\n              </ul>\n            }\n          </Panel.Body>\n        </Panel>\n      </Col>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateUser, logoutUser\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(ChangeUser);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Grid, Col } from 'react-bootstrap';\n\nimport { getUser } from '../actions/Authentication';\nimport { getVote } from '../actions/VoteAction';\n\nimport ChangeUser from '../components/ChangeUser';\nimport UserVote from '../components/UserVote';\n\nexport class MonCompte extends Component {\n\n  constructor(props) {\n    super(props);\n    let userPseudo = localStorage.getItem(\"userPseudo\");\n    let userID = localStorage.getItem(\"userID\");\n\n    this.state = {\n      userPseudo: userPseudo,\n      userID: userID,\n      modifyName: false\n    }\n  }\n\n  componentDidMount() {\n    const userID = this.state.userID\n    this.props.getUser({ id: userID })\n    this.props.getVote(userID)\n  }\n\n  render() {\n    return (\n      <Grid id=\"mon-compte\" className=\"vertical-middle\" fluid>\n        <Col xs={12}>\n          <h1 className=\"align-center\">Voici ton compte {this.state.userPseudo}</h1>\n          {this.props.userData.map((user, i) => <ChangeUser key={i} {...user} />)}\n        </Col>\n        <Col xs={12}>\n          {this.props.userVote.map((vote, i) => <UserVote key={i} {...vote} />)}\n        </Col>\n      </Grid>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    userData: state.auth.user,\n    userVote: state.vote.userVote\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getUser,\n    getVote\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonCompte);\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Signup from \"./components/Signup\"\nimport Signin from \"./components/Signin\"\nimport Vote from \"./components/Vote\"\nimport MonCompte from \"./components/MonCompte\"\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component={Signup}/>\n      <Route path='/signin' component={Signin}/>\n      <Route path='/vote' component={Vote}/>\n      <Route path='/monCompte' component={MonCompte}/>\n    </Switch>\n  </main>\n)\n\nexport default Main\n","import React, { Component } from 'react'\nimport FullNavbars from './FullNavbars'\nimport Content from './Content'\n\nclass App extends Component {\n  render() {\n    return (\n      <section>\n        <FullNavbars />\n        <Content />\n      </section>\n    )\n  }\n}\n\nexport default App;\n","const initialeState = {\n  teams: [],\n  error: null\n}\n\nexport const TeamsReducer = (state=initialeState, action) => {\n  switch (action.type) {\n    case 'GET_TEAMS':\n      return {...state, teams:[...action.payload]};\n    case \"GET_TEAMS_REJECTED\":\n      return action.payload\n    default: {\n      return state\n    }\n  }\n}\n","const initialeState = {\n  vote: [],\n  userVote: []\n}\n\nexport const VoteReducer = (state=initialeState, action) => {\n  switch (action.type) {\n    case 'POST_VOTE':\n      return {...state, vote:[...state.vote, action.payload]}\n    case \"POST_VOTE_REJECTED\":\n      return action.payload\n    case 'GET_VOTE':\n      return {...state, userVote:[...action.payload]};\n    case \"GET_VOTE_REJECTED\":\n      return action.payload\n    default: {\n      return state\n    }\n  }\n}\n","export const isEmpty = (value) => {\n  return (\n    value === undefined ||\n    value === null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0)\n  );\n}\n","import { SET_CURRENT_USER } from '../actions/Types';\nimport { isEmpty } from '../hocs/is-empty';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: []\n}\n\nexport function authReducer(state = initialState, action ) {\n  switch(action.type) {\n    case SET_CURRENT_USER:\n    return {\n      ...state,\n      isAuthenticated: !isEmpty(action.payload),\n      user: [action.payload]\n    }\n    default:\n    return state;\n  }\n}\n","import { GET_ERRORS } from '../actions/Types';\n\nconst initialState = {};\n\nexport function errorReducer(state = initialState, action ) {\n  switch(action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux'\nimport { TeamsReducer } from './TeamsReducer'\nimport { VoteReducer } from './VoteReducer'\nimport { authReducer } from './AuthReducer'\nimport { errorReducer } from './ErrorReducer'\n\nexport default combineReducers({\n  teams: TeamsReducer,\n  vote: VoteReducer,\n  errors: errorReducer,\n  auth: authReducer\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n  .register(swUrl)\n  .then(registration => {\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n      if (installingWorker == null) {\n        return;\n      }\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            // At this point, the updated precached content has been fetched,\n            // but the previous service worker will still serve the older\n            // content until all client tabs are closed.\n            console.log(\n              'New content is available and will be used when all ' +\n              'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n            );\n\n            // Execute callback\n            if (config && config.onUpdate) {\n              config.onUpdate(registration);\n            }\n          } else {\n            // At this point, everything has been precached.\n            // It's the perfect time to display a\n            // \"Content is cached for offline use.\" message.\n            console.log('Content is cached for offline use.');\n\n            // Execute callback\n            if (config && config.onSuccess) {\n              config.onSuccess(registration);\n            }\n          }\n        }\n      };\n    };\n  })\n  .catch(error => {\n    console.error('Error during service worker registration:', error);\n  });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n  .then(response => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (\n      response.status === 404 ||\n      (contentType != null && contentType.indexOf('javascript') === -1)\n    ) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n  .catch(() => {\n    console.log(\n      'No internet connection found. App is running in offline mode.'\n    );\n  });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Library import\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\n// CSS import\nimport './style/index.css'\n\n// Component import\nimport App from './App'\n\n// Reducers Import\nimport reducers from './reducers/reducers'\n\n// Services import\nimport * as serviceWorker from './serviceWorker'\n\n// Middlewares import\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware'\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancer(applyMiddleware(promise(), thunk, createLogger())))\n\nReactDOM.render((\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n), document.getElementById('root'))\n\nexport default store;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/nhl.266661c7.svg\";"],"sourceRoot":""}