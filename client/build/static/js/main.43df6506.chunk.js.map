{"version":3,"sources":["actions/Types.js","SetAuthToken.js","actions/Authentication.js","FullNavbars.js","components/Signup.js","components/Signin.js","actions/SeriesAction.js","components/UserVote.js","components/FormVote.js","components/Vote.js","actions/ClassementAction.js","components/Classement.js","components/DisplayVote.js","components/AllVote.js","components/ChangeUser.js","components/MonCompte.js","actions/TeamsAction.js","components/FormSeries.js","Content.js","App.js","reducers/TeamsReducer.js","reducers/SeriesReducer.js","reducers/VoteReducer.js","reducers/ClassementReducer.js","hocs/is-empty.js","reducers/AuthReducer.js","reducers/ErrorReducer.js","reducers/reducers.js","serviceWorker.js","index.js","images/Eastern_Conference.png","images/Western_Conference.png","images/nhl.svg"],"names":["GET_ERRORS","SET_CURRENT_USER","setAuthToken","token","axios","defaults","headers","common","updateUser","userID","newDatas","dispatch","put","catch","err","type","payload","loginUser","user","history","post","then","res","data","localStorage","setItem","decoded","jwt_decode","setCurrentUser","id","pseudo","push","getUser","getItem","logoutUser","removeItem","window","location","assign","FullNavbars","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isAuthenticated","nextProps","auth","setState","authNav","react_default","a","createElement","Navbar","Collapse","Nav","className","lib","to","Link","eventKey","onClick","onLogout","bind","bg","expand","Brand","Toggle","aria-controls","Component","connect","Signup","nom","prenom","email","password","password_confirm","errors","handleInputChange","assertThisInitialized","handleSubmit","e","defineProperty","target","name","value","registerUser","Container","fluid","Row","Col","xs","md","span","offset","Card","Header","Body","Form","Group","controlId","Control","classnames","is-invalid","placeholder","onChange","Button","response","Signin","FormGroup","FormControl","bindActionCreators","getSeries","get","postNhlSeries","series","postSeries","vote","getAllUserSeries","getUserSeries","UserVote","lg","Title","match","src","easternLogo","alt","westernLogo","team1","img","score","team2","FormVote","context","_this2","length","map","votes","i","router","_this3","preventDefault","serie","selectTeams1","document","getElementById","selectTeams2","valueTeams1","parseInt","valueTeams2","seriesId","_id","winner","diff","processBdd","nhlLogo","onSubmit","onFormSubmit","key","as","contextTypes","PropTypes","object","Vote","isVoted","userSeries","UserVote_UserVote","components_FormVote","getAllClassement","updateClassement","newData","datas","Classement","userPseudo","isAdmin","usersID","usersPoints","allClassement","classement","points","allUserSeries","userIndex","indexOf","userPoints","seriesIndex","newArray","newItem","console","log","Table","striped","bordered","hover","responsive","stand","getPoints","DisplayVote","usersVote","allVote","width","AllVote","userVote","prevState","users","components_DisplayVote","ChangeUser","modifyUser","newUserInfos","findDOMNode","refs","newNom","newPrenom","newPseudo","newEmail","InputGroup","defaultValue","ref","changeUser","MonCompte","_Component","modifyName","inherits","createClass","userData","components_ChangeUser","getTeams","FormSeries","insertBdd","getTeam1","getTeam2","teams","team","optionTeams","Main","Switch","Route","exact","path","component","App","src_FullNavbars","Content","initialeState","error","nhlSeries","voteSeries","userClassement","isEmpty","undefined","keys","trim","initialState","combineReducers","arguments","action","objectSpread","toConsumableArray","concat","findIndex","item","Boolean","hostname","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","promise","thunk","createLogger","ReactDOM","render","es","BrowserRouter","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.43df6506.chunk.js","sourcesContent":["export const GET_ERRORS = 'GET_ERRORS';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n  if(token) {\r\n    axios.defaults.headers.common['Authorization'] = token;\r\n  }\r\n  else {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n}\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './Types';\r\nimport setAuthToken from '../SetAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const registerUser = (user, history) => dispatch => {\r\n  axios.post('/user', user)\r\n  .then(res => history.push('/signin'))\r\n  .catch(err => {\r\n    dispatch({type: GET_ERRORS, payload: err.response.data});\r\n  });\r\n}\r\n\r\nexport const updateUser = (userID, newDatas) => dispatch => {\r\n  axios.put('/user/' + userID, newDatas)\r\n  .catch(err => {\r\n    dispatch({type: GET_ERRORS, payload: err});\r\n  });\r\n}\r\n\r\nexport const loginUser = (user, history) => dispatch => {\r\n  axios.post('/login', user)\r\n  .then(res => {\r\n    const { token } = res.data;\r\n    localStorage.setItem('jwtToken', token);\r\n    setAuthToken(token);\r\n    const decoded = jwt_decode(token);\r\n    dispatch(setCurrentUser(decoded));\r\n    localStorage.setItem('userID', decoded.id);\r\n    localStorage.setItem('userPseudo', decoded.pseudo);\r\n    history.push('/vote')\r\n  })\r\n  .catch(err => {\r\n    dispatch({type: GET_ERRORS, payload: err});\r\n  });\r\n}\r\n\r\nexport const getUser = (userID) => dispatch => {\r\n  axios.post('/login', userID)\r\n  .then(res => {\r\n    let token = localStorage.getItem('jwtToken');\r\n    setAuthToken(token);\r\n    const decoded = jwt_decode(token);\r\n    dispatch(setCurrentUser(decoded));\r\n  })\r\n  .catch(err => {\r\n    dispatch({type: GET_ERRORS, payload: err});\r\n  });\r\n}\r\n\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  }\r\n}\r\n\r\nexport const logoutUser = () => dispatch => {\r\n  localStorage.removeItem('jwtToken');\r\n  localStorage.removeItem('userID');\r\n  localStorage.removeItem('userPseudo');\r\n  setAuthToken(false);\r\n  dispatch(setCurrentUser({}));\r\n  window.location.assign(\"/\");\r\n}\r\n","import React, { Component }  from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { logoutUser } from './actions/Authentication'\r\n\r\nclass FullNavbars extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isAuthenticated: localStorage.getItem('jwtToken') !== null ? true : false\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.auth.isAuthenticated === true) this.setState({isAuthenticated: true})\r\n  }\r\n\r\n  onLogout() {\r\n    this.props.logoutUser()\r\n  }\r\n\r\n  render() {\r\n    const authNav = (\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <LinkContainer to={\"/vote\"}>\r\n            <Nav.Link eventKey={0}>Vote !</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to={\"/classement\"}>\r\n            <Nav.Link eventKey={1}>Classement</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to={\"/quiavotequoi\"}>\r\n            <Nav.Link eventKey={2}>Qui à voté quoi !</Nav.Link>\r\n          </LinkContainer>\r\n        </Nav>\r\n        <Nav>\r\n          <LinkContainer to={\"/monCompte\"}>\r\n            <Nav.Link eventKey={3}>Mon Compte</Nav.Link>\r\n          </LinkContainer>\r\n          <Nav.Link eventKey={4} onClick={this.onLogout.bind(this)}>Me déconnecter</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    )\r\n    return (\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand className=\"navbar-brand\">NHL vote app</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        {this.state.isAuthenticated ? authNav : null}\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nFullNavbars.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(FullNavbars);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nimport { registerUser } from \"../actions/Authentication\";\r\n\r\nclass Signup extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      nom: '',\r\n      prenom: '',\r\n      pseudo: '',\r\n      email: '',\r\n      password: '',\r\n      password_confirm: '',\r\n      errors: {}\r\n    }\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit() {\r\n    const user = {\r\n      nom: this.state.nom,\r\n      prenom: this.state.prenom,\r\n      pseudo: this.state.pseudo,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password_confirm: this.state.password_confirm\r\n    }\r\n    this.props.registerUser(user, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <Container id=\"logup\" className=\"vertical-middle\" fluid>\r\n        <Row>\r\n          <Col xs={12} md={{ span: 4, offset: 4 }}>\r\n            <Card id=\"logup-panel-group\">\r\n              <Card.Header><h3>Créer ton compte</h3></Card.Header>\r\n              <Card.Body>\r\n                <Form.Group controlId=\"nom\">\r\n                  <Form.Control\r\n                    type='text'\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.nom\r\n                    })}\r\n                    placeholder=\"Entre ton nom\"\r\n                    name=\"nom\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.nom } />\r\n                  {errors.nom && (<div className=\"invalid-feedback\">{errors.nom}</div>)}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"prenom\">\r\n                  <Form.Control\r\n                    type='text'\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.prenom\r\n                    })}\r\n                    placeholder=\"Entre ton prénom\"\r\n                    name=\"prenom\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.prenom } />\r\n                  {errors.prenom && (<div className=\"invalid-feedback\">{errors.prenom}</div>)}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"pseudo\">\r\n                  <Form.Control\r\n                    type='text'\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.pseudo\r\n                    })}\r\n                    placeholder=\"Entre ton pseudo\"\r\n                    name=\"pseudo\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.pseudo } />\r\n                  {errors.pseudo && (<div className=\"invalid-feedback\">{errors.pseudo}</div>)}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                  <Form.Control\r\n                    type='email'\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.email\r\n                    })}\r\n                    placeholder=\"Entre ton email\"\r\n                    name=\"email\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.email } />\r\n                  {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                  <Form.Control\r\n                    type='password'\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.password\r\n                    })}\r\n                    placeholder=\"Entre ton mot de passe\"\r\n                    name=\"password\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.password } />\r\n                  {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password_confirm\">\r\n                  <Form.Control\r\n                    type='password'\r\n                    className={classnames('form-control form-control-lg', {\r\n                      'is-invalid': errors.password_confirm\r\n                    })}\r\n                    placeholder=\"Confirme ton mot de passe\"\r\n                    name=\"password_confirm\"\r\n                    onChange={ this.handleInputChange }\r\n                    value={ this.state.password_confirm } />\r\n                  {errors.password_confirm && (<div className=\"invalid-feedback\">{errors.password_confirm}</div>)}\r\n                </Form.Group>\r\n                <Button onClick={this.handleSubmit}>Enregistrer</Button>\r\n                <Col xs={12} className='signup-to-signin'>\r\n                  <Link to='/signin'>Sinon pour te connecter c'est par ici</Link>\r\n                </Col>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nSignup.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(Signup);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Col, FormGroup, FormControl, Button, Card } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\nimport classnames from 'classnames';\r\n\r\nimport { loginUser } from '../actions/Authentication';\r\n\r\nclass Signin extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      errors: {}\r\n    }\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit() {\r\n    const user = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    }\r\n    this.props.loginUser(user, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors.response.data\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {errors} = this.state;\r\n    return (\r\n      <Container id=\"login\" className=\"vertical-middle\" fluid>\r\n        <Col xs={12}  md={{ span: 4, offset: 4 }}>\r\n          <Card id=\"signinPanel\">\r\n            <Card.Header><h3>Connecte toi</h3></Card.Header>\r\n            <Card.Body>\r\n              <FormGroup controlId=\"email\">\r\n                <FormControl\r\n                  type='email'\r\n                  placeholder=\"Entre ton email\"\r\n                  className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': errors.email\r\n                  })}\r\n                  name=\"email\"\r\n                  onChange={ this.handleInputChange }\r\n                  value={ this.state.email } />\r\n                {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\r\n              </FormGroup>\r\n              <FormGroup controlId=\"password\">\r\n                <FormControl\r\n                  type='password'\r\n                  placeholder=\"Entre ton mot de passe\"\r\n                  className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': errors.password\r\n                  })}\r\n                  name=\"password\"\r\n                  onChange={ this.handleInputChange }\r\n                  value={ this.state.password } />\r\n                {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n              </FormGroup>\r\n              <Button onClick={this.handleSubmit}>Envoyer</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nSignin.propTypes = {\r\n  errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators ({\r\n    loginUser\r\n  }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)\r\n","import axios from 'axios';\r\n\r\nexport function getSeries() {\r\n  return function(dispatch) {\r\n    axios.get('/series')\r\n    .then(function(response) {\r\n      dispatch({type:\"GET_SERIES\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"GET_SERIES_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n\r\nexport function postNhlSeries(series) {\r\n  return function(dispatch) {\r\n    axios.post('/series', series)\r\n    .then(function(response) {\r\n      dispatch({type:\"POST_NHL_SERIES\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"POST_NHL_SERIES_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n\r\nexport function postSeries(vote) {\r\n  return function(dispatch) {\r\n    axios.post('/voteseries', vote)\r\n    .then(function(response) {\r\n      dispatch({type:\"POST_SERIES\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"POST_SERIES_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n\r\nexport function getAllUserSeries() {\r\n  return function(dispatch) {\r\n    axios.get('/voteseries')\r\n    .then(function(response) {\r\n      dispatch({type:\"GET_ALL_USER_SERIES_VOTE\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"GET_ALL_USER_SERIES_VOTE_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n\r\nexport function getUserSeries(id) {\r\n  return function(dispatch) {\r\n    axios.get('/voteseries/' + id)\r\n    .then(function(response) {\r\n      dispatch({type:\"GET_USER_SERIES_VOTE\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"GET_USER_SERIES_VOTE_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Row, Col } from 'react-bootstrap'\r\n\r\n// Components\r\nimport easternLogo from '../images/Eastern_Conference.png'\r\nimport westernLogo from '../images/Western_Conference.png'\r\n\r\nexport default class UserVote extends Component {\r\n  render() {\r\n    return (\r\n      <Col xs={12} md={6} lg={3}>\r\n        <Card>\r\n          <Card.Header>\r\n            <Card.Title>\r\n              {this.props.match < 4 ? <img className='nhl-logo' src={easternLogo} alt='NHL Logo' /> : <img className='nhl-logo' src={westernLogo} alt='NHL Logo' />}\r\n              Match {this.props.match + 1}\r\n            </Card.Title>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Row className='user-series-vote'>\r\n              <Col xs={4}>\r\n                <img src={this.props.team1.img} alt={this.props.team1.name} />\r\n              </Col>\r\n              <Col xs={7} className={this.props.team1.score === 4 && 'user-series-vote-score font-bold'}>\r\n                <p>{this.props.team1.name} {this.props.team1.score}</p>\r\n              </Col>\r\n            </Row>\r\n            <Row className='user-series-vote'>\r\n              <Col xs={4}>\r\n                <img src={this.props.team2.img} alt={this.props.team2.name} />\r\n              </Col>\r\n              <Col xs={7} className={this.props.team2.score === 4 && 'user-series-vote-score font-bold'}>\r\n                <p>{this.props.team2.name} {this.props.team2.score}</p>\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n","// Lib\r\nimport React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Actions\r\nimport { getSeries, postSeries } from '../actions/SeriesAction'\r\n\r\n// Components\r\nimport nhlLogo from '../images/nhl.svg'\r\n\r\nclass FormVote extends Component {\r\n  constructor(props, context) {\r\n    super(props, context)\r\n\r\n    this.props.getSeries()\r\n\r\n    this.state = {\r\n      'vote': [],\r\n      'errors': ''\r\n    }\r\n  }\r\n\r\n  processBdd() {\r\n    if (this.props.series.length === this.state.vote.length) {\r\n      this.state.vote.map((votes, i) => {\r\n        this.props.postSeries(votes)\r\n        return votes\r\n      })\r\n\r\n      this.context.router.history.push('/classement')\r\n    } else {\r\n      this.setState({ errors: 'Attention tu as deux équipes égalités' })\r\n    }\r\n  }\r\n\r\n  onFormSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    this.props.series.map((serie, i) => {\r\n      let selectTeams1 = document.getElementById(serie.team1.id)\r\n      let selectTeams2 = document.getElementById(serie.team2.id)\r\n      let valueTeams1 = parseInt(selectTeams1.value)\r\n      let valueTeams2 = parseInt(selectTeams2.value)\r\n\r\n      if (valueTeams1 !== valueTeams2) {\r\n        this.state.vote.push({\r\n          'userID': localStorage.getItem('userID'),\r\n          'seriesId': serie._id,\r\n          'team1': {\r\n            'name': serie.team1.name,\r\n            'img': serie.team1.img,\r\n            'score': valueTeams1\r\n          },\r\n          'team2': {\r\n            'name': serie.team2.name,\r\n            'img': serie.team2.img,\r\n            'score': valueTeams2\r\n          },\r\n          'winner': valueTeams1 > valueTeams2 ? 'team1' : 'team2',\r\n          'diff': valueTeams1 - valueTeams2\r\n        })\r\n        return this.state.vote\r\n      }\r\n\r\n      return false\r\n    })\r\n\r\n    this.processBdd()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col xs={12}>\r\n        <Card>\r\n          <Card.Header>\r\n            <Card.Title>\r\n              <img className='nhl-logo' src={nhlLogo} alt='NHL Logo' />\r\n              C'est le moment de voter pour les series - 1<sup>st</sup> round\r\n            </Card.Title>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={this.onFormSubmit.bind(this)}>\r\n              <Col xs={12}>\r\n                {\r\n                  this.props.series.map((serie, i) => {\r\n                    return(\r\n                      <Row key={i} className='form-series'>\r\n                        <Col xs={12} className='align-center'><h3>Match {i + 1}</h3></Col>\r\n                        <Col xs={12} md={4} lg={3} className='form-series-col'>\r\n                          <Col xs={6} md={8} className='align-center'>\r\n                            <img src={serie.team1.img} alt={serie.team1.name} />\r\n                            <p className='series-teams-name'>{serie.team1.name}</p>\r\n                          </Col>\r\n                          <Col xs={6} md={4}>\r\n                            <Form.Group>\r\n                              <Form.Control as=\"select\" id={serie.team1.id}>\r\n                                <option>0</option>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                              </Form.Control>\r\n                            </Form.Group>\r\n                          </Col>\r\n                        </Col>\r\n                        <Col xs={12} md={2} className='align-center'>\r\n                          <p className='series-versus'>VS</p>\r\n                        </Col>\r\n                        <Col xs={12} md={4} lg={3} className='form-series-col'>\r\n                          <Col xs={6} md={4}>\r\n                            <Form.Group>\r\n                              <Form.Control as=\"select\" id={serie.team2.id}>\r\n                                <option>0</option>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                              </Form.Control>\r\n                            </Form.Group>\r\n                          </Col>\r\n                          <Col xs={6} md={8} className='align-center'>\r\n                            <img src={serie.team2.img} alt={serie.team2.name} />\r\n                            <p className='series-teams-name'>{serie.team2.name}</p>\r\n                          </Col>\r\n                        </Col>\r\n                      </Row>\r\n                    )\r\n                  })\r\n                }\r\n              </Col>\r\n              <Col xs={12} className='align-center'>\r\n                <Button type=\"submit\">Submit</Button>\r\n                {this.state.errors !== '' && (<Col xs={12} className=\"invalid-feedback\">{this.state.errors}</Col>)}\r\n              </Col>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nFormVote.contextTypes = {\r\n  router: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    series: state.series.series\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n    getSeries, postSeries\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormVote);\r\n","// Lib\r\nimport React, { Component } from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Actions\r\nimport { getUserSeries } from '../actions/SeriesAction'\r\n\r\n// Components\r\nimport UserVote from '../components/UserVote'\r\nimport FormVote from '../components/FormVote'\r\n\r\nclass Vote extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    let userID = localStorage.getItem(\"userID\");\r\n\r\n    this.state = {\r\n      userID: userID,\r\n      isVoted: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getUserSeries(this.state.userID)\r\n    this.props.userSeries.length === 1 && this.setState({ isVoted: true })\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    nextProps.userSeries.length !== 0 && this.setState({isVoted: true})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container id='vote-form' fluid>\r\n        <Row>\r\n          {this.state.isVoted ? this.props.userSeries.map((vote, i) => <UserVote key={i} {...vote} match={i} />) : <FormVote />}\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userSeries: state.series.userSeries\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n    getUserSeries\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Vote);\r\n","import axios from 'axios';\r\n\r\n// POST CLASSEMENT\r\nexport function postClassement(classement) {\r\n  return function(dispatch) {\r\n    axios.post('/classement', classement)\r\n    .then(function(response) {\r\n      dispatch({type:\"POST_CLASSEMENT\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"POST_CLASSEMENT_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n\r\n// GET CLASSEMENT BY USER\r\nexport function getClassement(id) {\r\n  return function(dispatch) {\r\n    axios.get('/classement/' + id)\r\n    .then(function(response) {\r\n      dispatch({type:\"GET_CLASSEMENT\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"GET_CLASSEMENT_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n\r\n// GET ALL CLASSEMENT\r\nexport function getAllClassement() {\r\n  return function(dispatch) {\r\n    axios.get('/classement')\r\n    .then(function(response) {\r\n      dispatch({type:\"GET_ALL_CLASSEMENT\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"GET_ALL_CLASSEMENT_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n\r\n// UPDATE CLASSEMENT BY USER\r\nexport function updateClassement(id, newData) {\r\n  return function(dispatch) {\r\n    axios.put('/classement/' + id, newData)\r\n    .then(function(response) {\r\n      dispatch({type:\"UPDATE_CLASSEMENT\", payload:response.data, userID:id, datas:newData})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"UPDATE_CLASSEMENT_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Col, Table, Button } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { getAllClassement } from '../actions/ClassementAction'\r\nimport { getSeries, getAllUserSeries } from '../actions/SeriesAction'\r\nimport { updateClassement } from '../actions/ClassementAction'\r\n\r\nclass Classement extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    let userPseudo = localStorage.getItem(\"userPseudo\")\r\n\r\n    this.props.getAllClassement()\r\n    this.props.getSeries()\r\n    this.props.getAllUserSeries()\r\n\r\n    this.state = {\r\n      userPseudo: userPseudo,\r\n      isAdmin: false,\r\n      usersID: [],\r\n      usersPoints: [],\r\n      series: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.state.userPseudo === 'C Fab' && this.setState({ isAdmin: true })\r\n  }\r\n\r\n  getPoints() {\r\n    this.props.allClassement.map((classement, i) => {\r\n      this.state.usersID.push(classement.userID)\r\n      this.state.usersPoints.push(classement.points)\r\n      return [this.state.usersID, this.state.usersPoints]\r\n    })\r\n\r\n    this.props.series.map((serie, i) => {\r\n      this.state.series.push(serie._id)\r\n      return this.state.series\r\n    })\r\n\r\n    this.props.allUserSeries.map((vote, i) => {\r\n      let userIndex = this.state.usersID.indexOf(vote.userID)\r\n      let userPoints = this.state.usersPoints[userIndex]\r\n      let seriesIndex = this.state.series.indexOf(vote.seriesId)\r\n\r\n      if(this.props.series[seriesIndex].winner === vote.winner && this.props.series[seriesIndex].diff === vote.diff) {\r\n        const newArray = this.state.usersPoints\r\n        const newItem = userPoints + 3\r\n        newArray[userIndex] = newItem\r\n\r\n        this.setState({\r\n          usersPoints: newArray\r\n        })\r\n      } else if(this.props.series[seriesIndex].winner === vote.winner) {\r\n        const newArray = this.state.usersPoints\r\n        const newItem = userPoints + 1\r\n        newArray[userIndex] = newItem\r\n\r\n        this.setState({\r\n          usersPoints: newArray\r\n        })\r\n      }\r\n\r\n      console.log('userPoints : ', userPoints)\r\n      return userPoints\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col xs={12} md={{ span: 4, offset: 4 }} className='align-center'>\r\n        <Table striped bordered hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th className='align-center'>Classement</th>\r\n              <th className='align-center'>Pseudo</th>\r\n              <th className='align-center'>Points</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.allClassement.map((stand, i) => <tr key={i}><td>{i + 1}</td><td>{stand.userPseudo}</td><td>{stand.points}</td></tr>)}\r\n          </tbody>\r\n        </Table>\r\n        {this.state.isAdmin ? <Col xs={12} className=\"align-center\"><Button onClick={this.getPoints.bind(this)}>Calculer les points</Button></Col> : null}\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    allClassement: state.classement.allClassement,\r\n    series: state.series.series,\r\n    allUserSeries: state.series.allUserSeries\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n    getAllClassement,\r\n    getSeries, getAllUserSeries,\r\n    updateClassement\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Classement);\r\n","// Lib\r\nimport React, { Component } from 'react'\r\nimport { Row, Col, Card } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { getAllUserSeries } from '../actions/SeriesAction'\r\n\r\nclass DisplayVote extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.props.getAllUserSeries()\r\n  }\r\n\r\n  render() {\r\n    const usersVote = (this.props.allVote.map((votes, i) => {\r\n      if (votes.userID === this.props.userID) {\r\n        return (\r\n          <Col xs={12} md={6} key={i} className='align-center'>\r\n            <p>\r\n              <img src={votes.team1.img} alt={votes.team1.name} width='25%' /> &nbsp;&nbsp; <span className={votes.team1.score === 4 ? 'font-bold' : ''}>{votes.team1.score}</span> &nbsp;&nbsp; Vs &nbsp;&nbsp; <span className={votes.team2.score === 4 ? 'font-bold' : ''}>{votes.team2.score}</span> &nbsp;&nbsp; <img src={votes.team2.img} alt={votes.team2.name} width='25%' />\r\n            </p>\r\n          </Col>\r\n        )\r\n      }\r\n      return true\r\n    }))\r\n    return (\r\n      <Card>\r\n        <Card.Header>\r\n          <Card.Title>Vote de {this.props.userPseudo}</Card.Title>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            {usersVote}\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    allVote: state.series.allUserSeries\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n    getAllUserSeries\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayVote);\r\n","// Lib\r\nimport React, { Component } from 'react'\r\nimport { Container, Col } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Actions\r\nimport { getUserSeries, getAllUserSeries } from '../actions/SeriesAction'\r\nimport { getAllClassement } from '../actions/ClassementAction'\r\n\r\n//Components\r\nimport DisplayVote from './DisplayVote'\r\n\r\nclass AllVote extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.props.getUserSeries(localStorage.getItem(\"userID\"))\r\n    this.props.getAllUserSeries()\r\n    this.props.getAllClassement()\r\n\r\n    this.state = {\r\n      isVoted: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.userVote.length > 0 && this.setState({ isVoted: true })\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (prevState.allVote.length !== this.props.allVote.length) {\r\n      this.setState({ isVoted: true })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container id='vote-form' fluid>\r\n        <Col xs={12}>\r\n          {this.state.isVoted ? this.props.classement.map((users, i) => <DisplayVote key={i} {...users}/>) : <p>Il faut que tu vote d'abord !</p>}\r\n        </Col>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userVote: state.series.userSeries,\r\n    classement: state.classement.allClassement,\r\n    allVote: state.series.allUserSeries\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n    getUserSeries, getAllUserSeries,\r\n    getAllClassement\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllVote);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { Col, Card, Button, FormGroup, InputGroup, FormControl } from 'react-bootstrap'\r\nimport { findDOMNode } from 'react-dom'\r\n\r\nimport { updateUser, logoutUser } from '../actions/Authentication'\r\n\r\nclass ChangeUser extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let userID = this.props.id\r\n\r\n    this.state = {\r\n      userID: userID,\r\n      modifyUser: false\r\n    }\r\n  }\r\n\r\n  modifyUser() {\r\n    this.setState({modifyUser: !this.state.modifyUser})\r\n  }\r\n\r\n  changeUser() {\r\n    let newUserInfos = {\r\n      nom: findDOMNode(this.refs.newNom).value,\r\n      prenom: findDOMNode(this.refs.newPrenom).value,\r\n      pseudo: findDOMNode(this.refs.newPseudo).value,\r\n      email: findDOMNode(this.refs.newEmail).value\r\n    }\r\n    this.props.updateUser(this.state.userID, newUserInfos)\r\n    this.props.logoutUser()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col xs={12} md={{ span: 4, offset: 4 }}>\r\n        <Card>\r\n          <Card.Header>\r\n            <Card.Title>Modifie tes informations de compte</Card.Title>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {this.state.modifyUser ?\r\n              <ul>\r\n                <li>\r\n                  <FormGroup controlId=\"newNom\">\r\n                    <InputGroup>Change ton Nom :</InputGroup>\r\n                    <FormControl\r\n                      type='text'\r\n                      defaultValue={this.props.nom}\r\n                      ref='newNom' />\r\n                  </FormGroup>\r\n                </li>\r\n                <li>\r\n                  <FormGroup controlId=\"newPrenom\">\r\n                    <InputGroup>Change ton Prénom :</InputGroup>\r\n                    <FormControl\r\n                      type='text'\r\n                      defaultValue={this.props.prenom}\r\n                      ref='newPrenom' />\r\n                  </FormGroup>\r\n                </li>\r\n                <li>\r\n                  <FormGroup controlId=\"newPseudo\">\r\n                    <InputGroup>Change ton pseudo :</InputGroup>\r\n                    <FormControl\r\n                      type='text'\r\n                      defaultValue={this.props.pseudo}\r\n                      ref='newPseudo' />\r\n                  </FormGroup>\r\n                </li>\r\n                <li>\r\n                  <FormGroup controlId=\"newEmail\">\r\n                    <InputGroup>Change ton email :</InputGroup>\r\n                    <FormControl\r\n                      type='text'\r\n                      defaultValue={this.props.email}\r\n                      ref='newEmail' />\r\n                  </FormGroup>\r\n                </li>\r\n                <li>\r\n                  <Button onClick={this.changeUser.bind(this)}>Sauvegarder</Button>\r\n                  <Button onClick={this.modifyUser.bind(this)}>Annuler</Button>\r\n                </li>\r\n                <li><p>Attention tu seras déconnecté automatiquement afin de faire la mise à jour. Il faudra te connecter à nouveau.</p></li>\r\n              </ul> :\r\n              <ul>\r\n                <li>Nom : {this.props.nom}</li>\r\n                <li>Prénom : {this.props.prenom}</li>\r\n                <li>Pseudo : {this.props.pseudo}</li>\r\n                <li>Email : {this.props.email}</li>\r\n                <li><Button onClick={this.modifyUser.bind(this)}>Modifier</Button></li>\r\n              </ul>\r\n            }\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({\r\n    updateUser, logoutUser\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ChangeUser);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { Container, Col } from 'react-bootstrap'\r\n\r\nimport { getUser } from '../actions/Authentication'\r\n\r\nimport ChangeUser from '../components/ChangeUser'\r\n\r\nexport class MonCompte extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    let userPseudo = localStorage.getItem(\"userPseudo\")\r\n    let userID = localStorage.getItem(\"userID\")\r\n\r\n    this.state = {\r\n      userPseudo: userPseudo,\r\n      userID: userID,\r\n      modifyName: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getUser({ id: this.state.userID })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container id=\"mon-compte\" className=\"vertical-middle\" fluid>\r\n        <Col xs={12}>\r\n          <h1 className=\"align-center\">Voici ton compte {this.state.userPseudo}</h1>\r\n          {this.props.userData.map((user, i) => <ChangeUser key={i} {...user} />)}\r\n        </Col>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    userData: state.auth.user\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({\r\n    getUser\r\n  }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MonCompte)\r\n","import axios from 'axios';\r\n\r\n// GET ARME\r\nexport function getTeams() {\r\n  return function(dispatch) {\r\n    axios.get('/teams')\r\n    .then(function(response) {\r\n      dispatch({type:\"GET_TEAMS\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"GET_TEAMS_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n","// Lib\r\nimport React, { Component } from 'react'\r\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Actions\r\nimport { getTeams } from '../actions/TeamsAction'\r\nimport { postNhlSeries } from '../actions/SeriesAction'\r\n\r\nclass FormSeries extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.props.getTeams()\r\n  }\r\n\r\n  processBdd(team1, team2) {\r\n    let insertBdd = {\r\n      'team1': team1,\r\n      'team2': team2,\r\n      'winner': '',\r\n      'diff': 0\r\n    }\r\n\r\n    this.props.postNhlSeries(insertBdd)\r\n  }\r\n\r\n  onFormSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    let getTeam1 = document.getElementById('team1').value\r\n    let getTeam2 = document.getElementById('team2').value\r\n    let team1 = {}\r\n    let team2 = {}\r\n\r\n    this.props.teams.map((team, i) => {\r\n      if(getTeam1 === team.name) {\r\n        team1 = {\r\n          'id': team._id,\r\n          'name': team.name,\r\n          'img': team.img,\r\n          'score': 0\r\n        }\r\n      }\r\n      if(getTeam2 === team.name) {\r\n        team2 = {\r\n          'id': team._id,\r\n          'name': team.name,\r\n          'img': team.img,\r\n          'score': 0\r\n        }\r\n      }\r\n      return [team1, team2]\r\n    })\r\n\r\n    this.processBdd(team1, team2)\r\n  }\r\n\r\n  render() {\r\n    const optionTeams = this.props.teams.map((team, i) => <option key={i}>{team.name}</option>)\r\n    return (\r\n      <Col xs={12} md={{ span:6 , offset:3 }}>\r\n        <Card>\r\n          <Card.Header>\r\n            <Card.Title>\r\n              Mise en place des series\r\n            </Card.Title>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={this.onFormSubmit.bind(this)}>\r\n              <Col xs={12} className='align-center'><h3>Match</h3></Col>\r\n              <Row className='form-series'>\r\n                <Col xs={5}>\r\n                  <Form.Group>\r\n                    <Form.Control as=\"select\" id='team1'>\r\n                      {optionTeams}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={2} className='align-center'>\r\n                  <p className='series-versus'>VS</p>\r\n                </Col>\r\n                <Col xs={5}>\r\n                  <Form.Group>\r\n                    <Form.Control as=\"select\" id='team2'>\r\n                      {optionTeams}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Col xs={12} className='align-center'>\r\n                <Button type=\"submit\">Submit</Button>\r\n              </Col>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    teams: state.teams.teams\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n    getTeams,\r\n    postNhlSeries\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormSeries);\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport Signup from \"./components/Signup\"\r\nimport Signin from \"./components/Signin\"\r\nimport Vote from \"./components/Vote\"\r\nimport Classement from \"./components/Classement\"\r\nimport AllVote from \"./components/AllVote\"\r\nimport MonCompte from \"./components/MonCompte\"\r\nimport FormSeries from \"./components/FormSeries\"\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path='/' component={Signup}/>\r\n      <Route path='/signin' component={Signin}/>\r\n      <Route path='/vote' component={Vote}/>\r\n      <Route path='/classement' component={Classement}/>\r\n      <Route path='/quiavotequoi' component={AllVote}/>\r\n      <Route path='/monCompte' component={MonCompte}/>\r\n      <Route path='/series' component={FormSeries}/>\r\n    </Switch>\r\n  </main>\r\n)\r\n\r\nexport default Main\r\n","import React, { Component } from 'react'\r\nimport FullNavbars from './FullNavbars'\r\nimport Content from './Content'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <section>\r\n        <FullNavbars />\r\n        <Content />\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const initialeState = {\r\n  teams: [],\r\n  error: null\r\n}\r\n\r\nexport const TeamsReducer = (state=initialeState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_TEAMS':\r\n      return {...state, teams:[...action.payload]};\r\n    case \"GET_TEAMS_REJECTED\":\r\n      return action.payload\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","const initialeState = {\r\n  series: [],\r\n  nhlSeries: [],\r\n  voteSeries: [],\r\n  userSeries: [],\r\n  allUserSeries: [],\r\n  error: null\r\n}\r\n\r\nexport const SeriesReducer = (state=initialeState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_SERIES':\r\n      return {...state, series:[...action.payload]};\r\n    case \"GET_SERIES_REJECTED\":\r\n      return action.payload\r\n\r\n    case 'POST_NHL_SERIES':\r\n      return {...state, nhlSeries:[...action.payload]}\r\n    case \"POST_NHL_SERIES_REJECTED\":\r\n      return action.payload\r\n\r\n    case 'POST_SERIES':\r\n      return {...state, voteSeries:[...action.payload]}\r\n    case \"POST_SERIES_REJECTED\":\r\n      return action.payload\r\n\r\n    case 'GET_USER_SERIES_VOTE':\r\n      return {...state, userSeries:[...action.payload]}\r\n    case \"GET_USER_SERIES_VOTE_REJECTED\":\r\n      return action.payload\r\n\r\n    case 'GET_ALL_USER_SERIES_VOTE':\r\n      return {...state, allUserSeries:[...action.payload]}\r\n    case \"GET_ALL_USER_SERIES_VOTE_REJECTED\":\r\n      return action.payload\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","const initialeState = {\r\n  vote: [],\r\n  userVote: [],\r\n  allVote: []\r\n}\r\n\r\nexport const VoteReducer = (state=initialeState, action) => {\r\n  switch (action.type) {\r\n    case 'POST_VOTE':\r\n      return {...state, vote:[...state.vote, action.payload]}\r\n    case \"POST_VOTE_REJECTED\":\r\n      return action.payload\r\n    case 'GET_VOTE':\r\n      return {...state, userVote:[...action.payload]};\r\n    case \"GET_VOTE_REJECTED\":\r\n      return action.payload\r\n    case 'GET_ALL_VOTE':\r\n      return {...state, allVote:[...action.payload]};\r\n    case \"GET_ALL_VOTE_REJECTED\":\r\n      return action.payload\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","const initialeState = {\r\n  classement: [],\r\n  userClassement: [],\r\n  allClassement: []\r\n}\r\n\r\nexport const ClassementReducer = (state=initialeState, action) => {\r\n  switch (action.type) {\r\n    case 'POST_CLASSEMENT':\r\n      return {...state, classement:[...state.classement, action.payload]}\r\n    case \"POST_CLASSEMENT_REJECTED\":\r\n      return action.payload\r\n\r\n    case 'GET_CLASSEMENT':\r\n      return {...state, userClassement:[...action.payload]};\r\n    case \"GET_CLASSEMENT_REJECTED\":\r\n      return action.payload\r\n\r\n    case 'GET_ALL_CLASSEMENT':\r\n      return {...state, allClassement:[...action.payload]};\r\n    case \"GET_ALL_CLASSEMENT_REJECTED\":\r\n      return action.payload\r\n\r\n    case \"UPDATE_CLASSEMENT\":\r\n      const newArray = [...state.allClassement]\r\n      const newItem = action.datas\r\n      newArray[newArray.findIndex(item => item._id === action.id)] = newItem\r\n      return {\r\n        ...state,\r\n        allClassement:newArray\r\n      };\r\n    case \"UPDATE_CLASSEMENT_REJECTED\":\r\n      return action.payload\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","export const isEmpty = (value) => {\r\n  return (\r\n    value === undefined ||\r\n    value === null ||\r\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n    (typeof value === 'string' && value.trim().length === 0)\r\n  );\r\n}\r\n","import { SET_CURRENT_USER } from '../actions/Types';\r\nimport { isEmpty } from '../hocs/is-empty';\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: []\r\n}\r\n\r\nexport function authReducer(state = initialState, action ) {\r\n  switch(action.type) {\r\n    case SET_CURRENT_USER:\r\n    return {\r\n      ...state,\r\n      isAuthenticated: !isEmpty(action.payload),\r\n      user: [action.payload]\r\n    }\r\n    default:\r\n    return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from '../actions/Types';\r\n\r\nconst initialState = {};\r\n\r\nexport function errorReducer(state = initialState, action ) {\r\n  switch(action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { TeamsReducer } from './TeamsReducer'\r\nimport { SeriesReducer } from './SeriesReducer'\r\nimport { VoteReducer } from './VoteReducer'\r\nimport { ClassementReducer } from './ClassementReducer'\r\nimport { authReducer } from './AuthReducer'\r\nimport { errorReducer } from './ErrorReducer'\r\n\r\nexport default combineReducers({\r\n  teams: TeamsReducer,\r\n  series: SeriesReducer,\r\n  vote: VoteReducer,\r\n  classement: ClassementReducer,\r\n  errors: errorReducer,\r\n  auth: authReducer\r\n})\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n  .register(swUrl)\r\n  .then(registration => {\r\n    registration.onupdatefound = () => {\r\n      const installingWorker = registration.installing;\r\n      if (installingWorker == null) {\r\n        return;\r\n      }\r\n      installingWorker.onstatechange = () => {\r\n        if (installingWorker.state === 'installed') {\r\n          if (navigator.serviceWorker.controller) {\r\n            // At this point, the updated precached content has been fetched,\r\n            // but the previous service worker will still serve the older\r\n            // content until all client tabs are closed.\r\n            console.log(\r\n              'New content is available and will be used when all ' +\r\n              'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n            );\r\n\r\n            // Execute callback\r\n            if (config && config.onUpdate) {\r\n              config.onUpdate(registration);\r\n            }\r\n          } else {\r\n            // At this point, everything has been precached.\r\n            // It's the perfect time to display a\r\n            // \"Content is cached for offline use.\" message.\r\n            console.log('Content is cached for offline use.');\r\n\r\n            // Execute callback\r\n            if (config && config.onSuccess) {\r\n              config.onSuccess(registration);\r\n            }\r\n          }\r\n        }\r\n      };\r\n    };\r\n  })\r\n  .catch(error => {\r\n    console.error('Error during service worker registration:', error);\r\n  });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n  .then(response => {\r\n    // Ensure service worker exists, and that we really are getting a JS file.\r\n    const contentType = response.headers.get('content-type');\r\n    if (\r\n      response.status === 404 ||\r\n      (contentType != null && contentType.indexOf('javascript') === -1)\r\n    ) {\r\n      // No service worker found. Probably a different app. Reload the page.\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister().then(() => {\r\n          window.location.reload();\r\n        });\r\n      });\r\n    } else {\r\n      // Service worker found. Proceed as normal.\r\n      registerValidSW(swUrl, config);\r\n    }\r\n  })\r\n  .catch(() => {\r\n    console.log(\r\n      'No internet connection found. App is running in offline mode.'\r\n    );\r\n  });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// Library import\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\n\r\n// CSS import\r\nimport './style/index.css'\r\nimport './style/materia.min.css'\r\n\r\n// Component import\r\nimport App from './App'\r\n\r\n// Reducers Import\r\nimport reducers from './reducers/reducers'\r\n\r\n// Services import\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n// Middlewares import\r\nimport { applyMiddleware, compose, createStore } from 'redux'\r\nimport { createLogger } from 'redux-logger'\r\nimport thunk from 'redux-thunk';\r\nimport promise from 'redux-promise-middleware'\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancer(applyMiddleware(promise(), thunk, createLogger())))\r\n\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App/>\r\n    </BrowserRouter>\r\n  </Provider>\r\n), document.getElementById('root'))\r\n\r\nexport default store;\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Eastern_Conference.fdd85eae.png\";","module.exports = __webpack_public_path__ + \"static/media/Western_Conference.223abb5a.png\";","module.exports = __webpack_public_path__ + \"static/media/nhl.266661c7.svg\";"],"sourceRoot":""}