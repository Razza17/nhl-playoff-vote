{"version":3,"sources":["actions/Types.js","SetAuthToken.js","actions/Authentication.js","FullNavbars.js","components/Signin.js","actions/SeriesAction.js","components/UserVote.js","components/FormVote.js","components/Vote.js","actions/ClassementAction.js","components/Classement.js","components/Calendrier.js","components/DisplayVote.js","components/AllVote.js","components/ChangeUser.js","components/MonCompte.js","actions/TeamsAction.js","components/FormSeries.js","components/UpdateSeries.js","Content.js","App.js","reducers/TeamsReducer.js","reducers/SeriesReducer.js","reducers/VoteReducer.js","reducers/ClassementReducer.js","hocs/is-empty.js","reducers/AuthReducer.js","reducers/ErrorReducer.js","reducers/reducers.js","serviceWorker.js","index.js","images/stanley_cup.png","images/nhl.svg"],"names":["GET_ERRORS","SET_CURRENT_USER","setAuthToken","token","axios","defaults","headers","common","updateUser","userID","newDatas","dispatch","put","catch","err","type","payload","loginUser","user","history","post","then","res","data","localStorage","setItem","decoded","jwt_decode","setCurrentUser","id","pseudo","push","getUser","getItem","logoutUser","removeItem","window","location","assign","FullNavbars","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isAuthenticated","isAdmin","nextProps","auth","setState","console","log","authNav","react_default","a","createElement","Navbar","Collapse","Nav","className","lib","to","Link","eventKey","onClick","onLogout","bind","bg","expand","Brand","Toggle","aria-controls","Component","connect","Signin","email","password","errors","handleInputChange","assertThisInitialized","handleSubmit","checkKey","e","defineProperty","target","name","value","key","response","Container","fluid","Col","xs","md","span","offset","Card","Header","Body","FormGroup","controlId","FormControl","placeholder","classnames","is-invalid","onChange","onKeyPress","Button","bindActionCreators","getSeries","get","postNhlSeries","series","updateSeries","newData","datas","postSeries","vote","getAllUserSeries","getUserSeries","UserVote","reasultSeries","map","serie","i","team1Name","team1","team1Score","score","team2Name","team2","team2Score","_id","seriesId","Title","src","stanleyCup","alt","Row","img","FormVote","context","_this2","length","votes","router","_this3","preventDefault","selectTeams1","document","getElementById","selectTeams2","valueTeams1","parseInt","valueTeams2","winner","diff","processBdd","nhlLogo","Form","onSubmit","onFormSubmit","lg","Group","Control","as","contextTypes","PropTypes","object","Vote","isVoted","userSeries","UserVote_UserVote","match","components_FormVote","getAllClassement","updateClassement","Classement","getUsersID","asyncToGenerator","regenerator_default","mark","_callee","callApi","wrap","_context","prev","next","sent","abrupt","stop","getSeriesID","_callee2","_context2","keyState","userPseudo","isLoading","usersID","usersPoints","performance","navigation","alert","users","points","allUserSeries","userIndex","indexOf","userPoints","seriesIndex","newArray","provisoire","Table","striped","bordered","hover","responsive","allClassement","stand","getPoints","classement","Calendrier","schedule","dates","getSchedule","game","teamLogoAway","games","teams","away","team","teamLogoHome","home","gameDateReSplit","gameDate","split","leagueRecord","wins","losses","DisplayVote","usersVote","allVote","width","AllVote","userVote","prevState","components_DisplayVote","ChangeUser","modifyUser","newUserInfos","nom","findDOMNode","refs","newNom","prenom","newPrenom","newPseudo","newEmail","InputGroup","defaultValue","ref","changeUser","MonCompte","_Component","modifyName","inherits","createClass","userData","components_ChangeUser","getTeams","FormSeries","insertBdd","getTeam1","getTeam2","optionTeams","UpdateSeries","update","updateBdd","Main","Switch","Route","exact","path","component","App","src_FullNavbars","Content","initialeState","error","nhlSeries","voteSeries","userClassement","isEmpty","undefined","keys","trim","initialState","combineReducers","arguments","action","objectSpread","toConsumableArray","newItem","findIndex","item","concat","Boolean","hostname","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","promise","thunk","createLogger","ReactDOM","render","es","BrowserRouter","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.eb8473e1.chunk.js","sourcesContent":["export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if(token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  }\n  else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from './Types';\nimport setAuthToken from '../SetAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nexport const registerUser = (user, history) => dispatch => {\n  axios.post('/user', user)\n  .then(res => history.push('/signin'))\n  .catch(err => {\n    dispatch({type: GET_ERRORS, payload: err.response.data});\n  });\n}\n\nexport const updateUser = (userID, newDatas) => dispatch => {\n  axios.put('/user/' + userID, newDatas)\n  .catch(err => {\n    dispatch({type: GET_ERRORS, payload: err});\n  });\n}\n\nexport const loginUser = (user, history) => dispatch => {\n  axios.post('/login', user)\n  .then(res => {\n    const { token } = res.data;\n    localStorage.setItem('jwtToken', token);\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n    localStorage.setItem('userID', decoded.id);\n    localStorage.setItem('userPseudo', decoded.pseudo);\n    history.push('/vote')\n  })\n  .catch(err => {\n    dispatch({type: GET_ERRORS, payload: err});\n  });\n}\n\nexport const getUser = (userID) => dispatch => {\n  axios.post('/login', userID)\n  .then(res => {\n    let token = localStorage.getItem('jwtToken');\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n  })\n  .catch(err => {\n    dispatch({type: GET_ERRORS, payload: err});\n  });\n}\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  }\n}\n\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  localStorage.removeItem('userID');\n  localStorage.removeItem('userPseudo');\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n  window.location.assign(\"/\");\n}\n","import React, { Component }  from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { logoutUser } from './actions/Authentication'\n\nclass FullNavbars extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isAuthenticated: localStorage.getItem('jwtToken') !== null ? true : false,\n      isAdmin: localStorage.getItem('userPseudo') === 'C Fab' ? true : false\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    nextProps.auth.isAuthenticated === true && this.setState({isAuthenticated: true})\n    nextProps.auth.user[0].pseudo === 'C Fab' && this.setState({isAdmin: true})\n    console.log(nextProps)\n  }\n\n  onLogout() {\n    this.props.logoutUser()\n  }\n\n  render() {\n    const authNav = (\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <LinkContainer to={\"/vote\"}>\n            <Nav.Link eventKey={0}>Vote !</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to={\"/classement\"}>\n            <Nav.Link eventKey={1}>Classement</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to={\"/calendrier\"}>\n            <Nav.Link eventKey={7}>Calendrier</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to={\"/quiavotequoi\"}>\n            <Nav.Link eventKey={2}>Qui à voté quoi !</Nav.Link>\n          </LinkContainer>\n          {this.state.isAdmin &&\n            <LinkContainer to={\"/series\"}>\n              <Nav.Link eventKey={5}>Ajouter series</Nav.Link>\n            </LinkContainer>\n          }\n          {this.state.isAdmin &&\n            <LinkContainer to={\"/updateseries\"}>\n              <Nav.Link eventKey={6}>Update series</Nav.Link>\n            </LinkContainer>\n          }\n          <LinkContainer to={\"/monCompte\"}>\n            <Nav.Link eventKey={3}>Mon Compte</Nav.Link>\n          </LinkContainer>\n          <Nav.Link eventKey={4} onClick={this.onLogout.bind(this)}>Me déconnecter</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    )\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand className=\"navbar-brand\">NHL vote app</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        {this.state.isAuthenticated && authNav}\n      </Navbar>\n    )\n  }\n}\n\nFullNavbars.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, { logoutUser })(FullNavbars);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Col, FormGroup, FormControl, Button, Card } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport classnames from 'classnames';\n\nimport { loginUser } from '../actions/Authentication';\n\nclass Signin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    }\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.checkKey = this.checkKey.bind(this)\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  checkKey(e) {\n    if(e.key === 'Enter') this.handleSubmit()\n  }\n\n  handleSubmit() {\n    const user = {\n      email: this.state.email,\n      password: this.state.password,\n    }\n    this.props.loginUser(user, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors.response.data\n      });\n    }\n  }\n\n  render() {\n    const {errors} = this.state;\n    return (\n      <Container id=\"login\" className=\"vertical-middle\" fluid>\n        <Col xs={12}  md={{ span: 4, offset: 4 }}>\n          <Card id=\"signinPanel\">\n            <Card.Header><h3>Connecte toi</h3></Card.Header>\n            <Card.Body>\n              <FormGroup controlId=\"email\">\n                <FormControl\n                  type='email'\n                  placeholder=\"Entre ton email\"\n                  className={classnames('form-control form-control-lg', {\n                    'is-invalid': errors.email\n                  })}\n                  name=\"email\"\n                  onChange={ this.handleInputChange }\n                  value={ this.state.email } />\n                {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n              </FormGroup>\n              <FormGroup controlId=\"password\">\n                <FormControl\n                  type='password'\n                  placeholder=\"Entre ton mot de passe\"\n                  className={classnames('form-control form-control-lg', {\n                    'is-invalid': errors.password\n                  })}\n                  name=\"password\"\n                  onChange={ this.handleInputChange }\n                  onKeyPress={ this.checkKey }\n                  value={ this.state.password } />\n                {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n              </FormGroup>\n              <Button onClick={this.handleSubmit}>Envoyer</Button>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Container>\n    )\n  }\n}\n\nSignin.propTypes = {\n  errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors\n})\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators ({\n    loginUser\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)\n","import axios from 'axios';\n\nexport function getSeries() {\n  return function(dispatch) {\n    axios.get('/series')\n    .then(function(response) {\n      dispatch({type:\"GET_SERIES\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_SERIES_REJECTED\", payload:err})\n    })\n  }\n}\n\nexport function postNhlSeries(series) {\n  return function(dispatch) {\n    axios.post('/series', series)\n    .then(function(response) {\n      dispatch({type:\"POST_NHL_SERIES\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"POST_NHL_SERIES_REJECTED\", payload:err})\n    })\n  }\n}\n\nexport function updateSeries(id, newData) {\n  return function(dispatch) {\n    axios.put('/series/' + id, newData)\n    .then(function(response) {\n      dispatch({type:\"UPDATE_SERIES\", payload:response.data, id:id, datas:newData})\n    })\n    .catch(function(err) {\n      dispatch({type:\"UPDATE_SERIES_REJECTED\", payload:err})\n    })\n  }\n}\n\nexport function postSeries(vote) {\n  return function(dispatch) {\n    axios.post('/voteseries', vote)\n    .then(function(response) {\n      dispatch({type:\"POST_SERIES\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"POST_SERIES_REJECTED\", payload:err})\n    })\n  }\n}\n\nexport function getAllUserSeries() {\n  return function(dispatch) {\n    axios.get('/voteseries')\n    .then(function(response) {\n      dispatch({type:\"GET_ALL_USER_SERIES_VOTE\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_ALL_USER_SERIES_VOTE_REJECTED\", payload:err})\n    })\n  }\n}\n\nexport function getUserSeries(id) {\n  return function(dispatch) {\n    axios.get('/voteseries/' + id)\n    .then(function(response) {\n      dispatch({type:\"GET_USER_SERIES_VOTE\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_USER_SERIES_VOTE_REJECTED\", payload:err})\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport { Card, Row, Col } from 'react-bootstrap'\n\n// Components\nimport stanleyCup from '../images/stanley_cup.png'\n\nexport default class UserVote extends Component {\n  render() {\n    const reasultSeries = this.props.series.map((serie, i) => {\n      let team1Name = serie.team1.name\n      let team1Score = serie.team1.score\n      let team2Name = serie.team2.name\n      let team2Score = serie.team2.score\n\n      return (\n        serie._id === this.props.seriesId && <p key={i}><span className={team1Score > team2Score ? 'font-bold' : null}>{team1Name}&nbsp;{team1Score}</span> - <span className={team1Score < team2Score ? 'font-bold' : null}>{team2Score}&nbsp;{team2Name}</span></p>\n      )\n    })\n    return (\n      <Col xs={12} md={{ span:6, offset:3 }}>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              <img className='nhl-logo' src={stanleyCup} alt='Stanley Cup' />\n              Stanley Cup Final\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <Row className='user-series-vote'>\n              <Col xs={4}>\n                <img src={this.props.team1.img} alt={this.props.team1.name} />\n              </Col>\n              <Col xs={7} className={this.props.team1.score === 4 && 'user-series-vote-score font-bold'}>\n                <p>{this.props.team1.name} {this.props.team1.score}</p>\n              </Col>\n            </Row>\n            <Row className='user-series-vote'>\n              <Col xs={4}>\n                <img src={this.props.team2.img} alt={this.props.team2.name} />\n              </Col>\n              <Col xs={7} className={this.props.team2.score === 4 && 'user-series-vote-score font-bold'}>\n                <p>{this.props.team2.name} {this.props.team2.score}</p>\n              </Col>\n            </Row>\n            <Row>\n              <Col className='align-center'>\n                {reasultSeries}\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n      </Col>\n    )\n  }\n}\n","// Lib\nimport React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Actions\nimport { getSeries, postSeries } from '../actions/SeriesAction'\n\n// Components\nimport nhlLogo from '../images/nhl.svg'\n\nclass FormVote extends Component {\n  constructor(props, context) {\n    super(props, context)\n\n    this.props.getSeries()\n\n    this.state = {\n      'vote': [],\n      'errors': ''\n    }\n  }\n\n  processBdd() {\n    if (this.props.series.length === this.state.vote.length) {\n      this.state.vote.map((votes, i) => {\n        this.props.postSeries(votes)\n        return votes\n      })\n\n      this.context.router.history.push('/classement')\n    } else {\n      this.setState({ errors: 'Attention tu as deux équipes égalités' })\n    }\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault()\n\n    this.props.series.map((serie, i) => {\n      let selectTeams1 = document.getElementById(serie.team1.id)\n      let selectTeams2 = document.getElementById(serie.team2.id)\n      let valueTeams1 = parseInt(selectTeams1.value)\n      let valueTeams2 = parseInt(selectTeams2.value)\n\n      if (valueTeams1 !== valueTeams2) {\n        this.state.vote.push({\n          'userID': localStorage.getItem('userID'),\n          'seriesId': serie._id,\n          'team1': {\n            'name': serie.team1.name,\n            'img': serie.team1.img,\n            'score': valueTeams1\n          },\n          'team2': {\n            'name': serie.team2.name,\n            'img': serie.team2.img,\n            'score': valueTeams2\n          },\n          'winner': valueTeams1 > valueTeams2 ? 'team1' : 'team2',\n          'diff': valueTeams1 - valueTeams2\n        })\n        return this.state.vote\n      }\n\n      return false\n    })\n\n    this.processBdd()\n  }\n\n  render() {\n    return (\n      <Col xs={12}>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              <img className='nhl-logo' src={nhlLogo} alt='NHL Logo' />\n              C'est le moment de voter pour les finales de conférence\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={this.onFormSubmit.bind(this)}>\n              <Col xs={12}>\n                {\n                  this.props.series.map((serie, i) => {\n                    return(\n                      <Row key={i} className='form-series'>\n                        <Col xs={12} className='align-center'><h3>Finale de conférence {i === 0 ? 'Est' : 'Ouest'}</h3></Col>\n                        <Col xs={12} md={4} lg={3} className='form-series-col'>\n                          <Col xs={6} md={8} className='align-center'>\n                            <img src={serie.team1.img} alt={serie.team1.name} />\n                            <p className='series-teams-name'>{serie.team1.name}</p>\n                          </Col>\n                          <Col xs={6} md={4}>\n                            <Form.Group>\n                              <Form.Control as=\"select\" id={serie.team1.id}>\n                                <option>0</option>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                              </Form.Control>\n                            </Form.Group>\n                          </Col>\n                        </Col>\n                        <Col xs={12} md={2} className='align-center'>\n                          <p className='series-versus'>VS</p>\n                        </Col>\n                        <Col xs={12} md={4} lg={3} className='form-series-col'>\n                          <Col xs={6} md={4}>\n                            <Form.Group>\n                              <Form.Control as=\"select\" id={serie.team2.id}>\n                                <option>0</option>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                              </Form.Control>\n                            </Form.Group>\n                          </Col>\n                          <Col xs={6} md={8} className='align-center'>\n                            <img src={serie.team2.img} alt={serie.team2.name} />\n                            <p className='series-teams-name'>{serie.team2.name}</p>\n                          </Col>\n                        </Col>\n                      </Row>\n                    )\n                  })\n                }\n              </Col>\n              <Col xs={12} className='align-center'>\n                <Button type=\"submit\">Submit</Button>\n                {this.state.errors !== '' && (<Col xs={12} className=\"invalid-feedback\">{this.state.errors}</Col>)}\n              </Col>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Col>\n    )\n  }\n}\n\nFormVote.contextTypes = {\n  router: PropTypes.object\n}\n\nconst mapStateToProps = state => {\n  return {\n    series: state.series.series\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getSeries, postSeries\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormVote);\n","// Lib\nimport React, { Component } from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Actions\nimport { getUserSeries } from '../actions/SeriesAction'\nimport { getSeries } from '../actions/SeriesAction'\n\n// Components\nimport UserVote from '../components/UserVote'\nimport FormVote from '../components/FormVote'\n\nclass Vote extends Component {\n\n  constructor(props) {\n    super(props)\n\n    let userID = localStorage.getItem(\"userID\");\n\n    this.state = {\n      userID: userID,\n      isVoted: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.getUserSeries(this.state.userID)\n    this.props.userSeries.length === 1 && this.setState({ isVoted: true })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    nextProps.userSeries.length !== 0 && this.setState({isVoted: true})\n  }\n\n  render() {\n    return (\n      <Container id='vote-form' fluid>\n        <Row>\n          {this.state.isVoted ? this.props.userSeries.map((vote, i) => <UserVote key={i} {...vote} match={i} series={this.props.series} />) : <FormVote />}\n        </Row>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userSeries: state.series.userSeries,\n    series: state.series.series\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getUserSeries, getSeries\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Vote);\n","import axios from 'axios';\n\n// POST CLASSEMENT\nexport function postClassement(classement) {\n  return function(dispatch) {\n    axios.post('/classement', classement)\n    .then(function(response) {\n      dispatch({type:\"POST_CLASSEMENT\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"POST_CLASSEMENT_REJECTED\", payload:err})\n    })\n  }\n}\n\n// GET CLASSEMENT BY USER\nexport function getClassement(id) {\n  return function(dispatch) {\n    axios.get('/classement/' + id)\n    .then(function(response) {\n      dispatch({type:\"GET_CLASSEMENT\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_CLASSEMENT_REJECTED\", payload:err})\n    })\n  }\n}\n\n// GET ALL CLASSEMENT\nexport function getAllClassement() {\n  return function(dispatch) {\n    axios.get('/classement')\n    .then(function(response) {\n      dispatch({type:\"GET_ALL_CLASSEMENT\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_ALL_CLASSEMENT_REJECTED\", payload:err})\n    })\n  }\n}\n\n// UPDATE CLASSEMENT BY USER\nexport function updateClassement(id, newData) {\n  return function(dispatch) {\n    axios.put('/classement/' + id, newData)\n    .then(function(response) {\n      dispatch({type:\"UPDATE_CLASSEMENT\", payload:response.data, userID:id, datas:newData})\n    })\n    .catch(function(err) {\n      dispatch({type:\"UPDATE_CLASSEMENT_REJECTED\", payload:err})\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport { Col, Table, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport axios from 'axios'\n\nimport { getAllClassement } from '../actions/ClassementAction'\nimport { getSeries, getAllUserSeries } from '../actions/SeriesAction'\nimport { updateClassement } from '../actions/ClassementAction'\n\nclass Classement extends Component {\n  constructor(props) {\n    super(props)\n\n    this.props.getAllClassement()\n    this.props.getSeries()\n    this.props.getAllUserSeries()\n\n    this.state = {\n      keyState: 0,\n      userPseudo: localStorage.getItem(\"userPseudo\"),\n      isAdmin: false,\n      isLoading: false,\n      usersID: [],\n      usersPoints: [],\n      series: []\n    }\n  }\n\n  componentDidMount() {\n    if (window.performance) {\n      if (performance.navigation.type == 1) {\n        this.setState({keyState: this.state.keyState + 1})\n      } else {\n        alert( \"This page is not reloaded\");\n      }\n    }\n\n    this.state.userPseudo === 'C Fab' && this.setState({ isAdmin: true })\n\n    this.getUsersID().then(res => {\n      res.map(users => {\n        this.state.usersID.push(users.userID)\n        this.state.usersPoints.push(users.points)\n        return [this.state.usersID, this.state.usersPoints]\n      })\n      return res\n    })\n\n    this.getSeriesID().then(res => {\n      res.map(serie => {\n        this.state.series.push(serie._id)\n        return this.state.series\n      })\n      return res\n    })\n  }\n\n  getUsersID = async () => {\n    const callApi = await axios.get('/classement')\n    const response = await callApi.data\n\n    return response\n  }\n\n  getSeriesID = async () => {\n    const callApi = await axios.get('/series')\n    const response = await callApi.data\n\n    return response\n  }\n\n  getPoints() {\n    this.props.allUserSeries.map((vote, i) => {\n      let userIndex = this.state.usersID.indexOf(vote.userID)\n      let userPoints = this.state.usersPoints[userIndex]\n      let seriesIndex = this.state.series.indexOf(vote.seriesId)\n\n      console.log('prev points : ', vote.userID + ' : ' + userPoints)\n\n      // console.log('series : ', this.props.series[seriesIndex])\n      // console.log('vote : ', vote)\n      // console.log('series winner : ', this.props.series[seriesIndex].winner)\n      // console.log('vote winner : ', vote.winner)\n\n      if(this.props.series[seriesIndex].winner === vote.winner && this.props.series[seriesIndex].diff === vote.diff) {\n        userPoints += 3\n      } else if(this.props.series[seriesIndex].winner === vote.winner) {\n        userPoints += 1\n      }\n\n      const newArray = this.state.usersPoints\n      newArray[userIndex] = userPoints\n\n      this.setState({\n        usersPoints: newArray\n      })\n\n      console.log('next points : ', vote.userID + ' : ' + userPoints)\n\n\n      return userPoints\n    })\n\n    this.state.usersID.map((user, i) => {\n      this.props.updateClassement(user, {provisoire:this.state.usersPoints[i]})\n      return this.state.usersPoints\n    })\n  }\n\n  render() {\n    return (\n      <Col xs={12} md={{ span: 5, offset: 3 }} className='align-center' key={this.state.keyState}>\n        <Table striped bordered hover responsive>\n          <thead>\n            <tr>\n              <th className='align-center'>Classement</th>\n              <th className='align-center'>Pseudo</th>\n              <th className='align-center'>Points</th>\n              <th className='align-center'>Points provisoire</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.allClassement.map((stand, i) => <tr key={i}><td>{i + 1}</td><td>{stand.userPseudo}</td><td>{stand.points}</td><td>{stand.provisoire}</td></tr>)}\n          </tbody>\n        </Table>\n        {this.state.isAdmin && <Col xs={12} className=\"align-center\"><Button onClick={this.getPoints.bind(this)}>Calculer les points</Button></Col>}\n        {this.state.isLoading && <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>}\n      </Col>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    allClassement: state.classement.allClassement,\n    series: state.series.series,\n    allUserSeries: state.series.allUserSeries\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getAllClassement,\n    getSeries, getAllUserSeries,\n    updateClassement\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Classement);\n","import React, { Component } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport axios from 'axios'\n\nclass Calendrier extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      schedule: []\n    }\n  }\n\n  componentDidMount() {\n    this.getUsersID()\n    .then(res => this.setState({ schedule: res.dates }))\n    .catch(err => console.log(err))\n  }\n\n  getUsersID = async () => {\n    // let date = new Date()\n    // let day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate()\n    // let getMonth = date.getMonth()\n    // let realMonth = getMonth + 1\n    // let month = realMonth < 10 ? '0' + realMonth : realMonth\n    // let year = date.getFullYear()\n    // let fullDate = year + '-' + month + '-' + day\n\n    const callApi = await axios.get('https://statsapi.web.nhl.com/api/v1/schedule?startDate=2019-05-27&endDate=2019-07-01')\n    const response = await callApi.data\n\n    return response\n  }\n\n  render() {\n    const getSchedule = this.state.schedule.length > 0 && this.state.schedule.map((schedule, i) => {\n      let months = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre']\n      let game = i + 1\n      let teamLogoAway = 'https://www.nhl.com/site-core/images/team/logo/current/'+schedule.games[0].teams.away.team.id+'_dark.svg'\n      let teamLogoHome = 'https://www.nhl.com/site-core/images/team/logo/current/'+schedule.games[0].teams.home.team.id+'_dark.svg'\n      let gameDateSplit = schedule.games[0].gameDate.split('T')\n      let gameDateReSplit = gameDateSplit[0].split('-')\n      let gameDateDay = gameDateReSplit[2]\n      let gameDateMonth = months[parseInt(gameDateReSplit[1], 10) - 1]\n      let gameDateYear = gameDateReSplit[0]\n      let gameDate = gameDateDay + ' ' + gameDateMonth + ' ' + gameDateYear\n\n      return (\n        <div className='calendar-section' key={i}>\n          <Row>\n            <Col className='calendar-section-game'>\n              <p>GAME</p>\n            </Col>\n            <Col className='calendar-section-logo'>\n              <img src={teamLogoAway} alt={schedule.games[0].teams.away.team.name} />\n            </Col>\n            <Col>\n              <p className='calendar-section-name'>{schedule.games[0].teams.away.team.name}</p>\n            </Col>\n            <Col>\n              <p className='calendar-section-win'>Wins : {schedule.games[0].teams.away.leagueRecord.wins}</p>\n              <p>Losses : {schedule.games[0].teams.away.leagueRecord.losses}</p>\n            </Col>\n            <Col>\n              <p className='calendar-section-score'>{schedule.games[0].teams.away.score}</p>\n            </Col>\n            <Col className='calendar-section-date'>\n              <p>{gameDate}</p>\n            </Col>\n          </Row>\n          <Row>\n            <Col className='calendar-section-game'>\n              <p><span className='calendar-section-game-number'>{game}</span></p>\n            </Col>\n            <Col className='calendar-section-logo'>\n              <img src={teamLogoHome} alt={schedule.games[0].teams.home.team.name} />\n            </Col>\n            <Col>\n              <p className='calendar-section-name'>{schedule.games[0].teams.home.team.name}</p>\n            </Col>\n            <Col>\n              <p className='calendar-section-win'>Wins : {schedule.games[0].teams.home.leagueRecord.wins}</p>\n              <p>Losses : {schedule.games[0].teams.home.leagueRecord.losses}</p>\n            </Col>\n            <Col>\n              <p className='calendar-section-score'>{schedule.games[0].teams.home.score}</p>\n            </Col>\n            <Col>\n            </Col>\n          </Row>\n        </div>\n      )\n    })\n    return (\n      <Col xs={12} className='calendar align-center'>\n        {getSchedule}\n      </Col>\n    )\n  }\n}\n\nexport default Calendrier;\n","// Lib\nimport React, { Component } from 'react'\nimport { Row, Col, Card } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { getAllUserSeries } from '../actions/SeriesAction'\n\nclass DisplayVote extends Component {\n  constructor(props) {\n    super(props)\n\n    this.props.getAllUserSeries()\n  }\n\n  render() {\n    const usersVote = (this.props.allVote.map((votes, i) => {\n      if (votes.userID === this.props.userID) {\n        return (\n          <Col xs={12} key={i} className='align-center'>\n            <p>\n              <img src={votes.team1.img} alt={votes.team1.name} width='25%' /> &nbsp;&nbsp;\n              <span className={votes.team1.score === 4 ? 'font-bold' : ''}>{votes.team1.score}</span>\n              &nbsp;&nbsp; Vs &nbsp;&nbsp;\n              <span className={votes.team2.score === 4 ? 'font-bold' : ''}>{votes.team2.score}</span>\n              &nbsp;&nbsp;\n              <img src={votes.team2.img} alt={votes.team2.name} width='25%' />\n            </p>\n          </Col>\n        )\n      }\n      return true\n    }))\n    return (\n      <Card>\n        <Card.Header>\n          <Card.Title>Vote de {this.props.userPseudo}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            {usersVote}\n          </Row>\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    allVote: state.series.allUserSeries\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getAllUserSeries\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayVote);\n","// Lib\nimport React, { Component } from 'react'\nimport { Container, Col } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Actions\nimport { getUserSeries, getAllUserSeries } from '../actions/SeriesAction'\nimport { getAllClassement } from '../actions/ClassementAction'\n\n//Components\nimport DisplayVote from './DisplayVote'\n\nclass AllVote extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.props.getUserSeries(localStorage.getItem(\"userID\"))\n    this.props.getAllUserSeries()\n    this.props.getAllClassement()\n\n    this.state = {\n      isVoted: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.userVote.length > 0 && this.setState({ isVoted: true })\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.allVote.length !== this.props.allVote.length) {\n      this.setState({ isVoted: true })\n    }\n  }\n\n  render() {\n    return (\n      <Container id='vote-form' fluid>\n        <Col xs={12} md={{ span:6, offset:3 }}>\n          {this.state.isVoted ? this.props.classement.map((users, i) => <DisplayVote key={i} {...users}/>) : <p>Il faut que tu vote d'abord !</p>}\n        </Col>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userVote: state.series.userSeries,\n    classement: state.classement.allClassement,\n    allVote: state.series.allUserSeries\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getUserSeries, getAllUserSeries,\n    getAllClassement\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllVote);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Col, Card, Button, FormGroup, InputGroup, FormControl } from 'react-bootstrap'\nimport { findDOMNode } from 'react-dom'\n\nimport { updateUser, logoutUser } from '../actions/Authentication'\n\nclass ChangeUser extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let userID = this.props.id\n\n    this.state = {\n      userID: userID,\n      modifyUser: false\n    }\n  }\n\n  modifyUser() {\n    this.setState({modifyUser: !this.state.modifyUser})\n  }\n\n  changeUser() {\n    let newUserInfos = {\n      nom: findDOMNode(this.refs.newNom).value,\n      prenom: findDOMNode(this.refs.newPrenom).value,\n      pseudo: findDOMNode(this.refs.newPseudo).value,\n      email: findDOMNode(this.refs.newEmail).value\n    }\n    this.props.updateUser(this.state.userID, newUserInfos)\n    this.props.logoutUser()\n  }\n\n  render() {\n    return (\n      <Col xs={12} md={{ span: 4, offset: 4 }}>\n        <Card>\n          <Card.Header>\n            <Card.Title>Modifie tes informations de compte</Card.Title>\n          </Card.Header>\n          <Card.Body>\n            {this.state.modifyUser ?\n              <ul>\n                <li>\n                  <FormGroup controlId=\"newNom\">\n                    <InputGroup>Change ton Nom :</InputGroup>\n                    <FormControl\n                      type='text'\n                      defaultValue={this.props.nom}\n                      ref='newNom' />\n                  </FormGroup>\n                </li>\n                <li>\n                  <FormGroup controlId=\"newPrenom\">\n                    <InputGroup>Change ton Prénom :</InputGroup>\n                    <FormControl\n                      type='text'\n                      defaultValue={this.props.prenom}\n                      ref='newPrenom' />\n                  </FormGroup>\n                </li>\n                <li>\n                  <FormGroup controlId=\"newPseudo\">\n                    <InputGroup>Change ton pseudo :</InputGroup>\n                    <FormControl\n                      type='text'\n                      defaultValue={this.props.pseudo}\n                      ref='newPseudo' />\n                  </FormGroup>\n                </li>\n                <li>\n                  <FormGroup controlId=\"newEmail\">\n                    <InputGroup>Change ton email :</InputGroup>\n                    <FormControl\n                      type='text'\n                      defaultValue={this.props.email}\n                      ref='newEmail' />\n                  </FormGroup>\n                </li>\n                <li>\n                  <Button onClick={this.changeUser.bind(this)}>Sauvegarder</Button>\n                  <Button onClick={this.modifyUser.bind(this)}>Annuler</Button>\n                </li>\n                <li><p>Attention tu seras déconnecté automatiquement afin de faire la mise à jour. Il faudra te connecter à nouveau.</p></li>\n              </ul> :\n              <ul>\n                <li>Nom : {this.props.nom}</li>\n                <li>Prénom : {this.props.prenom}</li>\n                <li>Pseudo : {this.props.pseudo}</li>\n                <li>Email : {this.props.email}</li>\n                <li><Button onClick={this.modifyUser.bind(this)}>Modifier</Button></li>\n              </ul>\n            }\n          </Card.Body>\n        </Card>\n      </Col>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateUser, logoutUser\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(ChangeUser);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Container, Col } from 'react-bootstrap'\n\nimport { getUser } from '../actions/Authentication'\n\nimport ChangeUser from '../components/ChangeUser'\n\nexport class MonCompte extends Component {\n\n  constructor(props) {\n    super(props)\n    let userPseudo = localStorage.getItem(\"userPseudo\")\n    let userID = localStorage.getItem(\"userID\")\n\n    this.state = {\n      userPseudo: userPseudo,\n      userID: userID,\n      modifyName: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.getUser({ id: this.state.userID })\n  }\n\n  render() {\n    return (\n      <Container id=\"mon-compte\" className=\"vertical-middle\" fluid>\n        <Col xs={12}>\n          <h1 className=\"align-center\">Voici ton compte {this.state.userPseudo}</h1>\n          {this.props.userData.map((user, i) => <ChangeUser key={i} {...user} />)}\n        </Col>\n      </Container>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    userData: state.auth.user\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getUser\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonCompte)\n","import axios from 'axios';\n\n// GET ARME\nexport function getTeams() {\n  return function(dispatch) {\n    axios.get('/teams')\n    .then(function(response) {\n      dispatch({type:\"GET_TEAMS\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_TEAMS_REJECTED\", payload:err})\n    })\n  }\n}\n","// Lib\nimport React, { Component } from 'react'\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Actions\nimport { getTeams } from '../actions/TeamsAction'\nimport { postNhlSeries } from '../actions/SeriesAction'\n\nclass FormSeries extends Component {\n  constructor(props) {\n    super(props)\n\n    this.props.getTeams()\n  }\n\n  processBdd(team1, team2) {\n    let insertBdd = {\n      'team1': team1,\n      'team2': team2,\n      'winner': '',\n      'diff': 0\n    }\n\n    this.props.postNhlSeries(insertBdd)\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault()\n\n    let getTeam1 = document.getElementById('team1').value\n    let getTeam2 = document.getElementById('team2').value\n    let team1 = {}\n    let team2 = {}\n\n    this.props.teams.map((team, i) => {\n      if(getTeam1 === team.name) {\n        team1 = {\n          'id': team._id,\n          'name': team.name,\n          'img': team.img,\n          'score': 0\n        }\n      }\n      if(getTeam2 === team.name) {\n        team2 = {\n          'id': team._id,\n          'name': team.name,\n          'img': team.img,\n          'score': 0\n        }\n      }\n      return [team1, team2]\n    })\n\n    this.processBdd(team1, team2)\n  }\n\n  render() {\n    const optionTeams = this.props.teams.map((team, i) => <option key={i}>{team.name}</option>)\n    return (\n      <Col xs={12} md={{ span:6 , offset:3 }}>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              Mise en place des series\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={this.onFormSubmit.bind(this)}>\n              <Col xs={12} className='align-center'><h3>Match</h3></Col>\n              <Row className='form-series'>\n                <Col xs={5}>\n                  <Form.Group>\n                    <Form.Control as=\"select\" id='team1'>\n                      {optionTeams}\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n                <Col xs={2} className='align-center'>\n                  <p className='series-versus'>VS</p>\n                </Col>\n                <Col xs={5}>\n                  <Form.Group>\n                    <Form.Control as=\"select\" id='team2'>\n                      {optionTeams}\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n              </Row>\n              <Col xs={12} className='align-center'>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Col>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    teams: state.teams.teams\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getTeams,\n    postNhlSeries\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormSeries);\n","// Lib\nimport React, { Component } from 'react'\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Actions\nimport { getSeries, updateSeries } from '../actions/SeriesAction'\n\nclass UpdateSeries extends Component {\n  constructor(props, context) {\n    super(props, context)\n\n    this.props.getSeries()\n\n    this.state = {\n      'update': []\n    }\n  }\n\n  updateBdd() {\n    this.state.update.map((votes, i) => this.props.updateSeries(votes._id, votes))\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault()\n\n    this.props.series.map((serie, i) => {\n      let selectTeams1 = document.getElementById(serie.team1.id)\n      let selectTeams2 = document.getElementById(serie.team2.id)\n      let valueTeams1 = parseInt(selectTeams1.value)\n      let valueTeams2 = parseInt(selectTeams2.value)\n\n      this.state.update.push({\n        '_id': serie._id,\n        'team1': {\n          'name': serie.team1.name,\n          'img': serie.team1.img,\n          'score': valueTeams1,\n          'id': serie.team1.id\n        },\n        'team2': {\n          'name': serie.team2.name,\n          'img': serie.team2.img,\n          'score': valueTeams2,\n          'id': serie.team2.id\n        },\n        'winner': valueTeams1 > valueTeams2 ? 'team1' : (valueTeams1 === valueTeams2 ? '' :'team2'),\n        'diff': valueTeams1 - valueTeams2\n      })\n      return this.state.update\n    })\n\n    this.updateBdd()\n  }\n\n  render() {\n    return (\n      <Col xs={12}>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              Mise à jour des Series\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={this.onFormSubmit.bind(this)}>\n              <Col xs={12}>\n                {\n                  this.props.series.map((serie, i) => {\n                    return(\n                      <Row key={i} className='form-series'>\n                        <Col xs={12} className='align-center'><h3>Match {i + 1}</h3></Col>\n                        <Col xs={12} md={4} lg={3} className='form-series-col'>\n                          <Col xs={6} md={8} className='align-center'>\n                            <img src={serie.team1.img} alt={serie.team1.name} />\n                            <p className='series-teams-name'>{serie.team1.name}</p>\n                          </Col>\n                          <Col xs={6} md={4}>\n                            <Form.Group>\n                              <Form.Control as=\"input\" id={serie.team1.id} defaultValue={serie.team1.score} />\n                            </Form.Group>\n                          </Col>\n                        </Col>\n                        <Col xs={12} md={2} className='align-center'>\n                          <p className='series-versus'>VS</p>\n                        </Col>\n                        <Col xs={12} md={4} lg={3} className='form-series-col'>\n                          <Col xs={6} md={4}>\n                            <Form.Group>\n                              <Form.Control as='input' id={serie.team2.id} defaultValue={serie.team2.score} />\n                            </Form.Group>\n                          </Col>\n                          <Col xs={6} md={8} className='align-center'>\n                            <img src={serie.team2.img} alt={serie.team2.name} />\n                            <p className='series-teams-name'>{serie.team2.name}</p>\n                          </Col>\n                        </Col>\n                      </Row>\n                    )\n                  })\n                }\n              </Col>\n              <Col xs={12} className='align-center'>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Col>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    series: state.series.series\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getSeries, updateSeries\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateSeries);\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Signin from \"./components/Signin\"\nimport Vote from \"./components/Vote\"\nimport Classement from \"./components/Classement\"\nimport Calendrier from \"./components/Calendrier\"\nimport AllVote from \"./components/AllVote\"\nimport MonCompte from \"./components/MonCompte\"\nimport FormSeries from \"./components/FormSeries\"\nimport UpdateSeries from \"./components/UpdateSeries\"\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component={Signin}/>\n      <Route path='/vote' component={Vote}/>\n      <Route path='/classement' component={Classement}/>\n      <Route path='/calendrier' component={Calendrier}/>\n      <Route path='/quiavotequoi' component={AllVote}/>\n      <Route path='/monCompte' component={MonCompte}/>\n      <Route path='/series' component={FormSeries}/>\n      <Route path='/updateseries' component={UpdateSeries}/>\n    </Switch>\n  </main>\n)\n\nexport default Main\n","import React, { Component } from 'react'\nimport FullNavbars from './FullNavbars'\nimport Content from './Content'\n\nclass App extends Component {\n  render() {\n    return (\n      <section>\n        <FullNavbars />\n        <Content />\n      </section>\n    )\n  }\n}\n\nexport default App;\n","const initialeState = {\n  teams: [],\n  error: null\n}\n\nexport const TeamsReducer = (state=initialeState, action) => {\n  switch (action.type) {\n    case 'GET_TEAMS':\n      return {...state, teams:[...action.payload]};\n    case \"GET_TEAMS_REJECTED\":\n      return action.payload\n    default: {\n      return state\n    }\n  }\n}\n","const initialeState = {\n  series: [],\n  nhlSeries: [],\n  voteSeries: [],\n  userSeries: [],\n  allUserSeries: [],\n  error: null\n}\n\nexport const SeriesReducer = (state=initialeState, action) => {\n  switch (action.type) {\n    case 'GET_SERIES':\n      return {...state, series:[...action.payload]};\n    case \"GET_SERIES_REJECTED\":\n      return action.payload\n\n    case 'POST_NHL_SERIES':\n      return {...state, nhlSeries:[...action.payload]}\n    case \"POST_NHL_SERIES_REJECTED\":\n      return action.payload\n\n    case \"UPDATE_SERIES\":\n      const newArray = [...state.series]\n      const newItem = action.datas\n      newArray[newArray.findIndex(item => item._id === action.id)] = newItem\n      return {\n        ...state,\n        series:newArray\n      };\n    case \"UPDATE_SERIES_REJECTED\":\n      return action.payload\n\n    case 'POST_SERIES':\n      return {...state, voteSeries:[...action.payload]}\n    case \"POST_SERIES_REJECTED\":\n      return action.payload\n\n    case 'GET_USER_SERIES_VOTE':\n      return {...state, userSeries:[...action.payload]}\n    case \"GET_USER_SERIES_VOTE_REJECTED\":\n      return action.payload\n\n    case 'GET_ALL_USER_SERIES_VOTE':\n      return {...state, allUserSeries:[...action.payload]}\n    case \"GET_ALL_USER_SERIES_VOTE_REJECTED\":\n      return action.payload\n\n    default: {\n      return state\n    }\n  }\n}\n","const initialeState = {\n  vote: [],\n  userVote: [],\n  allVote: []\n}\n\nexport const VoteReducer = (state=initialeState, action) => {\n  switch (action.type) {\n    case 'POST_VOTE':\n      return {...state, vote:[...state.vote, action.payload]}\n    case \"POST_VOTE_REJECTED\":\n      return action.payload\n    case 'GET_VOTE':\n      return {...state, userVote:[...action.payload]};\n    case \"GET_VOTE_REJECTED\":\n      return action.payload\n    case 'GET_ALL_VOTE':\n      return {...state, allVote:[...action.payload]};\n    case \"GET_ALL_VOTE_REJECTED\":\n      return action.payload\n    default: {\n      return state\n    }\n  }\n}\n","const initialeState = {\n  classement: [],\n  userClassement: [],\n  allClassement: []\n}\n\nexport const ClassementReducer = (state=initialeState, action) => {\n  switch (action.type) {\n    case 'POST_CLASSEMENT':\n      return {...state, classement:[...state.classement, action.payload]}\n    case \"POST_CLASSEMENT_REJECTED\":\n      return action.payload\n\n    case 'GET_CLASSEMENT':\n      return {...state, userClassement:[...action.payload]};\n    case \"GET_CLASSEMENT_REJECTED\":\n      return action.payload\n\n    case 'GET_ALL_CLASSEMENT':\n      return {...state, allClassement:[...action.payload]};\n    case \"GET_ALL_CLASSEMENT_REJECTED\":\n      return action.payload\n\n    case \"UPDATE_CLASSEMENT\":\n      const newArray = [...state.allClassement]\n      const newItem = action.datas\n      newArray[newArray.findIndex(item => item._id === action.id)] = newItem\n      return {\n        ...state,\n        allClassement:newArray\n      };\n    case \"UPDATE_CLASSEMENT_REJECTED\":\n      return action.payload\n    default: {\n      return state\n    }\n  }\n}\n","export const isEmpty = (value) => {\n  return (\n    value === undefined ||\n    value === null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0)\n  );\n}\n","import { SET_CURRENT_USER } from '../actions/Types';\nimport { isEmpty } from '../hocs/is-empty';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: []\n}\n\nexport function authReducer(state = initialState, action ) {\n  switch(action.type) {\n    case SET_CURRENT_USER:\n    return {\n      ...state,\n      isAuthenticated: !isEmpty(action.payload),\n      user: [action.payload]\n    }\n    default:\n    return state;\n  }\n}\n","import { GET_ERRORS } from '../actions/Types';\n\nconst initialState = {};\n\nexport function errorReducer(state = initialState, action ) {\n  switch(action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux'\nimport { TeamsReducer } from './TeamsReducer'\nimport { SeriesReducer } from './SeriesReducer'\nimport { VoteReducer } from './VoteReducer'\nimport { ClassementReducer } from './ClassementReducer'\nimport { authReducer } from './AuthReducer'\nimport { errorReducer } from './ErrorReducer'\n\nexport default combineReducers({\n  teams: TeamsReducer,\n  series: SeriesReducer,\n  vote: VoteReducer,\n  classement: ClassementReducer,\n  errors: errorReducer,\n  auth: authReducer\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n  .register(swUrl)\n  .then(registration => {\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n      if (installingWorker == null) {\n        return;\n      }\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            // At this point, the updated precached content has been fetched,\n            // but the previous service worker will still serve the older\n            // content until all client tabs are closed.\n            console.log(\n              'New content is available and will be used when all ' +\n              'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n            );\n\n            // Execute callback\n            if (config && config.onUpdate) {\n              config.onUpdate(registration);\n            }\n          } else {\n            // At this point, everything has been precached.\n            // It's the perfect time to display a\n            // \"Content is cached for offline use.\" message.\n            console.log('Content is cached for offline use.');\n\n            // Execute callback\n            if (config && config.onSuccess) {\n              config.onSuccess(registration);\n            }\n          }\n        }\n      };\n    };\n  })\n  .catch(error => {\n    console.error('Error during service worker registration:', error);\n  });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n  .then(response => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (\n      response.status === 404 ||\n      (contentType != null && contentType.indexOf('javascript') === -1)\n    ) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n  .catch(() => {\n    console.log(\n      'No internet connection found. App is running in offline mode.'\n    );\n  });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Library import\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\n// CSS import\nimport './style/index.css'\nimport './style/materia.min.css'\n\n// Component import\nimport App from './App'\n\n// Reducers Import\nimport reducers from './reducers/reducers'\n\n// Services import\nimport * as serviceWorker from './serviceWorker'\n\n// Middlewares import\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware'\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancer(applyMiddleware(promise(), thunk, createLogger())))\n\nReactDOM.render((\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n), document.getElementById('root'))\n\nexport default store;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/stanley_cup.d063ca1b.png\";","module.exports = __webpack_public_path__ + \"static/media/nhl.266661c7.svg\";"],"sourceRoot":""}