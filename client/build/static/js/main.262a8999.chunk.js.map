{"version":3,"sources":["actions/Types.js","SetAuthToken.js","actions/Authentication.js","FullNavbars.js","components/Signup.js","components/Signin.js","actions/SeriesAction.js","components/UserVote.js","components/FormVote.js","components/Vote.js","actions/ClassementAction.js","components/Classement.js","components/DisplayVote.js","components/AllVote.js","components/ChangeUser.js","components/MonCompte.js","actions/TeamsAction.js","components/FormSeries.js","components/UpdateSeries.js","Content.js","App.js","reducers/TeamsReducer.js","reducers/SeriesReducer.js","reducers/VoteReducer.js","reducers/ClassementReducer.js","hocs/is-empty.js","reducers/AuthReducer.js","reducers/ErrorReducer.js","reducers/reducers.js","serviceWorker.js","index.js","images/Eastern_Conference.png","images/Western_Conference.png","images/nhl.svg"],"names":["GET_ERRORS","SET_CURRENT_USER","setAuthToken","token","axios","defaults","headers","common","updateUser","userID","newDatas","dispatch","put","catch","err","type","payload","loginUser","user","history","post","then","res","data","localStorage","setItem","decoded","jwt_decode","setCurrentUser","id","pseudo","push","getUser","getItem","logoutUser","removeItem","window","location","assign","FullNavbars","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isAuthenticated","isAdmin","nextProps","auth","setState","authNav","react_default","a","createElement","Navbar","Collapse","Nav","className","lib","to","Link","eventKey","onClick","onLogout","bind","bg","expand","Brand","Toggle","aria-controls","Component","connect","Signup","nom","prenom","email","password","password_confirm","errors","handleInputChange","assertThisInitialized","handleSubmit","e","defineProperty","target","name","value","registerUser","Container","fluid","Row","Col","xs","md","span","offset","Card","Header","Body","Form","Group","controlId","Control","classnames","is-invalid","placeholder","onChange","Button","response","Signin","FormGroup","FormControl","bindActionCreators","getSeries","get","postNhlSeries","series","updateSeries","newData","datas","postSeries","vote","getAllUserSeries","getUserSeries","UserVote","lg","Title","match","src","easternLogo","alt","westernLogo","team1","img","score","team2","map","serie","i","result","_id","seriesId","key","FormVote","context","_this2","length","votes","router","_this3","preventDefault","selectTeams1","document","getElementById","selectTeams2","valueTeams1","parseInt","valueTeams2","winner","diff","processBdd","nhlLogo","onSubmit","onFormSubmit","as","contextTypes","PropTypes","object","Vote","isVoted","userSeries","UserVote_UserVote","components_FormVote","getAllClassement","updateClassement","Classement","userPseudo","usersID","usersPoints","allClassement","classement","points","allUserSeries","userIndex","indexOf","userPoints","seriesIndex","newArray","newItem","provisoire","Table","striped","bordered","hover","responsive","stand","getPoints","DisplayVote","usersVote","allVote","width","AllVote","userVote","prevState","users","components_DisplayVote","ChangeUser","modifyUser","newUserInfos","findDOMNode","refs","newNom","newPrenom","newPseudo","newEmail","InputGroup","defaultValue","ref","changeUser","MonCompte","_Component","modifyName","inherits","createClass","userData","components_ChangeUser","getTeams","FormSeries","insertBdd","getTeam1","getTeam2","teams","team","optionTeams","UpdateSeries","update","updateBdd","Main","Switch","Route","exact","path","component","App","src_FullNavbars","Content","initialeState","error","nhlSeries","voteSeries","userClassement","isEmpty","undefined","keys","trim","initialState","combineReducers","arguments","action","objectSpread","toConsumableArray","findIndex","item","concat","Boolean","hostname","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","promise","thunk","createLogger","ReactDOM","render","es","BrowserRouter","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.262a8999.chunk.js","sourcesContent":["export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if(token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  }\n  else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from './Types';\nimport setAuthToken from '../SetAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nexport const registerUser = (user, history) => dispatch => {\n  axios.post('/user', user)\n  .then(res => history.push('/signin'))\n  .catch(err => {\n    dispatch({type: GET_ERRORS, payload: err.response.data});\n  });\n}\n\nexport const updateUser = (userID, newDatas) => dispatch => {\n  axios.put('/user/' + userID, newDatas)\n  .catch(err => {\n    dispatch({type: GET_ERRORS, payload: err});\n  });\n}\n\nexport const loginUser = (user, history) => dispatch => {\n  axios.post('/login', user)\n  .then(res => {\n    const { token } = res.data;\n    localStorage.setItem('jwtToken', token);\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n    localStorage.setItem('userID', decoded.id);\n    localStorage.setItem('userPseudo', decoded.pseudo);\n    history.push('/vote')\n  })\n  .catch(err => {\n    dispatch({type: GET_ERRORS, payload: err});\n  });\n}\n\nexport const getUser = (userID) => dispatch => {\n  axios.post('/login', userID)\n  .then(res => {\n    let token = localStorage.getItem('jwtToken');\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n  })\n  .catch(err => {\n    dispatch({type: GET_ERRORS, payload: err});\n  });\n}\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  }\n}\n\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  localStorage.removeItem('userID');\n  localStorage.removeItem('userPseudo');\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n  window.location.assign(\"/\");\n}\n","import React, { Component }  from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { logoutUser } from './actions/Authentication'\n\nclass FullNavbars extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isAuthenticated: localStorage.getItem('jwtToken') !== null ? true : false,\n      isAdmin: localStorage.getItem('userPseudo')\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.auth.isAuthenticated === true) this.setState({isAuthenticated: true})\n  }\n\n  onLogout() {\n    this.props.logoutUser()\n  }\n\n  render() {\n    const authNav = (\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <LinkContainer to={\"/vote\"}>\n            <Nav.Link eventKey={0}>Vote !</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to={\"/classement\"}>\n            <Nav.Link eventKey={1}>Classement</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to={\"/quiavotequoi\"}>\n            <Nav.Link eventKey={2}>Qui à voté quoi !</Nav.Link>\n          </LinkContainer>\n        </Nav>\n        <Nav>\n          {this.state.isAdmin === 'C Fab' &&\n            <LinkContainer to={\"/series\"}>\n              <Nav.Link eventKey={5}>Ajouter series</Nav.Link>\n            </LinkContainer>\n          }\n          {this.state.isAdmin === 'C Fab' &&\n            <LinkContainer to={\"/updateseries\"}>\n              <Nav.Link eventKey={6}>Update series</Nav.Link>\n            </LinkContainer>\n          }\n          <LinkContainer to={\"/monCompte\"}>\n            <Nav.Link eventKey={3}>Mon Compte</Nav.Link>\n          </LinkContainer>\n          <Nav.Link eventKey={4} onClick={this.onLogout.bind(this)}>Me déconnecter</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    )\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand className=\"navbar-brand\">NHL vote app</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        {this.state.isAuthenticated ? authNav : null}\n      </Navbar>\n    )\n  }\n}\n\nFullNavbars.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, { logoutUser })(FullNavbars);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport { registerUser } from \"../actions/Authentication\";\n\nclass Signup extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      nom: '',\n      prenom: '',\n      pseudo: '',\n      email: '',\n      password: '',\n      password_confirm: '',\n      errors: {}\n    }\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit() {\n    const user = {\n      nom: this.state.nom,\n      prenom: this.state.prenom,\n      pseudo: this.state.pseudo,\n      email: this.state.email,\n      password: this.state.password,\n      password_confirm: this.state.password_confirm\n    }\n    this.props.registerUser(user, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <Container id=\"logup\" className=\"vertical-middle\" fluid>\n        <Row>\n          <Col xs={12} md={{ span: 4, offset: 4 }}>\n            <Card id=\"logup-panel-group\">\n              <Card.Header><h3>Créer ton compte</h3></Card.Header>\n              <Card.Body>\n                <Form.Group controlId=\"nom\">\n                  <Form.Control\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.nom\n                    })}\n                    placeholder=\"Entre ton nom\"\n                    name=\"nom\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.nom } />\n                  {errors.nom && (<div className=\"invalid-feedback\">{errors.nom}</div>)}\n                </Form.Group>\n                <Form.Group controlId=\"prenom\">\n                  <Form.Control\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.prenom\n                    })}\n                    placeholder=\"Entre ton prénom\"\n                    name=\"prenom\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.prenom } />\n                  {errors.prenom && (<div className=\"invalid-feedback\">{errors.prenom}</div>)}\n                </Form.Group>\n                <Form.Group controlId=\"pseudo\">\n                  <Form.Control\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.pseudo\n                    })}\n                    placeholder=\"Entre ton pseudo\"\n                    name=\"pseudo\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.pseudo } />\n                  {errors.pseudo && (<div className=\"invalid-feedback\">{errors.pseudo}</div>)}\n                </Form.Group>\n                <Form.Group controlId=\"email\">\n                  <Form.Control\n                    type='email'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.email\n                    })}\n                    placeholder=\"Entre ton email\"\n                    name=\"email\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.email } />\n                  {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n                </Form.Group>\n                <Form.Group controlId=\"password\">\n                  <Form.Control\n                    type='password'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.password\n                    })}\n                    placeholder=\"Entre ton mot de passe\"\n                    name=\"password\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password } />\n                  {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n                </Form.Group>\n                <Form.Group controlId=\"password_confirm\">\n                  <Form.Control\n                    type='password'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.password_confirm\n                    })}\n                    placeholder=\"Confirme ton mot de passe\"\n                    name=\"password_confirm\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password_confirm } />\n                  {errors.password_confirm && (<div className=\"invalid-feedback\">{errors.password_confirm}</div>)}\n                </Form.Group>\n                <Button onClick={this.handleSubmit}>Enregistrer</Button>\n                <Col xs={12} className='signup-to-signin'>\n                  <Link to='/signin'>Sinon pour te connecter c'est par ici</Link>\n                </Col>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nSignup.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(Signup);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Col, FormGroup, FormControl, Button, Card } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport classnames from 'classnames';\n\nimport { loginUser } from '../actions/Authentication';\n\nclass Signin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit() {\n    const user = {\n      email: this.state.email,\n      password: this.state.password,\n    }\n    this.props.loginUser(user, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors.response.data\n      });\n    }\n  }\n\n  render() {\n    const {errors} = this.state;\n    return (\n      <Container id=\"login\" className=\"vertical-middle\" fluid>\n        <Col xs={12}  md={{ span: 4, offset: 4 }}>\n          <Card id=\"signinPanel\">\n            <Card.Header><h3>Connecte toi</h3></Card.Header>\n            <Card.Body>\n              <FormGroup controlId=\"email\">\n                <FormControl\n                  type='email'\n                  placeholder=\"Entre ton email\"\n                  className={classnames('form-control form-control-lg', {\n                    'is-invalid': errors.email\n                  })}\n                  name=\"email\"\n                  onChange={ this.handleInputChange }\n                  value={ this.state.email } />\n                {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n              </FormGroup>\n              <FormGroup controlId=\"password\">\n                <FormControl\n                  type='password'\n                  placeholder=\"Entre ton mot de passe\"\n                  className={classnames('form-control form-control-lg', {\n                    'is-invalid': errors.password\n                  })}\n                  name=\"password\"\n                  onChange={ this.handleInputChange }\n                  value={ this.state.password } />\n                {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n              </FormGroup>\n              <Button onClick={this.handleSubmit}>Envoyer</Button>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Container>\n    )\n  }\n}\n\nSignin.propTypes = {\n  errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors\n})\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators ({\n    loginUser\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)\n","import axios from 'axios';\n\nexport function getSeries() {\n  return function(dispatch) {\n    axios.get('/series')\n    .then(function(response) {\n      dispatch({type:\"GET_SERIES\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_SERIES_REJECTED\", payload:err})\n    })\n  }\n}\n\nexport function postNhlSeries(series) {\n  return function(dispatch) {\n    axios.post('/series', series)\n    .then(function(response) {\n      dispatch({type:\"POST_NHL_SERIES\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"POST_NHL_SERIES_REJECTED\", payload:err})\n    })\n  }\n}\n\nexport function updateSeries(id, newData) {\n  return function(dispatch) {\n    axios.put('/series/' + id, newData)\n    .then(function(response) {\n      dispatch({type:\"UPDATE_SERIES\", payload:response.data, id:id, datas:newData})\n    })\n    .catch(function(err) {\n      dispatch({type:\"UPDATE_SERIES_REJECTED\", payload:err})\n    })\n  }\n}\n\nexport function postSeries(vote) {\n  return function(dispatch) {\n    axios.post('/voteseries', vote)\n    .then(function(response) {\n      dispatch({type:\"POST_SERIES\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"POST_SERIES_REJECTED\", payload:err})\n    })\n  }\n}\n\nexport function getAllUserSeries() {\n  return function(dispatch) {\n    axios.get('/voteseries')\n    .then(function(response) {\n      dispatch({type:\"GET_ALL_USER_SERIES_VOTE\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_ALL_USER_SERIES_VOTE_REJECTED\", payload:err})\n    })\n  }\n}\n\nexport function getUserSeries(id) {\n  return function(dispatch) {\n    axios.get('/voteseries/' + id)\n    .then(function(response) {\n      dispatch({type:\"GET_USER_SERIES_VOTE\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_USER_SERIES_VOTE_REJECTED\", payload:err})\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport { Card, Row, Col } from 'react-bootstrap'\n\n// Components\nimport easternLogo from '../images/Eastern_Conference.png'\nimport westernLogo from '../images/Western_Conference.png'\n\nexport default class UserVote extends Component {\n  render() {\n    return (\n      <Col xs={12} md={6} lg={3}>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              {this.props.match < 4 ? <img className='nhl-logo' src={easternLogo} alt='NHL Logo' /> : <img className='nhl-logo' src={westernLogo} alt='NHL Logo' />}\n              Match {this.props.match + 1}\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <Row className='user-series-vote'>\n              <Col xs={4}>\n                <img src={this.props.team1.img} alt={this.props.team1.name} />\n              </Col>\n              <Col xs={7} className={this.props.team1.score === 4 && 'user-series-vote-score font-bold'}>\n                <p>{this.props.team1.name} {this.props.team1.score}</p>\n              </Col>\n            </Row>\n            <Row className='user-series-vote'>\n              <Col xs={4}>\n                <img src={this.props.team2.img} alt={this.props.team2.name} />\n              </Col>\n              <Col xs={7} className={this.props.team2.score === 4 && 'user-series-vote-score font-bold'}>\n                <p>{this.props.team2.name} {this.props.team2.score}</p>\n              </Col>\n            </Row>\n            <Row>\n              <Col className='align-center'>\n                {\n                  this.props.series.map((serie, i) => {\n                    let result = ''\n\n                    if(serie._id === this.props.seriesId) {\n                      result = 'Résultat : '+ serie.team1.name + '  ' + serie.team1.score +' - '+ serie.team2.score +'  '+ serie.team2.name\n                    }\n\n                    return <p key={i}>{result}</p>\n                  })\n                }\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n      </Col>\n    )\n  }\n}\n","// Lib\nimport React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Actions\nimport { getSeries, postSeries } from '../actions/SeriesAction'\n\n// Components\nimport nhlLogo from '../images/nhl.svg'\n\nclass FormVote extends Component {\n  constructor(props, context) {\n    super(props, context)\n\n    this.props.getSeries()\n\n    this.state = {\n      'vote': [],\n      'errors': ''\n    }\n  }\n\n  processBdd() {\n    if (this.props.series.length === this.state.vote.length) {\n      this.state.vote.map((votes, i) => {\n        this.props.postSeries(votes)\n        return votes\n      })\n\n      this.context.router.history.push('/classement')\n    } else {\n      this.setState({ errors: 'Attention tu as deux équipes égalités' })\n    }\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault()\n\n    this.props.series.map((serie, i) => {\n      let selectTeams1 = document.getElementById(serie.team1.id)\n      let selectTeams2 = document.getElementById(serie.team2.id)\n      let valueTeams1 = parseInt(selectTeams1.value)\n      let valueTeams2 = parseInt(selectTeams2.value)\n\n      if (valueTeams1 !== valueTeams2) {\n        this.state.vote.push({\n          'userID': localStorage.getItem('userID'),\n          'seriesId': serie._id,\n          'team1': {\n            'name': serie.team1.name,\n            'img': serie.team1.img,\n            'score': valueTeams1\n          },\n          'team2': {\n            'name': serie.team2.name,\n            'img': serie.team2.img,\n            'score': valueTeams2\n          },\n          'winner': valueTeams1 > valueTeams2 ? 'team1' : 'team2',\n          'diff': valueTeams1 - valueTeams2\n        })\n        return this.state.vote\n      }\n\n      return false\n    })\n\n    this.processBdd()\n  }\n\n  render() {\n    return (\n      <Col xs={12}>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              <img className='nhl-logo' src={nhlLogo} alt='NHL Logo' />\n              C'est le moment de voter pour les series - 1<sup>st</sup> round\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={this.onFormSubmit.bind(this)}>\n              <Col xs={12}>\n                {\n                  this.props.series.map((serie, i) => {\n                    return(\n                      <Row key={i} className='form-series'>\n                        <Col xs={12} className='align-center'><h3>Match {i + 1}</h3></Col>\n                        <Col xs={12} md={4} lg={3} className='form-series-col'>\n                          <Col xs={6} md={8} className='align-center'>\n                            <img src={serie.team1.img} alt={serie.team1.name} />\n                            <p className='series-teams-name'>{serie.team1.name}</p>\n                          </Col>\n                          <Col xs={6} md={4}>\n                            <Form.Group>\n                              <Form.Control as=\"select\" id={serie.team1.id}>\n                                <option>0</option>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                              </Form.Control>\n                            </Form.Group>\n                          </Col>\n                        </Col>\n                        <Col xs={12} md={2} className='align-center'>\n                          <p className='series-versus'>VS</p>\n                        </Col>\n                        <Col xs={12} md={4} lg={3} className='form-series-col'>\n                          <Col xs={6} md={4}>\n                            <Form.Group>\n                              <Form.Control as=\"select\" id={serie.team2.id}>\n                                <option>0</option>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                              </Form.Control>\n                            </Form.Group>\n                          </Col>\n                          <Col xs={6} md={8} className='align-center'>\n                            <img src={serie.team2.img} alt={serie.team2.name} />\n                            <p className='series-teams-name'>{serie.team2.name}</p>\n                          </Col>\n                        </Col>\n                      </Row>\n                    )\n                  })\n                }\n              </Col>\n              <Col xs={12} className='align-center'>\n                <Button type=\"submit\">Submit</Button>\n                {this.state.errors !== '' && (<Col xs={12} className=\"invalid-feedback\">{this.state.errors}</Col>)}\n              </Col>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Col>\n    )\n  }\n}\n\nFormVote.contextTypes = {\n  router: PropTypes.object\n}\n\nconst mapStateToProps = state => {\n  return {\n    series: state.series.series\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getSeries, postSeries\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormVote);\n","// Lib\nimport React, { Component } from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Actions\nimport { getUserSeries } from '../actions/SeriesAction'\nimport { getSeries } from '../actions/SeriesAction'\n\n// Components\nimport UserVote from '../components/UserVote'\nimport FormVote from '../components/FormVote'\n\nclass Vote extends Component {\n\n  constructor(props) {\n    super(props)\n\n    let userID = localStorage.getItem(\"userID\");\n\n    this.state = {\n      userID: userID,\n      isVoted: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.getUserSeries(this.state.userID)\n    this.props.userSeries.length === 1 && this.setState({ isVoted: true })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    nextProps.userSeries.length !== 0 && this.setState({isVoted: true})\n  }\n\n  render() {\n    return (\n      <Container id='vote-form' fluid>\n        <Row>\n          {this.state.isVoted ? this.props.userSeries.map((vote, i) => <UserVote key={i} {...vote} match={i} series={this.props.series} />) : <FormVote />}\n        </Row>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userSeries: state.series.userSeries,\n    series: state.series.series\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getUserSeries, getSeries\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Vote);\n","import axios from 'axios';\n\n// POST CLASSEMENT\nexport function postClassement(classement) {\n  return function(dispatch) {\n    axios.post('/classement', classement)\n    .then(function(response) {\n      dispatch({type:\"POST_CLASSEMENT\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"POST_CLASSEMENT_REJECTED\", payload:err})\n    })\n  }\n}\n\n// GET CLASSEMENT BY USER\nexport function getClassement(id) {\n  return function(dispatch) {\n    axios.get('/classement/' + id)\n    .then(function(response) {\n      dispatch({type:\"GET_CLASSEMENT\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_CLASSEMENT_REJECTED\", payload:err})\n    })\n  }\n}\n\n// GET ALL CLASSEMENT\nexport function getAllClassement() {\n  return function(dispatch) {\n    axios.get('/classement')\n    .then(function(response) {\n      dispatch({type:\"GET_ALL_CLASSEMENT\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_ALL_CLASSEMENT_REJECTED\", payload:err})\n    })\n  }\n}\n\n// UPDATE CLASSEMENT BY USER\nexport function updateClassement(id, newData) {\n  return function(dispatch) {\n    axios.put('/classement/' + id, newData)\n    .then(function(response) {\n      dispatch({type:\"UPDATE_CLASSEMENT\", payload:response.data, userID:id, datas:newData})\n    })\n    .catch(function(err) {\n      dispatch({type:\"UPDATE_CLASSEMENT_REJECTED\", payload:err})\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport { Col, Table, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { getAllClassement } from '../actions/ClassementAction'\nimport { getSeries, getAllUserSeries } from '../actions/SeriesAction'\nimport { updateClassement } from '../actions/ClassementAction'\n\nclass Classement extends Component {\n  constructor(props) {\n    super(props)\n    let userPseudo = localStorage.getItem(\"userPseudo\")\n\n    this.props.getAllClassement()\n    this.props.getSeries()\n    this.props.getAllUserSeries()\n\n    this.state = {\n      userPseudo: userPseudo,\n      isAdmin: false,\n      usersID: [],\n      usersPoints: [],\n      series: []\n    }\n  }\n\n  componentDidMount() {\n    this.state.userPseudo === 'C Fab' && this.setState({ isAdmin: true })\n  }\n\n  getPoints() {\n    this.props.allClassement.map((classement, i) => {\n      this.state.usersID.push(classement.userID)\n      this.state.usersPoints.push(classement.points)\n      return [this.state.usersID, this.state.usersPoints]\n    })\n\n    this.props.series.map((serie, i) => {\n      this.state.series.push(serie._id)\n      return this.state.series\n    })\n\n    this.props.allUserSeries.map((vote, i) => {\n      let userIndex = this.state.usersID.indexOf(vote.userID)\n      let userPoints = this.state.usersPoints[userIndex]\n      let seriesIndex = this.state.series.indexOf(vote.seriesId)\n\n      if(this.props.series[seriesIndex].winner === vote.winner && this.props.series[seriesIndex].diff === vote.diff) {\n        const newArray = this.state.usersPoints\n        const newItem = userPoints + 3\n        newArray[userIndex] = newItem\n\n        this.setState({\n          usersPoints: newArray\n        })\n      } else if(this.props.series[seriesIndex].winner === vote.winner) {\n        const newArray = this.state.usersPoints\n        const newItem = userPoints + 1\n        newArray[userIndex] = newItem\n\n        this.setState({\n          usersPoints: newArray\n        })\n      }\n\n      this.props.updateClassement(vote.userID, {provisoire:userPoints})\n      return userPoints\n    })\n  }\n\n  render() {\n    return (\n      <Col xs={12} md={{ span: 5, offset: 3 }} className='align-center'>\n        <Table striped bordered hover responsive>\n          <thead>\n            <tr>\n              <th className='align-center'>Classement</th>\n              <th className='align-center'>Pseudo</th>\n              <th className='align-center'>Points</th>\n              <th className='align-center'>Points provisoire</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.allClassement.map((stand, i) => <tr key={i}><td>{i + 1}</td><td>{stand.userPseudo}</td><td>{stand.points}</td><td>{stand.provisoire}</td></tr>)}\n          </tbody>\n        </Table>\n        {this.state.isAdmin ? <Col xs={12} className=\"align-center\"><Button onClick={this.getPoints.bind(this)}>Calculer les points</Button></Col> : null}\n      </Col>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    allClassement: state.classement.allClassement,\n    series: state.series.series,\n    allUserSeries: state.series.allUserSeries\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getAllClassement,\n    getSeries, getAllUserSeries,\n    updateClassement\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Classement);\n","// Lib\nimport React, { Component } from 'react'\nimport { Row, Col, Card } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { getAllUserSeries } from '../actions/SeriesAction'\n\nclass DisplayVote extends Component {\n  constructor(props) {\n    super(props)\n\n    this.props.getAllUserSeries()\n  }\n\n  render() {\n    const usersVote = (this.props.allVote.map((votes, i) => {\n      if (votes.userID === this.props.userID) {\n        return (\n          <Col xs={12} md={6} key={i} className='align-center'>\n            <p>\n              <img src={votes.team1.img} alt={votes.team1.name} width='25%' /> &nbsp;&nbsp; <span className={votes.team1.score === 4 ? 'font-bold' : ''}>{votes.team1.score}</span> &nbsp;&nbsp; Vs &nbsp;&nbsp; <span className={votes.team2.score === 4 ? 'font-bold' : ''}>{votes.team2.score}</span> &nbsp;&nbsp; <img src={votes.team2.img} alt={votes.team2.name} width='25%' />\n            </p>\n          </Col>\n        )\n      }\n      return true\n    }))\n    return (\n      <Card>\n        <Card.Header>\n          <Card.Title>Vote de {this.props.userPseudo}</Card.Title>\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            {usersVote}\n          </Row>\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    allVote: state.series.allUserSeries\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getAllUserSeries\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayVote);\n","// Lib\nimport React, { Component } from 'react'\nimport { Container, Col } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Actions\nimport { getUserSeries, getAllUserSeries } from '../actions/SeriesAction'\nimport { getAllClassement } from '../actions/ClassementAction'\n\n//Components\nimport DisplayVote from './DisplayVote'\n\nclass AllVote extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.props.getUserSeries(localStorage.getItem(\"userID\"))\n    this.props.getAllUserSeries()\n    this.props.getAllClassement()\n\n    this.state = {\n      isVoted: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.userVote.length > 0 && this.setState({ isVoted: true })\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.allVote.length !== this.props.allVote.length) {\n      this.setState({ isVoted: true })\n    }\n  }\n\n  render() {\n    return (\n      <Container id='vote-form' fluid>\n        <Col xs={12}>\n          {this.state.isVoted ? this.props.classement.map((users, i) => <DisplayVote key={i} {...users}/>) : <p>Il faut que tu vote d'abord !</p>}\n        </Col>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userVote: state.series.userSeries,\n    classement: state.classement.allClassement,\n    allVote: state.series.allUserSeries\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getUserSeries, getAllUserSeries,\n    getAllClassement\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllVote);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Col, Card, Button, FormGroup, InputGroup, FormControl } from 'react-bootstrap'\nimport { findDOMNode } from 'react-dom'\n\nimport { updateUser, logoutUser } from '../actions/Authentication'\n\nclass ChangeUser extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let userID = this.props.id\n\n    this.state = {\n      userID: userID,\n      modifyUser: false\n    }\n  }\n\n  modifyUser() {\n    this.setState({modifyUser: !this.state.modifyUser})\n  }\n\n  changeUser() {\n    let newUserInfos = {\n      nom: findDOMNode(this.refs.newNom).value,\n      prenom: findDOMNode(this.refs.newPrenom).value,\n      pseudo: findDOMNode(this.refs.newPseudo).value,\n      email: findDOMNode(this.refs.newEmail).value\n    }\n    this.props.updateUser(this.state.userID, newUserInfos)\n    this.props.logoutUser()\n  }\n\n  render() {\n    return (\n      <Col xs={12} md={{ span: 4, offset: 4 }}>\n        <Card>\n          <Card.Header>\n            <Card.Title>Modifie tes informations de compte</Card.Title>\n          </Card.Header>\n          <Card.Body>\n            {this.state.modifyUser ?\n              <ul>\n                <li>\n                  <FormGroup controlId=\"newNom\">\n                    <InputGroup>Change ton Nom :</InputGroup>\n                    <FormControl\n                      type='text'\n                      defaultValue={this.props.nom}\n                      ref='newNom' />\n                  </FormGroup>\n                </li>\n                <li>\n                  <FormGroup controlId=\"newPrenom\">\n                    <InputGroup>Change ton Prénom :</InputGroup>\n                    <FormControl\n                      type='text'\n                      defaultValue={this.props.prenom}\n                      ref='newPrenom' />\n                  </FormGroup>\n                </li>\n                <li>\n                  <FormGroup controlId=\"newPseudo\">\n                    <InputGroup>Change ton pseudo :</InputGroup>\n                    <FormControl\n                      type='text'\n                      defaultValue={this.props.pseudo}\n                      ref='newPseudo' />\n                  </FormGroup>\n                </li>\n                <li>\n                  <FormGroup controlId=\"newEmail\">\n                    <InputGroup>Change ton email :</InputGroup>\n                    <FormControl\n                      type='text'\n                      defaultValue={this.props.email}\n                      ref='newEmail' />\n                  </FormGroup>\n                </li>\n                <li>\n                  <Button onClick={this.changeUser.bind(this)}>Sauvegarder</Button>\n                  <Button onClick={this.modifyUser.bind(this)}>Annuler</Button>\n                </li>\n                <li><p>Attention tu seras déconnecté automatiquement afin de faire la mise à jour. Il faudra te connecter à nouveau.</p></li>\n              </ul> :\n              <ul>\n                <li>Nom : {this.props.nom}</li>\n                <li>Prénom : {this.props.prenom}</li>\n                <li>Pseudo : {this.props.pseudo}</li>\n                <li>Email : {this.props.email}</li>\n                <li><Button onClick={this.modifyUser.bind(this)}>Modifier</Button></li>\n              </ul>\n            }\n          </Card.Body>\n        </Card>\n      </Col>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateUser, logoutUser\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(ChangeUser);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Container, Col } from 'react-bootstrap'\n\nimport { getUser } from '../actions/Authentication'\n\nimport ChangeUser from '../components/ChangeUser'\n\nexport class MonCompte extends Component {\n\n  constructor(props) {\n    super(props)\n    let userPseudo = localStorage.getItem(\"userPseudo\")\n    let userID = localStorage.getItem(\"userID\")\n\n    this.state = {\n      userPseudo: userPseudo,\n      userID: userID,\n      modifyName: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.getUser({ id: this.state.userID })\n  }\n\n  render() {\n    return (\n      <Container id=\"mon-compte\" className=\"vertical-middle\" fluid>\n        <Col xs={12}>\n          <h1 className=\"align-center\">Voici ton compte {this.state.userPseudo}</h1>\n          {this.props.userData.map((user, i) => <ChangeUser key={i} {...user} />)}\n        </Col>\n      </Container>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    userData: state.auth.user\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getUser\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonCompte)\n","import axios from 'axios';\n\n// GET ARME\nexport function getTeams() {\n  return function(dispatch) {\n    axios.get('/teams')\n    .then(function(response) {\n      dispatch({type:\"GET_TEAMS\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_TEAMS_REJECTED\", payload:err})\n    })\n  }\n}\n","// Lib\nimport React, { Component } from 'react'\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Actions\nimport { getTeams } from '../actions/TeamsAction'\nimport { postNhlSeries } from '../actions/SeriesAction'\n\nclass FormSeries extends Component {\n  constructor(props) {\n    super(props)\n\n    this.props.getTeams()\n  }\n\n  processBdd(team1, team2) {\n    let insertBdd = {\n      'team1': team1,\n      'team2': team2,\n      'winner': '',\n      'diff': 0\n    }\n\n    this.props.postNhlSeries(insertBdd)\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault()\n\n    let getTeam1 = document.getElementById('team1').value\n    let getTeam2 = document.getElementById('team2').value\n    let team1 = {}\n    let team2 = {}\n\n    this.props.teams.map((team, i) => {\n      if(getTeam1 === team.name) {\n        team1 = {\n          'id': team._id,\n          'name': team.name,\n          'img': team.img,\n          'score': 0\n        }\n      }\n      if(getTeam2 === team.name) {\n        team2 = {\n          'id': team._id,\n          'name': team.name,\n          'img': team.img,\n          'score': 0\n        }\n      }\n      return [team1, team2]\n    })\n\n    this.processBdd(team1, team2)\n  }\n\n  render() {\n    const optionTeams = this.props.teams.map((team, i) => <option key={i}>{team.name}</option>)\n    return (\n      <Col xs={12} md={{ span:6 , offset:3 }}>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              Mise en place des series\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={this.onFormSubmit.bind(this)}>\n              <Col xs={12} className='align-center'><h3>Match</h3></Col>\n              <Row className='form-series'>\n                <Col xs={5}>\n                  <Form.Group>\n                    <Form.Control as=\"select\" id='team1'>\n                      {optionTeams}\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n                <Col xs={2} className='align-center'>\n                  <p className='series-versus'>VS</p>\n                </Col>\n                <Col xs={5}>\n                  <Form.Group>\n                    <Form.Control as=\"select\" id='team2'>\n                      {optionTeams}\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n              </Row>\n              <Col xs={12} className='align-center'>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Col>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    teams: state.teams.teams\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getTeams,\n    postNhlSeries\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormSeries);\n","// Lib\nimport React, { Component } from 'react'\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Actions\nimport { getSeries, updateSeries } from '../actions/SeriesAction'\n\nclass UpdateSeries extends Component {\n  constructor(props, context) {\n    super(props, context)\n\n    this.props.getSeries()\n\n    this.state = {\n      'update': []\n    }\n  }\n\n  updateBdd() {\n    this.state.update.map((votes, i) => this.props.updateSeries(votes._id, votes))\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault()\n\n    this.props.series.map((serie, i) => {\n      let selectTeams1 = document.getElementById(serie.team1.id)\n      let selectTeams2 = document.getElementById(serie.team2.id)\n      let valueTeams1 = parseInt(selectTeams1.value)\n      let valueTeams2 = parseInt(selectTeams2.value)\n\n      this.state.update.push({\n        '_id': serie._id,\n        'team1': {\n          'name': serie.team1.name,\n          'img': serie.team1.img,\n          'score': valueTeams1,\n          'id': serie.team1.id\n        },\n        'team2': {\n          'name': serie.team2.name,\n          'img': serie.team2.img,\n          'score': valueTeams2,\n          'id': serie.team2.id\n        },\n        'winner': valueTeams1 > valueTeams2 ? 'team1' : (valueTeams1 === valueTeams2 ? '' :'team2'),\n        'diff': valueTeams1 - valueTeams2\n      })\n      return this.state.update\n    })\n\n    this.updateBdd()\n  }\n\n  render() {\n    return (\n      <Col xs={12}>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              Mise à jour des Series\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={this.onFormSubmit.bind(this)}>\n              <Col xs={12}>\n                {\n                  this.props.series.map((serie, i) => {\n                    return(\n                      <Row key={i} className='form-series'>\n                        <Col xs={12} className='align-center'><h3>Match {i + 1}</h3></Col>\n                        <Col xs={12} md={4} lg={3} className='form-series-col'>\n                          <Col xs={6} md={8} className='align-center'>\n                            <img src={serie.team1.img} alt={serie.team1.name} />\n                            <p className='series-teams-name'>{serie.team1.name}</p>\n                          </Col>\n                          <Col xs={6} md={4}>\n                            <Form.Group>\n                              <Form.Control as=\"input\" id={serie.team1.id} defaultValue={serie.team1.score} />\n                            </Form.Group>\n                          </Col>\n                        </Col>\n                        <Col xs={12} md={2} className='align-center'>\n                          <p className='series-versus'>VS</p>\n                        </Col>\n                        <Col xs={12} md={4} lg={3} className='form-series-col'>\n                          <Col xs={6} md={4}>\n                            <Form.Group>\n                              <Form.Control as='input' id={serie.team2.id} defaultValue={serie.team2.score} />\n                            </Form.Group>\n                          </Col>\n                          <Col xs={6} md={8} className='align-center'>\n                            <img src={serie.team2.img} alt={serie.team2.name} />\n                            <p className='series-teams-name'>{serie.team2.name}</p>\n                          </Col>\n                        </Col>\n                      </Row>\n                    )\n                  })\n                }\n              </Col>\n              <Col xs={12} className='align-center'>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Col>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    series: state.series.series\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getSeries, updateSeries\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateSeries);\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Signup from \"./components/Signup\"\nimport Signin from \"./components/Signin\"\nimport Vote from \"./components/Vote\"\nimport Classement from \"./components/Classement\"\nimport AllVote from \"./components/AllVote\"\nimport MonCompte from \"./components/MonCompte\"\nimport FormSeries from \"./components/FormSeries\"\nimport UpdateSeries from \"./components/UpdateSeries\"\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component={Signup}/>\n      <Route path='/signin' component={Signin}/>\n      <Route path='/vote' component={Vote}/>\n      <Route path='/classement' component={Classement}/>\n      <Route path='/quiavotequoi' component={AllVote}/>\n      <Route path='/monCompte' component={MonCompte}/>\n      <Route path='/series' component={FormSeries}/>\n      <Route path='/updateseries' component={UpdateSeries}/>\n    </Switch>\n  </main>\n)\n\nexport default Main\n","import React, { Component } from 'react'\nimport FullNavbars from './FullNavbars'\nimport Content from './Content'\n\nclass App extends Component {\n  render() {\n    return (\n      <section>\n        <FullNavbars />\n        <Content />\n      </section>\n    )\n  }\n}\n\nexport default App;\n","const initialeState = {\n  teams: [],\n  error: null\n}\n\nexport const TeamsReducer = (state=initialeState, action) => {\n  switch (action.type) {\n    case 'GET_TEAMS':\n      return {...state, teams:[...action.payload]};\n    case \"GET_TEAMS_REJECTED\":\n      return action.payload\n    default: {\n      return state\n    }\n  }\n}\n","const initialeState = {\n  series: [],\n  nhlSeries: [],\n  voteSeries: [],\n  userSeries: [],\n  allUserSeries: [],\n  error: null\n}\n\nexport const SeriesReducer = (state=initialeState, action) => {\n  switch (action.type) {\n    case 'GET_SERIES':\n      return {...state, series:[...action.payload]};\n    case \"GET_SERIES_REJECTED\":\n      return action.payload\n\n    case 'POST_NHL_SERIES':\n      return {...state, nhlSeries:[...action.payload]}\n    case \"POST_NHL_SERIES_REJECTED\":\n      return action.payload\n\n    case \"UPDATE_SERIES\":\n      const newArray = [...state.series]\n      const newItem = action.datas\n      newArray[newArray.findIndex(item => item._id === action.id)] = newItem\n      return {\n        ...state,\n        series:newArray\n      };\n    case \"UPDATE_SERIES_REJECTED\":\n      return action.payload\n\n    case 'POST_SERIES':\n      return {...state, voteSeries:[...action.payload]}\n    case \"POST_SERIES_REJECTED\":\n      return action.payload\n\n    case 'GET_USER_SERIES_VOTE':\n      return {...state, userSeries:[...action.payload]}\n    case \"GET_USER_SERIES_VOTE_REJECTED\":\n      return action.payload\n\n    case 'GET_ALL_USER_SERIES_VOTE':\n      return {...state, allUserSeries:[...action.payload]}\n    case \"GET_ALL_USER_SERIES_VOTE_REJECTED\":\n      return action.payload\n\n    default: {\n      return state\n    }\n  }\n}\n","const initialeState = {\n  vote: [],\n  userVote: [],\n  allVote: []\n}\n\nexport const VoteReducer = (state=initialeState, action) => {\n  switch (action.type) {\n    case 'POST_VOTE':\n      return {...state, vote:[...state.vote, action.payload]}\n    case \"POST_VOTE_REJECTED\":\n      return action.payload\n    case 'GET_VOTE':\n      return {...state, userVote:[...action.payload]};\n    case \"GET_VOTE_REJECTED\":\n      return action.payload\n    case 'GET_ALL_VOTE':\n      return {...state, allVote:[...action.payload]};\n    case \"GET_ALL_VOTE_REJECTED\":\n      return action.payload\n    default: {\n      return state\n    }\n  }\n}\n","const initialeState = {\n  classement: [],\n  userClassement: [],\n  allClassement: []\n}\n\nexport const ClassementReducer = (state=initialeState, action) => {\n  switch (action.type) {\n    case 'POST_CLASSEMENT':\n      return {...state, classement:[...state.classement, action.payload]}\n    case \"POST_CLASSEMENT_REJECTED\":\n      return action.payload\n\n    case 'GET_CLASSEMENT':\n      return {...state, userClassement:[...action.payload]};\n    case \"GET_CLASSEMENT_REJECTED\":\n      return action.payload\n\n    case 'GET_ALL_CLASSEMENT':\n      return {...state, allClassement:[...action.payload]};\n    case \"GET_ALL_CLASSEMENT_REJECTED\":\n      return action.payload\n\n    case \"UPDATE_CLASSEMENT\":\n      const newArray = [...state.allClassement]\n      const newItem = action.datas\n      newArray[newArray.findIndex(item => item._id === action.id)] = newItem\n      return {\n        ...state,\n        allClassement:newArray\n      };\n    case \"UPDATE_CLASSEMENT_REJECTED\":\n      return action.payload\n    default: {\n      return state\n    }\n  }\n}\n","export const isEmpty = (value) => {\n  return (\n    value === undefined ||\n    value === null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0)\n  );\n}\n","import { SET_CURRENT_USER } from '../actions/Types';\nimport { isEmpty } from '../hocs/is-empty';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: []\n}\n\nexport function authReducer(state = initialState, action ) {\n  switch(action.type) {\n    case SET_CURRENT_USER:\n    return {\n      ...state,\n      isAuthenticated: !isEmpty(action.payload),\n      user: [action.payload]\n    }\n    default:\n    return state;\n  }\n}\n","import { GET_ERRORS } from '../actions/Types';\n\nconst initialState = {};\n\nexport function errorReducer(state = initialState, action ) {\n  switch(action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux'\nimport { TeamsReducer } from './TeamsReducer'\nimport { SeriesReducer } from './SeriesReducer'\nimport { VoteReducer } from './VoteReducer'\nimport { ClassementReducer } from './ClassementReducer'\nimport { authReducer } from './AuthReducer'\nimport { errorReducer } from './ErrorReducer'\n\nexport default combineReducers({\n  teams: TeamsReducer,\n  series: SeriesReducer,\n  vote: VoteReducer,\n  classement: ClassementReducer,\n  errors: errorReducer,\n  auth: authReducer\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n  .register(swUrl)\n  .then(registration => {\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n      if (installingWorker == null) {\n        return;\n      }\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            // At this point, the updated precached content has been fetched,\n            // but the previous service worker will still serve the older\n            // content until all client tabs are closed.\n            console.log(\n              'New content is available and will be used when all ' +\n              'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n            );\n\n            // Execute callback\n            if (config && config.onUpdate) {\n              config.onUpdate(registration);\n            }\n          } else {\n            // At this point, everything has been precached.\n            // It's the perfect time to display a\n            // \"Content is cached for offline use.\" message.\n            console.log('Content is cached for offline use.');\n\n            // Execute callback\n            if (config && config.onSuccess) {\n              config.onSuccess(registration);\n            }\n          }\n        }\n      };\n    };\n  })\n  .catch(error => {\n    console.error('Error during service worker registration:', error);\n  });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n  .then(response => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (\n      response.status === 404 ||\n      (contentType != null && contentType.indexOf('javascript') === -1)\n    ) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n  .catch(() => {\n    console.log(\n      'No internet connection found. App is running in offline mode.'\n    );\n  });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Library import\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\n// CSS import\nimport './style/index.css'\nimport './style/materia.min.css'\n\n// Component import\nimport App from './App'\n\n// Reducers Import\nimport reducers from './reducers/reducers'\n\n// Services import\nimport * as serviceWorker from './serviceWorker'\n\n// Middlewares import\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware'\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancer(applyMiddleware(promise(), thunk, createLogger())))\n\nReactDOM.render((\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n), document.getElementById('root'))\n\nexport default store;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Eastern_Conference.fdd85eae.png\";","module.exports = __webpack_public_path__ + \"static/media/Western_Conference.223abb5a.png\";","module.exports = __webpack_public_path__ + \"static/media/nhl.266661c7.svg\";"],"sourceRoot":""}