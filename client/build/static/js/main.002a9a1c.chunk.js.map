{"version":3,"sources":["actions/Types.js","SetAuthToken.js","actions/Authentication.js","FullNavbars.js","components/Signin.js","actions/SeriesAction.js","components/UserVote.js","components/FormVote.js","components/Vote.js","actions/ClassementAction.js","components/Classement.js","components/DisplayVote.js","components/AllVote.js","components/ChangeUser.js","components/MonCompte.js","actions/TeamsAction.js","components/FormSeries.js","components/UpdateSeries.js","Content.js","App.js","reducers/TeamsReducer.js","reducers/SeriesReducer.js","reducers/VoteReducer.js","reducers/ClassementReducer.js","hocs/is-empty.js","reducers/AuthReducer.js","reducers/ErrorReducer.js","reducers/reducers.js","serviceWorker.js","index.js","images/Eastern_Conference.png","images/Western_Conference.png","images/nhl.svg"],"names":["GET_ERRORS","SET_CURRENT_USER","setAuthToken","token","axios","defaults","headers","common","updateUser","userID","newDatas","dispatch","put","catch","err","type","payload","loginUser","user","history","post","then","res","data","localStorage","setItem","decoded","jwt_decode","setCurrentUser","id","pseudo","push","getUser","getItem","logoutUser","removeItem","window","location","assign","FullNavbars","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isAuthenticated","isAdmin","nextProps","auth","setState","console","log","authNav","react_default","a","createElement","Navbar","Collapse","Nav","className","lib","to","Link","eventKey","onClick","onLogout","bind","bg","expand","Brand","Toggle","aria-controls","Component","connect","Signin","email","password","errors","handleInputChange","assertThisInitialized","handleSubmit","checkKey","e","defineProperty","target","name","value","key","response","Container","fluid","Col","xs","md","span","offset","Card","Header","Body","FormGroup","controlId","FormControl","placeholder","classnames","is-invalid","onChange","onKeyPress","Button","bindActionCreators","getSeries","get","postNhlSeries","series","updateSeries","newData","datas","postSeries","vote","getAllUserSeries","getUserSeries","UserVote","reasultSeries","map","serie","i","team1Name","team1","team1Score","score","team2Name","team2","team2Score","_id","seriesId","Title","match","src","easternLogo","alt","westernLogo","Row","img","FormVote","context","_this2","length","votes","router","_this3","preventDefault","selectTeams1","document","getElementById","selectTeams2","valueTeams1","parseInt","valueTeams2","winner","diff","processBdd","nhlLogo","Form","onSubmit","onFormSubmit","lg","Group","Control","as","contextTypes","PropTypes","object","Vote","isVoted","userSeries","UserVote_UserVote","components_FormVote","getAllClassement","updateClassement","Classement","userPseudo","isLoading","usersID","usersPoints","allClassement","classement","points","allUserSeries","userIndex","indexOf","userPoints","seriesIndex","newArray","newItem","provisoire","Table","striped","bordered","hover","responsive","stand","getPoints","DisplayVote","usersVote","allVote","width","AllVote","userVote","prevState","users","components_DisplayVote","ChangeUser","modifyUser","newUserInfos","nom","findDOMNode","refs","newNom","prenom","newPrenom","newPseudo","newEmail","InputGroup","defaultValue","ref","changeUser","MonCompte","_Component","modifyName","inherits","createClass","userData","components_ChangeUser","getTeams","FormSeries","insertBdd","getTeam1","getTeam2","teams","team","optionTeams","UpdateSeries","update","updateBdd","Main","Switch","Route","exact","path","component","App","src_FullNavbars","Content","initialeState","error","nhlSeries","voteSeries","userClassement","isEmpty","undefined","keys","trim","initialState","combineReducers","arguments","action","objectSpread","toConsumableArray","findIndex","item","concat","Boolean","hostname","store","createStore","reducers","applyMiddleware","promise","thunk","ReactDOM","render","es","BrowserRouter","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"qPAAaA,EAAa,aACbC,EAAmB,mBCUjBC,EATM,SAAAC,GAChBA,EACDC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,IAAMC,SAASC,QAAQC,OAAvB,gCCMEC,EAAa,SAACC,EAAQC,GAAT,OAAsB,SAAAC,GAC9CP,IAAMQ,IAAI,SAAWH,EAAQC,GAC5BG,MAAM,SAAAC,GACLH,EAAS,CAACI,KAAMf,EAAYgB,QAASF,QAI5BG,EAAY,SAACC,EAAMC,GAAP,OAAmB,SAAAR,GAC1CP,IAAMgB,KAAK,SAAUF,GACpBG,KAAK,SAAAC,GAAO,IACHnB,EAAUmB,EAAIC,KAAdpB,MACRqB,aAAaC,QAAQ,WAAYtB,GACjCD,EAAaC,GACb,IAAMuB,EAAUC,IAAWxB,GAC3BQ,EAASiB,EAAeF,IACxBF,aAAaC,QAAQ,SAAUC,EAAQG,IACvCL,aAAaC,QAAQ,aAAcC,EAAQI,QAC3CX,EAAQY,KAAK,iBAEdlB,MAAM,SAAAC,GACLH,EAAS,CAACI,KAAMf,EAAYgB,QAASF,QAI5BkB,EAAU,SAACvB,GAAD,OAAY,SAAAE,GACjCP,IAAMgB,KAAK,SAAUX,GACpBY,KAAK,SAAAC,GACJ,IAAInB,EAAQqB,aAAaS,QAAQ,YACjC/B,EAAaC,GACb,IAAMuB,EAAUC,IAAWxB,GAC3BQ,EAASiB,EAAeF,MAEzBb,MAAM,SAAAC,GACLH,EAAS,CAACI,KAAMf,EAAYgB,QAASF,QAI5Bc,EAAiB,SAAAF,GAC5B,MAAO,CACLX,KAAMd,EACNe,QAASU,IAIAQ,EAAa,kBAAM,SAAAvB,GAC9Ba,aAAaW,WAAW,YACxBX,aAAaW,WAAW,UACxBX,aAAaW,WAAW,cACxBjC,GAAa,GACbS,EAASiB,EAAe,KACxBQ,OAAOC,SAASC,OAAO,OCvDnBC,cAEJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,gBAAsD,OAArCzB,aAAaS,QAAQ,YACtCiB,QAAgD,UAAvC1B,aAAaS,QAAQ,eALfQ,yFASOU,IACW,IAAnCA,EAAUC,KAAKH,iBAA4BL,KAAKS,SAAS,CAACJ,iBAAiB,IACzC,UAAlCE,EAAUC,KAAKlC,KAAK,GAAGY,QAAsBc,KAAKS,SAAS,CAACH,SAAS,IACrEI,QAAQC,IAAIJ,sCAIZP,KAAKJ,MAAMN,8CAIX,IAAMsB,EACJC,EAAAC,EAAAC,cAACC,EAAA,EAAOC,SAAR,CAAiBhC,GAAG,oBAClB4B,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKC,UAAU,WACfN,EAAAC,EAAAC,cAACK,EAAA,cAAD,CAAeC,GAAI,SACjBR,EAAAC,EAAAC,cAACG,EAAA,EAAII,KAAL,CAAUC,SAAU,GAApB,eAEAV,EAAAC,EAAAC,cAACK,EAAA,cAAD,CAAeC,GAAI,eACjBR,EAAAC,EAAAC,cAACG,EAAA,EAAII,KAAL,CAAUC,SAAU,GAApB,eAEFV,EAAAC,EAAAC,cAACK,EAAA,cAAD,CAAeC,GAAI,iBACjBR,EAAAC,EAAAC,cAACG,EAAA,EAAII,KAAL,CAAUC,SAAU,GAApB,6BAGJV,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACGlB,KAAKI,MAAME,SACVO,EAAAC,EAAAC,cAACK,EAAA,cAAD,CAAeC,GAAI,WACjBR,EAAAC,EAAAC,cAACG,EAAA,EAAII,KAAL,CAAUC,SAAU,GAApB,mBAGHvB,KAAKI,MAAME,SACVO,EAAAC,EAAAC,cAACK,EAAA,cAAD,CAAeC,GAAI,iBACjBR,EAAAC,EAAAC,cAACG,EAAA,EAAII,KAAL,CAAUC,SAAU,GAApB,kBAGJV,EAAAC,EAAAC,cAACK,EAAA,cAAD,CAAeC,GAAI,cACjBR,EAAAC,EAAAC,cAACG,EAAA,EAAII,KAAL,CAAUC,SAAU,GAApB,eAEFV,EAAAC,EAAAC,cAACG,EAAA,EAAII,KAAL,CAAUC,SAAU,EAAGC,QAASxB,KAAKyB,SAASC,KAAK1B,OAAnD,uBAIN,OACEa,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQW,GAAG,QAAQC,OAAO,MACxBf,EAAAC,EAAAC,cAACC,EAAA,EAAOa,MAAR,CAAcV,UAAU,gBAAxB,gBACAN,EAAAC,EAAAC,cAACC,EAAA,EAAOc,OAAR,CAAeC,gBAAc,qBAC5B/B,KAAKI,MAAMC,gBAAkBO,EAAU,aAzDtBoB,aAwEXC,cAJS,SAAC7B,GAAD,MAAY,CAClCI,KAAMJ,EAAMI,OAG0B,CAAElB,cAA3B2C,CAAyCtC,6GCvElDuC,cACJ,SAAAA,IAAc,IAAArC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,IACZrC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoC,GAAA/B,KAAAH,QACKI,MAAQ,CACX+B,MAAO,GACPC,SAAU,GACVC,OAAQ,IAEVxC,EAAKyC,kBAAoBzC,EAAKyC,kBAAkBZ,KAAvB5B,OAAAyC,EAAA,EAAAzC,QAAAyC,EAAA,EAAAzC,CAAAD,KACzBA,EAAK2C,aAAe3C,EAAK2C,aAAad,KAAlB5B,OAAAyC,EAAA,EAAAzC,QAAAyC,EAAA,EAAAzC,CAAAD,KACpBA,EAAK4C,SAAW5C,EAAK4C,SAASf,KAAd5B,OAAAyC,EAAA,EAAAzC,QAAAyC,EAAA,EAAAzC,CAAAD,KATJA,iFAYI6C,GAChB1C,KAAKS,SAALX,OAAA6C,EAAA,EAAA7C,CAAA,GACG4C,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,yCAIrBJ,GACM,UAAVA,EAAEK,KAAiB/C,KAAKwC,sDAI3B,IAAMlE,EAAO,CACX6D,MAAOnC,KAAKI,MAAM+B,MAClBC,SAAUpC,KAAKI,MAAMgC,UAEvBpC,KAAKJ,MAAMvB,UAAUC,EAAM0B,KAAKJ,MAAMrB,2DAGdgC,GACrBA,EAAU8B,QACXrC,KAAKS,SAAS,CACZ4B,OAAQ9B,EAAU8B,OAAOW,SAASrE,wCAK/B,IACA0D,EAAUrC,KAAKI,MAAfiC,OACP,OACExB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAWhE,GAAG,QAAQkC,UAAU,kBAAkB+B,OAAK,GACrDrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IACnC1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAMvE,GAAG,eACP4B,EAAAC,EAAAC,cAACyC,EAAA,EAAKC,OAAN,KAAa5C,EAAAC,EAAAC,cAAA,2BACbF,EAAAC,EAAAC,cAACyC,EAAA,EAAKE,KAAN,KACE7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAWC,UAAU,SACnB/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACE1F,KAAK,QACL2F,YAAY,kBACZ3C,UAAW4C,IAAW,+BAAgC,CACpDC,aAAc3B,EAAOF,QAEvBU,KAAK,QACLoB,SAAWjE,KAAKsC,kBAChBQ,MAAQ9C,KAAKI,MAAM+B,QACpBE,EAAOF,OAAUtB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBAAoBkB,EAAOF,QAE9DtB,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAWC,UAAU,YACnB/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACE1F,KAAK,WACL2F,YAAY,yBACZ3C,UAAW4C,IAAW,+BAAgC,CACpDC,aAAc3B,EAAOD,WAEvBS,KAAK,WACLoB,SAAWjE,KAAKsC,kBAChB4B,WAAalE,KAAKyC,SAClBK,MAAQ9C,KAAKI,MAAMgC,WACpBC,EAAOD,UAAavB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBAAoBkB,EAAOD,WAEjEvB,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAQ3C,QAASxB,KAAKwC,cAAtB,sBAxEOR,aA+FNC,cAVS,SAAC7B,GAAD,MAAY,CAClCiC,OAAQjC,EAAMiC,SAGW,SAAAtE,GACzB,OAAOqG,YAAoB,CACzB/F,aACCN,IAGUkE,CAA6CC,YCtGrD,SAASmC,IACd,OAAO,SAAStG,GACdP,IAAM8G,IAAI,WACT7F,KAAK,SAASuE,GACbjF,EAAS,CAACI,KAAK,aAAcC,QAAQ4E,EAASrE,SAE/CV,MAAM,SAASC,GACdH,EAAS,CAACI,KAAK,sBAAuBC,QAAQF,OAK7C,SAASqG,EAAcC,GAC5B,OAAO,SAASzG,GACdP,IAAMgB,KAAK,UAAWgG,GACrB/F,KAAK,SAASuE,GACbjF,EAAS,CAACI,KAAK,kBAAmBC,QAAQ4E,EAASrE,SAEpDV,MAAM,SAASC,GACdH,EAAS,CAACI,KAAK,2BAA4BC,QAAQF,OAKlD,SAASuG,EAAaxF,EAAIyF,GAC/B,OAAO,SAAS3G,GACdP,IAAMQ,IAAI,WAAaiB,EAAIyF,GAC1BjG,KAAK,SAASuE,GACbjF,EAAS,CAACI,KAAK,gBAAiBC,QAAQ4E,EAASrE,KAAMM,GAAGA,EAAI0F,MAAMD,MAErEzG,MAAM,SAASC,GACdH,EAAS,CAACI,KAAK,yBAA0BC,QAAQF,OAKhD,SAAS0G,EAAWC,GACzB,OAAO,SAAS9G,GACdP,IAAMgB,KAAK,cAAeqG,GACzBpG,KAAK,SAASuE,GACbjF,EAAS,CAACI,KAAK,cAAeC,QAAQ4E,EAASrE,SAEhDV,MAAM,SAASC,GACdH,EAAS,CAACI,KAAK,uBAAwBC,QAAQF,OAK9C,SAAS4G,IACd,OAAO,SAAS/G,GACdP,IAAM8G,IAAI,eACT7F,KAAK,SAASuE,GACbjF,EAAS,CAACI,KAAK,2BAA4BC,QAAQ4E,EAASrE,SAE7DV,MAAM,SAASC,GACdH,EAAS,CAACI,KAAK,oCAAqCC,QAAQF,OAK3D,SAAS6G,EAAc9F,GAC5B,OAAO,SAASlB,GACdP,IAAM8G,IAAI,eAAiBrF,GAC1BR,KAAK,SAASuE,GACbjF,EAAS,CAACI,KAAK,uBAAwBC,QAAQ4E,EAASrE,SAEzDV,MAAM,SAASC,GACdH,EAAS,CAACI,KAAK,gCAAiCC,QAAQF,iDC9DzC8G,oLACV,IAAAnF,EAAAG,KACDiF,EAAgBjF,KAAKJ,MAAM4E,OAAOU,IAAI,SAACC,EAAOC,GAClD,IAAIC,EAAYF,EAAMG,MAAMzC,KACxB0C,EAAaJ,EAAMG,MAAME,MACzBC,EAAYN,EAAMO,MAAM7C,KACxB8C,EAAaR,EAAMO,MAAMF,MAE7B,OACEL,EAAMS,MAAQ/F,EAAKD,MAAMiG,UAAYhF,EAAAC,EAAAC,cAAA,KAAGgC,IAAKqC,GAAGvE,EAAAC,EAAAC,cAAA,QAAMI,UAAWoE,EAAaI,EAAa,YAAc,MAAON,EAAhE,OAAiFE,GAA5F,MAAiH1E,EAAAC,EAAAC,cAAA,QAAMI,UAAWoE,EAAaI,EAAa,YAAc,MAAOA,EAAhE,OAAkFF,MAG5O,OACE5E,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACfxC,EAAAC,EAAAC,cAACyC,EAAA,EAAD,KACE3C,EAAAC,EAAAC,cAACyC,EAAA,EAAKC,OAAN,KACE5C,EAAAC,EAAAC,cAACyC,EAAA,EAAKsC,MAAN,KACG9F,KAAKJ,MAAMmG,MAAQ,EAAIlF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAW6E,IAAKC,KAAaC,IAAI,aAAgBrF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAW6E,IAAKG,KAAaD,IAAI,aAD1I,2BAE6C,IAArBlG,KAAKJ,MAAMmG,MAAc,MAAQ,UAG3DlF,EAAAC,EAAAC,cAACyC,EAAA,EAAKE,KAAN,KACE7C,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAKjF,UAAU,oBACbN,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GACPvC,EAAAC,EAAAC,cAAA,OAAKiF,IAAKhG,KAAKJ,MAAM0F,MAAMe,IAAKH,IAAKlG,KAAKJ,MAAM0F,MAAMzC,QAExDhC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,EAAGjC,UAAsC,IAA3BnB,KAAKJ,MAAM0F,MAAME,OAAe,oCACrD3E,EAAAC,EAAAC,cAAA,SAAIf,KAAKJ,MAAM0F,MAAMzC,KAArB,IAA4B7C,KAAKJ,MAAM0F,MAAME,SAGjD3E,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAKjF,UAAU,oBACbN,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GACPvC,EAAAC,EAAAC,cAAA,OAAKiF,IAAKhG,KAAKJ,MAAM8F,MAAMW,IAAKH,IAAKlG,KAAKJ,MAAM8F,MAAM7C,QAExDhC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,EAAGjC,UAAsC,IAA3BnB,KAAKJ,MAAM8F,MAAMF,OAAe,oCACrD3E,EAAAC,EAAAC,cAAA,SAAIf,KAAKJ,MAAM8F,MAAM7C,KAArB,IAA4B7C,KAAKJ,MAAM8F,MAAMF,SAGjD3E,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACEvF,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKhC,UAAU,gBACZ8D,cAxCqBjD,8DCMhCsE,eACJ,SAAAA,EAAY1G,EAAO2G,GAAS,IAAA1G,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsG,IAC1BzG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwG,GAAAnG,KAAAH,KAAMJ,EAAO2G,KAER3G,MAAMyE,YAEXxE,EAAKO,MAAQ,CACXyE,KAAQ,GACRxC,OAAU,IAPcxC,4EAWf,IAAA2G,EAAAxG,KACPA,KAAKJ,MAAM4E,OAAOiC,SAAWzG,KAAKI,MAAMyE,KAAK4B,QAC/CzG,KAAKI,MAAMyE,KAAKK,IAAI,SAACwB,EAAOtB,GAE1B,OADAoB,EAAK5G,MAAMgF,WAAW8B,GACfA,IAGT1G,KAAKuG,QAAQI,OAAOpI,QAAQY,KAAK,gBAEjCa,KAAKS,SAAS,CAAE4B,OAAQ,wFAIfK,GAAG,IAAAkE,EAAA5G,KACd0C,EAAEmE,iBAEF7G,KAAKJ,MAAM4E,OAAOU,IAAI,SAACC,EAAOC,GAC5B,IAAI0B,EAAeC,SAASC,eAAe7B,EAAMG,MAAMrG,IACnDgI,EAAeF,SAASC,eAAe7B,EAAMO,MAAMzG,IACnDiI,EAAcC,SAASL,EAAahE,OACpCsE,EAAcD,SAASF,EAAanE,OAExC,OAAIoE,IAAgBE,IAClBR,EAAKxG,MAAMyE,KAAK1F,KAAK,CACnBtB,OAAUe,aAAaS,QAAQ,UAC/BwG,SAAYV,EAAMS,IAClBN,MAAS,CACPzC,KAAQsC,EAAMG,MAAMzC,KACpBwD,IAAOlB,EAAMG,MAAMe,IACnBb,MAAS0B,GAEXxB,MAAS,CACP7C,KAAQsC,EAAMO,MAAM7C,KACpBwD,IAAOlB,EAAMO,MAAMW,IACnBb,MAAS4B,GAEXC,OAAUH,EAAcE,EAAc,QAAU,QAChDE,KAAQJ,EAAcE,IAEjBR,EAAKxG,MAAMyE,QAMtB7E,KAAKuH,8CAIL,OACE1G,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,IACPvC,EAAAC,EAAAC,cAACyC,EAAA,EAAD,KACE3C,EAAAC,EAAAC,cAACyC,EAAA,EAAKC,OAAN,KACE5C,EAAAC,EAAAC,cAACyC,EAAA,EAAKsC,MAAN,KACEjF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAW6E,IAAKwB,KAAStB,IAAI,aAD9C,+DAKFrF,EAAAC,EAAAC,cAACyC,EAAA,EAAKE,KAAN,KACE7C,EAAAC,EAAAC,cAAC0G,GAAA,EAAD,CAAMC,SAAU1H,KAAK2H,aAAajG,KAAK1B,OACrCa,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,IAELpD,KAAKJ,MAAM4E,OAAOU,IAAI,SAACC,EAAOC,GAC5B,OACEvE,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAKrD,IAAKqC,EAAGjE,UAAU,eACrBN,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIjC,UAAU,gBAAeN,EAAAC,EAAAC,cAAA,qCAAgC,IAANqE,EAAU,MAAQ,UAClFvE,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGuE,GAAI,EAAGzG,UAAU,mBACnCN,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGlC,UAAU,gBAC3BN,EAAAC,EAAAC,cAAA,OAAKiF,IAAKb,EAAMG,MAAMe,IAAKH,IAAKf,EAAMG,MAAMzC,OAC5ChC,EAAAC,EAAAC,cAAA,KAAGI,UAAU,qBAAqBgE,EAAMG,MAAMzC,OAEhDhC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACdxC,EAAAC,EAAAC,cAAC0G,GAAA,EAAKI,MAAN,KACEhH,EAAAC,EAAAC,cAAC0G,GAAA,EAAKK,QAAN,CAAcC,GAAG,SAAS9I,GAAIkG,EAAMG,MAAMrG,IACxC4B,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,uBAKRF,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGlC,UAAU,gBAC5BN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,iBAAb,OAEFN,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGuE,GAAI,EAAGzG,UAAU,mBACnCN,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACdxC,EAAAC,EAAAC,cAAC0G,GAAA,EAAKI,MAAN,KACEhH,EAAAC,EAAAC,cAAC0G,GAAA,EAAKK,QAAN,CAAcC,GAAG,SAAS9I,GAAIkG,EAAMO,MAAMzG,IACxC4B,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,sBAINF,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGlC,UAAU,gBAC3BN,EAAAC,EAAAC,cAAA,OAAKiF,IAAKb,EAAMO,MAAMW,IAAKH,IAAKf,EAAMO,MAAM7C,OAC5ChC,EAAAC,EAAAC,cAAA,KAAGI,UAAU,qBAAqBgE,EAAMO,MAAM7C,YAQ5DhC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIjC,UAAU,gBACrBN,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAQhG,KAAK,UAAb,UACuB,KAAtB6B,KAAKI,MAAMiC,QAAkBxB,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIjC,UAAU,oBAAoBnB,KAAKI,MAAMiC,oBA1H7EL,aAoIvBsE,GAAS0B,aAAe,CACtBrB,OAAQsB,KAAUC,QAGpB,IAYejG,eAZS,SAAA7B,GACtB,MAAO,CACLoE,OAAQpE,EAAMoE,OAAOA,SAIE,SAAAzG,GACzB,OAAOqG,YAAmB,CACxBC,YAAWO,cACV7G,IAGUkE,CAA6CqE,ICnJtD6B,eAEJ,SAAAA,EAAYvI,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmI,GACjBtI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqI,GAAAhI,KAAAH,KAAMJ,IAEN,IAAI/B,EAASe,aAAaS,QAAQ,UAHjB,OAKjBQ,EAAKO,MAAQ,CACXvC,OAAQA,EACRuK,SAAS,GAPMvI,mFAYjBG,KAAKJ,MAAMmF,cAAc/E,KAAKI,MAAMvC,QACH,IAAjCmC,KAAKJ,MAAMyI,WAAW5B,QAAgBzG,KAAKS,SAAS,CAAE2H,SAAS,sDAGvC7H,GACQ,IAAhCA,EAAU8H,WAAW5B,QAAgBzG,KAAKS,SAAS,CAAC2H,SAAS,qCAGtD,IAAA5B,EAAAxG,KACP,OACEa,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAWhE,GAAG,YAAYiE,OAAK,GAC7BrC,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACGpG,KAAKI,MAAMgI,QAAUpI,KAAKJ,MAAMyI,WAAWnD,IAAI,SAACL,EAAMO,GAAP,OAAavE,EAAAC,EAAAC,cAACuH,GAADxI,OAAAJ,OAAA,CAAUqD,IAAKqC,GAAOP,EAAtB,CAA4BkB,MAAOX,EAAGZ,OAAQgC,EAAK5G,MAAM4E,YAAc3D,EAAAC,EAAAC,cAACwH,GAAD,eA1B3HvG,aA8CJC,eAbS,SAAA7B,GACtB,MAAO,CACLiI,WAAYjI,EAAMoE,OAAO6D,WACzB7D,OAAQpE,EAAMoE,OAAOA,SAIE,SAAAzG,GACzB,OAAOqG,YAAmB,CACxBW,gBAAeV,aACdtG,IAGUkE,CAA6CkG,cC/BrD,SAASK,KACd,OAAO,SAASzK,GACdP,IAAM8G,IAAI,eACT7F,KAAK,SAASuE,GACbjF,EAAS,CAACI,KAAK,qBAAsBC,QAAQ4E,EAASrE,SAEvDV,MAAM,SAASC,GACdH,EAAS,CAACI,KAAK,8BAA+BC,QAAQF,OAMrD,SAASuK,GAAiBxJ,EAAIyF,GACnC,OAAO,SAAS3G,GACdP,IAAMQ,IAAI,eAAiBiB,EAAIyF,GAC9BjG,KAAK,SAASuE,GACbjF,EAAS,CAACI,KAAK,oBAAqBC,QAAQ4E,EAASrE,KAAMd,OAAOoB,EAAI0F,MAAMD,MAE7EzG,MAAM,SAASC,GACdH,EAAS,CAACI,KAAK,6BAA8BC,QAAQF,WCxCrDwK,eACJ,SAAAA,EAAY9I,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0I,IACjB7I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4I,GAAAvI,KAAAH,KAAMJ,KAEDA,MAAM4I,mBACX3I,EAAKD,MAAMyE,YACXxE,EAAKD,MAAMkF,mBAEXjF,EAAKO,MAAQ,CACXuI,WAAY/J,aAAaS,QAAQ,cACjCiB,SAAS,EACTsI,WAAW,EACXC,QAAS,GACTC,YAAa,GACbtE,OAAQ,IAbO3E,mFAkBS,UAA1BG,KAAKI,MAAMuI,YAA0B3I,KAAKS,SAAS,CAAEH,SAAS,wCAGpD,IAAAkG,EAAAxG,KACVA,KAAKJ,MAAMmJ,cAAc7D,IAAI,SAAC8D,EAAY5D,GAGxC,OAFAoB,EAAKpG,MAAMyI,QAAQ1J,KAAK6J,EAAWnL,QACnC2I,EAAKpG,MAAM0I,YAAY3J,KAAK6J,EAAWC,QAChC,CAACzC,EAAKpG,MAAMyI,QAASrC,EAAKpG,MAAM0I,eAGzC9I,KAAKJ,MAAM4E,OAAOU,IAAI,SAACC,EAAOC,GAAR,OAAcoB,EAAKpG,MAAMoE,OAAOrF,KAAKgG,EAAMS,OAEjE5F,KAAKJ,MAAMsJ,cAAchE,IAAI,SAACL,EAAMO,GAClC,IAAI+D,EAAY3C,EAAKpG,MAAMyI,QAAQO,QAAQvE,EAAKhH,QAC5CwL,EAAa7C,EAAKpG,MAAM0I,YAAYK,GACpCG,EAAc9C,EAAKpG,MAAMoE,OAAO4E,QAAQvE,EAAKgB,UAEjD,GAAGW,EAAK5G,MAAM4E,OAAO8E,GAAajC,SAAWxC,EAAKwC,QAAUb,EAAK5G,MAAM4E,OAAO8E,GAAahC,OAASzC,EAAKyC,KAAM,CAC7G,IAAMiC,EAAW/C,EAAKpG,MAAM0I,YACtBU,EAAUH,EAAa,EAC7BE,EAASJ,GAAaK,EAEtBhD,EAAK/F,SAAS,CACZqI,YAAaS,SAEV,GAAG/C,EAAK5G,MAAM4E,OAAO8E,GAAajC,SAAWxC,EAAKwC,OAAQ,CAC/D,IAAMkC,EAAW/C,EAAKpG,MAAM0I,YACtBU,EAAUH,EAAa,EAC7BE,EAASJ,GAAaK,EAEtBhD,EAAK/F,SAAS,CACZqI,YAAaS,IAKjB,OADA/C,EAAK5G,MAAM6I,iBAAiB5D,EAAKhH,OAAQ,CAAC4L,WAAWJ,IAC9CA,qCAKT,OACExI,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAKpC,UAAU,gBACjDN,EAAAC,EAAAC,cAAC2I,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,GACtCjJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBAAd,cACAN,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBAAd,UACAN,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBAAd,UACAN,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBAAd,uBAGJN,EAAAC,EAAAC,cAAA,aACGf,KAAKJ,MAAMmJ,cAAc7D,IAAI,SAAC6E,EAAO3E,GAAR,OAAcvE,EAAAC,EAAAC,cAAA,MAAIgC,IAAKqC,GAAGvE,EAAAC,EAAAC,cAAA,UAAKqE,EAAI,GAAOvE,EAAAC,EAAAC,cAAA,UAAKgJ,EAAMpB,YAAgB9H,EAAAC,EAAAC,cAAA,UAAKgJ,EAAMd,QAAYpI,EAAAC,EAAAC,cAAA,UAAKgJ,EAAMN,iBAGxIzJ,KAAKI,MAAME,SAAWO,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIjC,UAAU,gBAAeN,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAQ3C,QAASxB,KAAKgK,UAAUtI,KAAK1B,OAArC,wBAC5DA,KAAKI,MAAMwI,WAAa/H,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YAAWN,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,qBA5EnEiB,aAkGVC,eAhBS,SAAA7B,GACtB,MAAO,CACL2I,cAAe3I,EAAM4I,WAAWD,cAChCvE,OAAQpE,EAAMoE,OAAOA,OACrB0E,cAAe9I,EAAMoE,OAAO0E,gBAIL,SAAAnL,GACzB,OAAOqG,YAAmB,CACxBoE,oBACAnE,YAAWS,mBACX2D,qBACC1K,IAGUkE,CAA6CyG,ICnGtDuB,eACJ,SAAAA,EAAYrK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiK,IACjBpK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmK,GAAA9J,KAAAH,KAAMJ,KAEDA,MAAMkF,mBAHMjF,wEAMV,IAAA2G,EAAAxG,KACDkK,EAAalK,KAAKJ,MAAMuK,QAAQjF,IAAI,SAACwB,EAAOtB,GAChD,OAAIsB,EAAM7I,SAAW2I,EAAK5G,MAAM/B,QAE5BgD,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGN,IAAKqC,EAAGjE,UAAU,gBACpCN,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,OAAKiF,IAAKU,EAAMpB,MAAMe,IAAKH,IAAKQ,EAAMpB,MAAMzC,KAAMuH,MAAM,QAD1D,YAEEvJ,EAAAC,EAAAC,cAAA,QAAMI,UAAiC,IAAtBuF,EAAMpB,MAAME,MAAc,YAAc,IAAKkB,EAAMpB,MAAME,OAF5E,uBAIE3E,EAAAC,EAAAC,cAAA,QAAMI,UAAiC,IAAtBuF,EAAMhB,MAAMF,MAAc,YAAc,IAAKkB,EAAMhB,MAAMF,OAJ5E,WAME3E,EAAAC,EAAAC,cAAA,OAAKiF,IAAKU,EAAMhB,MAAMW,IAAKH,IAAKQ,EAAMhB,MAAM7C,KAAMuH,MAAM,YAOlE,OACEvJ,EAAAC,EAAAC,cAACyC,EAAA,EAAD,KACE3C,EAAAC,EAAAC,cAACyC,EAAA,EAAKC,OAAN,KACE5C,EAAAC,EAAAC,cAACyC,EAAA,EAAKsC,MAAN,gBAAqB9F,KAAKJ,MAAM+I,aAElC9H,EAAAC,EAAAC,cAACyC,EAAA,EAAKE,KAAN,KACE7C,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACG8D,YAhCalI,aAoDXC,eAZS,SAAA7B,GACtB,MAAO,CACL+J,QAAS/J,EAAMoE,OAAO0E,gBAIC,SAAAnL,GACzB,OAAOqG,YAAmB,CACxBU,oBACC/G,IAGUkE,CAA6CgI,IC/CtDI,eAEJ,SAAAA,EAAYzK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqK,IACjBxK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuK,GAAAlK,KAAAH,KAAMJ,KAEDA,MAAMmF,cAAcnG,aAAaS,QAAQ,WAC9CQ,EAAKD,MAAMkF,mBACXjF,EAAKD,MAAM4I,mBAEX3I,EAAKO,MAAQ,CACXgI,SAAS,GARMvI,mFAajBG,KAAKJ,MAAM0K,SAAS7D,OAAS,GAAKzG,KAAKS,SAAS,CAAE2H,SAAS,+CAG1CmC,GACbA,EAAUJ,QAAQ1D,SAAWzG,KAAKJ,MAAMuK,QAAQ1D,QAClDzG,KAAKS,SAAS,CAAE2H,SAAS,qCAK3B,OACEvH,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAWhE,GAAG,YAAYiE,OAAK,GAC7BrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,IACNpD,KAAKI,MAAMgI,QAAUpI,KAAKJ,MAAMoJ,WAAW9D,IAAI,SAACsF,EAAOpF,GAAR,OAAcvE,EAAAC,EAAAC,cAAC0J,GAAD3K,OAAAJ,OAAA,CAAaqD,IAAKqC,GAAOoF,MAAY3J,EAAAC,EAAAC,cAAA,mDA5BvFiB,aAkDPC,eAfS,SAAA7B,GACtB,MAAO,CACLkK,SAAUlK,EAAMoE,OAAO6D,WACvBW,WAAY5I,EAAM4I,WAAWD,cAC7BoB,QAAS/J,EAAMoE,OAAO0E,gBAIC,SAAAnL,GACzB,OAAOqG,YAAmB,CACxBW,gBAAeD,mBACf0D,qBACCzK,IAGUkE,CAA6CoI,cCvDtDK,eAEJ,SAAAA,EAAY9K,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0K,GAGjB,IAAI7M,GAFJgC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4K,GAAAvK,KAAAH,KAAMJ,KAEYA,MAAMX,GAHP,OAKjBY,EAAKO,MAAQ,CACXvC,OAAQA,EACR8M,YAAY,GAPG9K,4EAYjBG,KAAKS,SAAS,CAACkK,YAAa3K,KAAKI,MAAMuK,kDAIvC,IAAIC,EAAe,CACjBC,IAAKC,sBAAY9K,KAAK+K,KAAKC,QAAQlI,MACnCmI,OAAQH,sBAAY9K,KAAK+K,KAAKG,WAAWpI,MACzC5D,OAAQ4L,sBAAY9K,KAAK+K,KAAKI,WAAWrI,MACzCX,MAAO2I,sBAAY9K,KAAK+K,KAAKK,UAAUtI,OAEzC9C,KAAKJ,MAAMhC,WAAWoC,KAAKI,MAAMvC,OAAQ+M,GACzC5K,KAAKJ,MAAMN,8CAIX,OACEuB,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAClC1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,KACE3C,EAAAC,EAAAC,cAACyC,EAAA,EAAKC,OAAN,KACE5C,EAAAC,EAAAC,cAACyC,EAAA,EAAKsC,MAAN,4CAEFjF,EAAAC,EAAAC,cAACyC,EAAA,EAAKE,KAAN,KACG1D,KAAKI,MAAMuK,WACV9J,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAWC,UAAU,UACnB/C,EAAAC,EAAAC,cAACsK,GAAA,EAAD,yBACAxK,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACE1F,KAAK,OACLmN,aAActL,KAAKJ,MAAMiL,IACzBU,IAAI,aAGV1K,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAWC,UAAU,aACnB/C,EAAAC,EAAAC,cAACsK,GAAA,EAAD,+BACAxK,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACE1F,KAAK,OACLmN,aAActL,KAAKJ,MAAMqL,OACzBM,IAAI,gBAGV1K,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAWC,UAAU,aACnB/C,EAAAC,EAAAC,cAACsK,GAAA,EAAD,4BACAxK,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACE1F,KAAK,OACLmN,aAActL,KAAKJ,MAAMV,OACzBqM,IAAI,gBAGV1K,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAWC,UAAU,YACnB/C,EAAAC,EAAAC,cAACsK,GAAA,EAAD,2BACAxK,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CACE1F,KAAK,OACLmN,aAActL,KAAKJ,MAAMuC,MACzBoJ,IAAI,eAGV1K,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAQ3C,QAASxB,KAAKwL,WAAW9J,KAAK1B,OAAtC,eACAa,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAQ3C,QAASxB,KAAK2K,WAAWjJ,KAAK1B,OAAtC,YAEFa,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wIAENF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mBAAWf,KAAKJ,MAAMiL,KACtBhK,EAAAC,EAAAC,cAAA,yBAAcf,KAAKJ,MAAMqL,QACzBpK,EAAAC,EAAAC,cAAA,sBAAcf,KAAKJ,MAAMV,QACzB2B,EAAAC,EAAAC,cAAA,qBAAaf,KAAKJ,MAAMuC,OACxBtB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAQ3C,QAASxB,KAAK2K,WAAWjJ,KAAK1B,OAAtC,wBArFKgC,aAqGVC,mBAAQ,KANvB,SAA4BlE,GAC1B,OAAOqG,YAAmB,CACxBxG,aAAY0B,cACXvB,IAGUkE,CAAkCyI,ICpGpCe,GAAb,SAAAC,GAEE,SAAAD,EAAY7L,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyL,GACjB5L,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2L,GAAAtL,KAAAH,KAAMJ,IACN,IAAI+I,EAAa/J,aAAaS,QAAQ,cAClCxB,EAASe,aAAaS,QAAQ,UAHjB,OAKjBQ,EAAKO,MAAQ,CACXuI,WAAYA,EACZ9K,OAAQA,EACR8N,YAAY,GARG9L,EAFrB,OAAAC,OAAA8L,EAAA,EAAA9L,CAAA2L,EAAAC,GAAA5L,OAAA+L,EAAA,EAAA/L,CAAA2L,EAAA,EAAA1I,IAAA,oBAAAD,MAAA,WAeI9C,KAAKJ,MAAMR,QAAQ,CAAEH,GAAIe,KAAKI,MAAMvC,WAfxC,CAAAkF,IAAA,SAAAD,MAAA,WAmBI,OACEjC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAWhE,GAAG,aAAakC,UAAU,kBAAkB+B,OAAK,GAC1DrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,IACPvC,EAAAC,EAAAC,cAAA,MAAII,UAAU,gBAAd,oBAA+CnB,KAAKI,MAAMuI,YACzD3I,KAAKJ,MAAMkM,SAAS5G,IAAI,SAAC5G,EAAM8G,GAAP,OAAavE,EAAAC,EAAAC,cAACgL,GAADjM,OAAAJ,OAAA,CAAYqD,IAAKqC,GAAO9G,YAvBxEmN,EAAA,CAA+BzJ,aA0ChBC,mBAZf,SAAyB7B,GACvB,MAAO,CACL0L,SAAU1L,EAAMI,KAAKlC,OAIzB,SAA4BP,GAC1B,OAAOqG,YAAmB,CACxBhF,WACCrB,IAGUkE,CAA6CwJ,IChDrD,SAASO,KACd,OAAO,SAASjO,GACdP,IAAM8G,IAAI,UACT7F,KAAK,SAASuE,GACbjF,EAAS,CAACI,KAAK,YAAaC,QAAQ4E,EAASrE,SAE9CV,MAAM,SAASC,GACdH,EAAS,CAACI,KAAK,qBAAsBC,QAAQF,WCA7C+N,eACJ,SAAAA,EAAYrM,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiM,IACjBpM,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmM,GAAA9L,KAAAH,KAAMJ,KAEDA,MAAMoM,WAHMnM,0EAMRyF,EAAOI,GAChB,IAAIwG,EAAY,CACd5G,MAASA,EACTI,MAASA,EACT2B,OAAU,GACVC,KAAQ,GAGVtH,KAAKJ,MAAM2E,cAAc2H,wCAGdxJ,GACXA,EAAEmE,iBAEF,IAAIsF,EAAWpF,SAASC,eAAe,SAASlE,MAC5CsJ,EAAWrF,SAASC,eAAe,SAASlE,MAC5CwC,EAAQ,GACRI,EAAQ,GAEZ1F,KAAKJ,MAAMyM,MAAMnH,IAAI,SAACoH,EAAMlH,GAiB1B,OAhBG+G,IAAaG,EAAKzJ,OACnByC,EAAQ,CACNrG,GAAMqN,EAAK1G,IACX/C,KAAQyJ,EAAKzJ,KACbwD,IAAOiG,EAAKjG,IACZb,MAAS,IAGV4G,IAAaE,EAAKzJ,OACnB6C,EAAQ,CACNzG,GAAMqN,EAAK1G,IACX/C,KAAQyJ,EAAKzJ,KACbwD,IAAOiG,EAAKjG,IACZb,MAAS,IAGN,CAACF,EAAOI,KAGjB1F,KAAKuH,WAAWjC,EAAOI,oCAIvB,IAAM6G,EAAcvM,KAAKJ,MAAMyM,MAAMnH,IAAI,SAACoH,EAAMlH,GAAP,OAAavE,EAAAC,EAAAC,cAAA,UAAQgC,IAAKqC,GAAIkH,EAAKzJ,QAC5E,OACEhC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,CAAEC,KAAK,EAAIC,OAAO,IACjC1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,KACE3C,EAAAC,EAAAC,cAACyC,EAAA,EAAKC,OAAN,KACE5C,EAAAC,EAAAC,cAACyC,EAAA,EAAKsC,MAAN,kCAIFjF,EAAAC,EAAAC,cAACyC,EAAA,EAAKE,KAAN,KACE7C,EAAAC,EAAAC,cAAC0G,GAAA,EAAD,CAAMC,SAAU1H,KAAK2H,aAAajG,KAAK1B,OACrCa,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIjC,UAAU,gBAAeN,EAAAC,EAAAC,cAAA,oBACtCF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAKjF,UAAU,eACbN,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GACPvC,EAAAC,EAAAC,cAAC0G,GAAA,EAAKI,MAAN,KACEhH,EAAAC,EAAAC,cAAC0G,GAAA,EAAKK,QAAN,CAAcC,GAAG,SAAS9I,GAAG,SAC1BsN,KAIP1L,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,EAAGjC,UAAU,gBACpBN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,iBAAb,OAEFN,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GACPvC,EAAAC,EAAAC,cAAC0G,GAAA,EAAKI,MAAN,KACEhH,EAAAC,EAAAC,cAAC0G,GAAA,EAAKK,QAAN,CAAcC,GAAG,SAAS9I,GAAG,SAC1BsN,MAKT1L,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIjC,UAAU,gBACrBN,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAQhG,KAAK,UAAb,sBAlFS6D,aAyGVC,eAbS,SAAA7B,GACtB,MAAO,CACLiM,MAAOjM,EAAMiM,MAAMA,QAII,SAAAtO,GACzB,OAAOqG,YAAmB,CACxB4H,YACAzH,iBACCxG,IAGUkE,CAA6CgK,IC1GtDO,eACJ,SAAAA,EAAY5M,EAAO2G,GAAS,IAAA1G,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwM,IAC1B3M,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0M,GAAArM,KAAAH,KAAMJ,EAAO2G,KAER3G,MAAMyE,YAEXxE,EAAKO,MAAQ,CACXqM,OAAU,IANc5M,2EAUhB,IAAA2G,EAAAxG,KACVA,KAAKI,MAAMqM,OAAOvH,IAAI,SAACwB,EAAOtB,GAAR,OAAcoB,EAAK5G,MAAM6E,aAAaiC,EAAMd,IAAKc,0CAG5DhE,GAAG,IAAAkE,EAAA5G,KACd0C,EAAEmE,iBAEF7G,KAAKJ,MAAM4E,OAAOU,IAAI,SAACC,EAAOC,GAC5B,IAAI0B,EAAeC,SAASC,eAAe7B,EAAMG,MAAMrG,IACnDgI,EAAeF,SAASC,eAAe7B,EAAMO,MAAMzG,IACnDiI,EAAcC,SAASL,EAAahE,OACpCsE,EAAcD,SAASF,EAAanE,OAmBxC,OAjBA8D,EAAKxG,MAAMqM,OAAOtN,KAAK,CACrByG,IAAOT,EAAMS,IACbN,MAAS,CACPzC,KAAQsC,EAAMG,MAAMzC,KACpBwD,IAAOlB,EAAMG,MAAMe,IACnBb,MAAS0B,EACTjI,GAAMkG,EAAMG,MAAMrG,IAEpByG,MAAS,CACP7C,KAAQsC,EAAMO,MAAM7C,KACpBwD,IAAOlB,EAAMO,MAAMW,IACnBb,MAAS4B,EACTnI,GAAMkG,EAAMO,MAAMzG,IAEpBoI,OAAUH,EAAcE,EAAc,QAAWF,IAAgBE,EAAc,GAAI,QACnFE,KAAQJ,EAAcE,IAEjBR,EAAKxG,MAAMqM,SAGpBzM,KAAK0M,6CAIL,OACE7L,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,IACPvC,EAAAC,EAAAC,cAACyC,EAAA,EAAD,KACE3C,EAAAC,EAAAC,cAACyC,EAAA,EAAKC,OAAN,KACE5C,EAAAC,EAAAC,cAACyC,EAAA,EAAKsC,MAAN,mCAIFjF,EAAAC,EAAAC,cAACyC,EAAA,EAAKE,KAAN,KACE7C,EAAAC,EAAAC,cAAC0G,GAAA,EAAD,CAAMC,SAAU1H,KAAK2H,aAAajG,KAAK1B,OACrCa,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,IAELpD,KAAKJ,MAAM4E,OAAOU,IAAI,SAACC,EAAOC,GAC5B,OACEvE,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAKrD,IAAKqC,EAAGjE,UAAU,eACrBN,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIjC,UAAU,gBAAeN,EAAAC,EAAAC,cAAA,mBAAWqE,EAAI,IACrDvE,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGuE,GAAI,EAAGzG,UAAU,mBACnCN,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGlC,UAAU,gBAC3BN,EAAAC,EAAAC,cAAA,OAAKiF,IAAKb,EAAMG,MAAMe,IAAKH,IAAKf,EAAMG,MAAMzC,OAC5ChC,EAAAC,EAAAC,cAAA,KAAGI,UAAU,qBAAqBgE,EAAMG,MAAMzC,OAEhDhC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACdxC,EAAAC,EAAAC,cAAC0G,GAAA,EAAKI,MAAN,KACEhH,EAAAC,EAAAC,cAAC0G,GAAA,EAAKK,QAAN,CAAcC,GAAG,QAAQ9I,GAAIkG,EAAMG,MAAMrG,GAAIqM,aAAcnG,EAAMG,MAAME,WAI7E3E,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGlC,UAAU,gBAC5BN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,iBAAb,OAEFN,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGuE,GAAI,EAAGzG,UAAU,mBACnCN,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACdxC,EAAAC,EAAAC,cAAC0G,GAAA,EAAKI,MAAN,KACEhH,EAAAC,EAAAC,cAAC0G,GAAA,EAAKK,QAAN,CAAcC,GAAG,QAAQ9I,GAAIkG,EAAMO,MAAMzG,GAAIqM,aAAcnG,EAAMO,MAAMF,UAG3E3E,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGlC,UAAU,gBAC3BN,EAAAC,EAAAC,cAAA,OAAKiF,IAAKb,EAAMO,MAAMW,IAAKH,IAAKf,EAAMO,MAAM7C,OAC5ChC,EAAAC,EAAAC,cAAA,KAAGI,UAAU,qBAAqBgE,EAAMO,MAAM7C,YAQ5DhC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKC,GAAI,GAAIjC,UAAU,gBACrBN,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAQhG,KAAK,UAAb,sBA/FW6D,aAqHZC,eAZS,SAAA7B,GACtB,MAAO,CACLoE,OAAQpE,EAAMoE,OAAOA,SAIE,SAAAzG,GACzB,OAAOqG,YAAmB,CACxBC,YAAWI,gBACV1G,IAGUkE,CAA6CuK,ICrG7CG,GAdF,kBACX9L,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,KACE/L,EAAAC,EAAAC,cAAC8L,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9K,IACjCrB,EAAAC,EAAAC,cAAC8L,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAW7E,KAC/BtH,EAAAC,EAAAC,cAAC8L,EAAA,EAAD,CAAOE,KAAK,cAAcC,UAAWtE,KACrC7H,EAAAC,EAAAC,cAAC8L,EAAA,EAAD,CAAOE,KAAK,gBAAgBC,UAAW3C,KACvCxJ,EAAAC,EAAAC,cAAC8L,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAWvB,KACpC5K,EAAAC,EAAAC,cAAC8L,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWf,KACjCpL,EAAAC,EAAAC,cAAC8L,EAAA,EAAD,CAAOE,KAAK,gBAAgBC,UAAWR,QCL9BS,oLATX,OACEpM,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAACmM,EAAD,MACArM,EAAAC,EAAAC,cAACoM,GAAD,cALUnL,+BCJZoL,GAAgB,CACpBf,MAAO,GACPgB,MAAO,MCFHD,GAAgB,CACpB5I,OAAQ,GACR8I,UAAW,GACXC,WAAY,GACZlF,WAAY,GACZa,cAAe,GACfmE,MAAO,MCNHD,GAAgB,CACpBvI,KAAM,GACNyF,SAAU,GACVH,QAAS,ICHLiD,GAAgB,CACpBpE,WAAY,GACZwE,eAAgB,GAChBzE,cAAe,ICHJ0E,GAAU,SAAC3K,GACtB,YACY4K,IAAV5K,GACU,OAAVA,GACkB,kBAAVA,GAAoD,IAA9BhD,OAAO6N,KAAK7K,GAAO2D,QAC/B,kBAAV3D,GAA8C,IAAxBA,EAAM8K,OAAOnH,QCFzCoH,GAAe,CACnBxN,iBAAiB,EACjB/B,KAAM,ICHR,IAAMuP,GAAe,GCMNC,mBAAgB,CAC7BzB,MPJ0B,WAAiC,IAAhCjM,EAAgC2N,UAAAtH,OAAA,QAAAiH,IAAAK,UAAA,GAAAA,UAAA,GAA1BX,GAAeY,EAAWD,UAAAtH,OAAA,EAAAsH,UAAA,QAAAL,EAC3D,OAAQM,EAAO7P,MACb,IAAK,YACH,OAAO2B,OAAAmO,GAAA,EAAAnO,CAAA,GAAIM,EAAX,CAAkBiM,MAAMvM,OAAAoO,GAAA,EAAApO,CAAIkO,EAAO5P,WACrC,IAAK,qBACH,OAAO4P,EAAO5P,QAChB,QACE,OAAOgC,IOFXoE,OND2B,WAAiC,IAAhCpE,EAAgC2N,UAAAtH,OAAA,QAAAiH,IAAAK,UAAA,GAAAA,UAAA,GAA1BX,GAAeY,EAAWD,UAAAtH,OAAA,EAAAsH,UAAA,QAAAL,EAC5D,OAAQM,EAAO7P,MACb,IAAK,aACH,OAAO2B,OAAAmO,GAAA,EAAAnO,CAAA,GAAIM,EAAX,CAAkBoE,OAAO1E,OAAAoO,GAAA,EAAApO,CAAIkO,EAAO5P,WACtC,IAAK,sBACH,OAAO4P,EAAO5P,QAEhB,IAAK,kBACH,OAAO0B,OAAAmO,GAAA,EAAAnO,CAAA,GAAIM,EAAX,CAAkBkN,UAAUxN,OAAAoO,GAAA,EAAApO,CAAIkO,EAAO5P,WACzC,IAAK,2BACH,OAAO4P,EAAO5P,QAEhB,IAAK,gBACH,IAAMmL,EAAQzJ,OAAAoO,GAAA,EAAApO,CAAOM,EAAMoE,QACrBgF,EAAUwE,EAAOrJ,MAEvB,OADA4E,EAASA,EAAS4E,UAAU,SAAAC,GAAI,OAAIA,EAAKxI,MAAQoI,EAAO/O,MAAOuK,EACxD1J,OAAAmO,GAAA,EAAAnO,CAAA,GACFM,EADL,CAEEoE,OAAO+E,IAEX,IAAK,yBACH,OAAOyE,EAAO5P,QAEhB,IAAK,cACH,OAAO0B,OAAAmO,GAAA,EAAAnO,CAAA,GAAIM,EAAX,CAAkBmN,WAAWzN,OAAAoO,GAAA,EAAApO,CAAIkO,EAAO5P,WAC1C,IAAK,uBACH,OAAO4P,EAAO5P,QAEhB,IAAK,uBACH,OAAO0B,OAAAmO,GAAA,EAAAnO,CAAA,GAAIM,EAAX,CAAkBiI,WAAWvI,OAAAoO,GAAA,EAAApO,CAAIkO,EAAO5P,WAC1C,IAAK,gCACH,OAAO4P,EAAO5P,QAEhB,IAAK,2BACH,OAAO0B,OAAAmO,GAAA,EAAAnO,CAAA,GAAIM,EAAX,CAAkB8I,cAAcpJ,OAAAoO,GAAA,EAAApO,CAAIkO,EAAO5P,WAC7C,IAAK,oCACH,OAAO4P,EAAO5P,QAEhB,QACE,OAAOgC,IMrCXyE,KLLyB,WAAiC,IAAhCzE,EAAgC2N,UAAAtH,OAAA,QAAAiH,IAAAK,UAAA,GAAAA,UAAA,GAA1BX,GAAeY,EAAWD,UAAAtH,OAAA,EAAAsH,UAAA,QAAAL,EAC1D,OAAQM,EAAO7P,MACb,IAAK,YACH,OAAO2B,OAAAmO,GAAA,EAAAnO,CAAA,GAAIM,EAAX,CAAkByE,KAAI,GAAAwJ,OAAAvO,OAAAoO,GAAA,EAAApO,CAAKM,EAAMyE,MAAX,CAAiBmJ,EAAO5P,YAChD,IAAK,qBACH,OAAO4P,EAAO5P,QAChB,IAAK,WACH,OAAO0B,OAAAmO,GAAA,EAAAnO,CAAA,GAAIM,EAAX,CAAkBkK,SAASxK,OAAAoO,GAAA,EAAApO,CAAIkO,EAAO5P,WACxC,IAAK,oBACH,OAAO4P,EAAO5P,QAChB,IAAK,eACH,OAAO0B,OAAAmO,GAAA,EAAAnO,CAAA,GAAIM,EAAX,CAAkB+J,QAAQrK,OAAAoO,GAAA,EAAApO,CAAIkO,EAAO5P,WACvC,IAAK,wBACH,OAAO4P,EAAO5P,QAChB,QACE,OAAOgC,IKTX4I,WJN+B,WAAiC,IAAhC5I,EAAgC2N,UAAAtH,OAAA,QAAAiH,IAAAK,UAAA,GAAAA,UAAA,GAA1BX,GAAeY,EAAWD,UAAAtH,OAAA,EAAAsH,UAAA,QAAAL,EAChE,OAAQM,EAAO7P,MACb,IAAK,kBACH,OAAO2B,OAAAmO,GAAA,EAAAnO,CAAA,GAAIM,EAAX,CAAkB4I,WAAU,GAAAqF,OAAAvO,OAAAoO,GAAA,EAAApO,CAAKM,EAAM4I,YAAX,CAAuBgF,EAAO5P,YAC5D,IAAK,2BACH,OAAO4P,EAAO5P,QAEhB,IAAK,iBACH,OAAO0B,OAAAmO,GAAA,EAAAnO,CAAA,GAAIM,EAAX,CAAkBoN,eAAe1N,OAAAoO,GAAA,EAAApO,CAAIkO,EAAO5P,WAC9C,IAAK,0BACH,OAAO4P,EAAO5P,QAEhB,IAAK,qBACH,OAAO0B,OAAAmO,GAAA,EAAAnO,CAAA,GAAIM,EAAX,CAAkB2I,cAAcjJ,OAAAoO,GAAA,EAAApO,CAAIkO,EAAO5P,WAC7C,IAAK,8BACH,OAAO4P,EAAO5P,QAEhB,IAAK,oBACH,IAAMmL,EAAQzJ,OAAAoO,GAAA,EAAApO,CAAOM,EAAM2I,eACrBS,EAAUwE,EAAOrJ,MAEvB,OADA4E,EAASA,EAAS4E,UAAU,SAAAC,GAAI,OAAIA,EAAKxI,MAAQoI,EAAO/O,MAAOuK,EACxD1J,OAAAmO,GAAA,EAAAnO,CAAA,GACFM,EADL,CAEE2I,cAAcQ,IAElB,IAAK,6BACH,OAAOyE,EAAO5P,QAChB,QACE,OAAOgC,IIrBXiC,ODTK,WAAqD,IAA/BjC,EAA+B2N,UAAAtH,OAAA,QAAAiH,IAAAK,UAAA,GAAAA,UAAA,GAAvBF,GAAcG,EAASD,UAAAtH,OAAA,EAAAsH,UAAA,QAAAL,EAC1D,OAAOM,EAAO7P,MACZ,KAAKf,EACH,OAAO4Q,EAAO5P,QAEhB,QACE,OAAOgC,ICIXI,KFNK,WAAoD,IAA/BJ,EAA+B2N,UAAAtH,OAAA,QAAAiH,IAAAK,UAAA,GAAAA,UAAA,GAAvBF,GAAcG,EAASD,UAAAtH,OAAA,EAAAsH,UAAA,QAAAL,EACzD,OAAOM,EAAO7P,MACZ,KAAKd,EACL,OAAOyC,OAAAmO,GAAA,EAAAnO,CAAA,GACFM,EADL,CAEEC,iBAAkBoN,GAAQO,EAAO5P,SACjCE,KAAM,CAAC0P,EAAO5P,WAEhB,QACA,OAAOgC,MGLSkO,QACW,cAA7B9O,OAAOC,SAAS8O,UAEa,UAA7B/O,OAAOC,SAAS8O,UAEhB/O,OAAOC,SAAS8O,SAASxI,MACvB,iFCMEyI,GAAQC,YAAYC,GAAUC,YAAgBC,eAAWC,OAE/DC,IAASC,OACPlO,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAUR,MAAOA,IACf3N,EAAAC,EAAAC,cAACkO,EAAA,EAAD,KACEpO,EAAAC,EAAAC,cAACmO,GAAD,QAGHnI,SAASC,eAAe,SAEZwH,aD+FT,kBAAmBW,WACrBA,UAAUC,cAAcC,MAAM5Q,KAAK,SAAA6Q,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.002a9a1c.chunk.js","sourcesContent":["export const GET_ERRORS = 'GET_ERRORS';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n  if(token) {\r\n    axios.defaults.headers.common['Authorization'] = token;\r\n  }\r\n  else {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n}\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './Types';\r\nimport setAuthToken from '../SetAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const registerUser = (user, history) => dispatch => {\r\n  axios.post('/user', user)\r\n  .then(res => history.push('/signin'))\r\n  .catch(err => {\r\n    dispatch({type: GET_ERRORS, payload: err.response.data});\r\n  });\r\n}\r\n\r\nexport const updateUser = (userID, newDatas) => dispatch => {\r\n  axios.put('/user/' + userID, newDatas)\r\n  .catch(err => {\r\n    dispatch({type: GET_ERRORS, payload: err});\r\n  });\r\n}\r\n\r\nexport const loginUser = (user, history) => dispatch => {\r\n  axios.post('/login', user)\r\n  .then(res => {\r\n    const { token } = res.data;\r\n    localStorage.setItem('jwtToken', token);\r\n    setAuthToken(token);\r\n    const decoded = jwt_decode(token);\r\n    dispatch(setCurrentUser(decoded));\r\n    localStorage.setItem('userID', decoded.id);\r\n    localStorage.setItem('userPseudo', decoded.pseudo);\r\n    history.push('/classement')\r\n  })\r\n  .catch(err => {\r\n    dispatch({type: GET_ERRORS, payload: err});\r\n  });\r\n}\r\n\r\nexport const getUser = (userID) => dispatch => {\r\n  axios.post('/login', userID)\r\n  .then(res => {\r\n    let token = localStorage.getItem('jwtToken');\r\n    setAuthToken(token);\r\n    const decoded = jwt_decode(token);\r\n    dispatch(setCurrentUser(decoded));\r\n  })\r\n  .catch(err => {\r\n    dispatch({type: GET_ERRORS, payload: err});\r\n  });\r\n}\r\n\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  }\r\n}\r\n\r\nexport const logoutUser = () => dispatch => {\r\n  localStorage.removeItem('jwtToken');\r\n  localStorage.removeItem('userID');\r\n  localStorage.removeItem('userPseudo');\r\n  setAuthToken(false);\r\n  dispatch(setCurrentUser({}));\r\n  window.location.assign(\"/\");\r\n}\r\n","import React, { Component }  from 'react'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { logoutUser } from './actions/Authentication'\r\n\r\nclass FullNavbars extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isAuthenticated: localStorage.getItem('jwtToken') !== null ? true : false,\r\n      isAdmin: localStorage.getItem('userPseudo') === 'C Fab' ? true : false\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    nextProps.auth.isAuthenticated === true && this.setState({isAuthenticated: true})\r\n    nextProps.auth.user[0].pseudo === 'C Fab' && this.setState({isAdmin: true})\r\n    console.log(nextProps)\r\n  }\r\n\r\n  onLogout() {\r\n    this.props.logoutUser()\r\n  }\r\n\r\n  render() {\r\n    const authNav = (\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n        <LinkContainer to={\"/vote\"}>\r\n          <Nav.Link eventKey={0}>Mon vote !</Nav.Link>\r\n        </LinkContainer>\r\n          <LinkContainer to={\"/classement\"}>\r\n            <Nav.Link eventKey={1}>Classement</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to={\"/quiavotequoi\"}>\r\n            <Nav.Link eventKey={2}>Qui à voté quoi !</Nav.Link>\r\n          </LinkContainer>\r\n        </Nav>\r\n        <Nav>\r\n          {this.state.isAdmin &&\r\n            <LinkContainer to={\"/series\"}>\r\n              <Nav.Link eventKey={5}>Ajouter series</Nav.Link>\r\n            </LinkContainer>\r\n          }\r\n          {this.state.isAdmin &&\r\n            <LinkContainer to={\"/updateseries\"}>\r\n              <Nav.Link eventKey={6}>Update series</Nav.Link>\r\n            </LinkContainer>\r\n          }\r\n          <LinkContainer to={\"/monCompte\"}>\r\n            <Nav.Link eventKey={3}>Mon Compte</Nav.Link>\r\n          </LinkContainer>\r\n          <Nav.Link eventKey={4} onClick={this.onLogout.bind(this)}>Me déconnecter</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    )\r\n    return (\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand className=\"navbar-brand\">NHL vote app</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        {this.state.isAuthenticated ? authNav : null}\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nFullNavbars.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(FullNavbars);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Col, FormGroup, FormControl, Button, Card } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from 'redux';\r\nimport classnames from 'classnames';\r\n\r\nimport { loginUser } from '../actions/Authentication';\r\n\r\nclass Signin extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      errors: {}\r\n    }\r\n    this.handleInputChange = this.handleInputChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.checkKey = this.checkKey.bind(this)\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  checkKey(e) {\r\n    if(e.key === 'Enter') this.handleSubmit()\r\n  }\r\n\r\n  handleSubmit() {\r\n    const user = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    }\r\n    this.props.loginUser(user, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors.response.data\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {errors} = this.state;\r\n    return (\r\n      <Container id=\"login\" className=\"vertical-middle\" fluid>\r\n        <Col xs={12}  md={{ span: 4, offset: 4 }}>\r\n          <Card id=\"signinPanel\">\r\n            <Card.Header><h3>Connecte toi</h3></Card.Header>\r\n            <Card.Body>\r\n              <FormGroup controlId=\"email\">\r\n                <FormControl\r\n                  type='email'\r\n                  placeholder=\"Entre ton email\"\r\n                  className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': errors.email\r\n                  })}\r\n                  name=\"email\"\r\n                  onChange={ this.handleInputChange }\r\n                  value={ this.state.email } />\r\n                {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\r\n              </FormGroup>\r\n              <FormGroup controlId=\"password\">\r\n                <FormControl\r\n                  type='password'\r\n                  placeholder=\"Entre ton mot de passe\"\r\n                  className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': errors.password\r\n                  })}\r\n                  name=\"password\"\r\n                  onChange={ this.handleInputChange }\r\n                  onKeyPress={ this.checkKey }\r\n                  value={ this.state.password } />\r\n                {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n              </FormGroup>\r\n              <Button onClick={this.handleSubmit}>Envoyer</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nSignin.propTypes = {\r\n  errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators ({\r\n    loginUser\r\n  }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)\r\n","import axios from 'axios';\r\n\r\nexport function getSeries() {\r\n  return function(dispatch) {\r\n    axios.get('/series')\r\n    .then(function(response) {\r\n      dispatch({type:\"GET_SERIES\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"GET_SERIES_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n\r\nexport function postNhlSeries(series) {\r\n  return function(dispatch) {\r\n    axios.post('/series', series)\r\n    .then(function(response) {\r\n      dispatch({type:\"POST_NHL_SERIES\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"POST_NHL_SERIES_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n\r\nexport function updateSeries(id, newData) {\r\n  return function(dispatch) {\r\n    axios.put('/series/' + id, newData)\r\n    .then(function(response) {\r\n      dispatch({type:\"UPDATE_SERIES\", payload:response.data, id:id, datas:newData})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"UPDATE_SERIES_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n\r\nexport function postSeries(vote) {\r\n  return function(dispatch) {\r\n    axios.post('/voteseries', vote)\r\n    .then(function(response) {\r\n      dispatch({type:\"POST_SERIES\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"POST_SERIES_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n\r\nexport function getAllUserSeries() {\r\n  return function(dispatch) {\r\n    axios.get('/voteseries')\r\n    .then(function(response) {\r\n      dispatch({type:\"GET_ALL_USER_SERIES_VOTE\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"GET_ALL_USER_SERIES_VOTE_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n\r\nexport function getUserSeries(id) {\r\n  return function(dispatch) {\r\n    axios.get('/voteseries/' + id)\r\n    .then(function(response) {\r\n      dispatch({type:\"GET_USER_SERIES_VOTE\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"GET_USER_SERIES_VOTE_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Row, Col } from 'react-bootstrap'\r\n\r\n// Components\r\nimport easternLogo from '../images/Eastern_Conference.png'\r\nimport westernLogo from '../images/Western_Conference.png'\r\n\r\nexport default class UserVote extends Component {\r\n  render() {\r\n    const reasultSeries = this.props.series.map((serie, i) => {\r\n      let team1Name = serie.team1.name\r\n      let team1Score = serie.team1.score\r\n      let team2Name = serie.team2.name\r\n      let team2Score = serie.team2.score\r\n\r\n      return (\r\n        serie._id === this.props.seriesId && <p key={i}><span className={team1Score > team2Score ? 'font-bold' : null}>{team1Name}&nbsp;{team1Score}</span> - <span className={team1Score < team2Score ? 'font-bold' : null}>{team2Score}&nbsp;{team2Name}</span></p>\r\n      )\r\n    })\r\n    return (\r\n      <Col xs={12} md={6}>\r\n        <Card>\r\n          <Card.Header>\r\n            <Card.Title>\r\n              {this.props.match < 1 ? <img className='nhl-logo' src={easternLogo} alt='NHL Logo' /> : <img className='nhl-logo' src={westernLogo} alt='NHL Logo' />}\r\n              Finale de Conférence {this.props.match === 0 ? 'Est' : 'Ouest'}\r\n            </Card.Title>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Row className='user-series-vote'>\r\n              <Col xs={4}>\r\n                <img src={this.props.team1.img} alt={this.props.team1.name} />\r\n              </Col>\r\n              <Col xs={7} className={this.props.team1.score === 4 && 'user-series-vote-score font-bold'}>\r\n                <p>{this.props.team1.name} {this.props.team1.score}</p>\r\n              </Col>\r\n            </Row>\r\n            <Row className='user-series-vote'>\r\n              <Col xs={4}>\r\n                <img src={this.props.team2.img} alt={this.props.team2.name} />\r\n              </Col>\r\n              <Col xs={7} className={this.props.team2.score === 4 && 'user-series-vote-score font-bold'}>\r\n                <p>{this.props.team2.name} {this.props.team2.score}</p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className='align-center'>\r\n                {reasultSeries}\r\n              </Col>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n","// Lib\r\nimport React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Actions\r\nimport { getSeries, postSeries } from '../actions/SeriesAction'\r\n\r\n// Components\r\nimport nhlLogo from '../images/nhl.svg'\r\n\r\nclass FormVote extends Component {\r\n  constructor(props, context) {\r\n    super(props, context)\r\n\r\n    this.props.getSeries()\r\n\r\n    this.state = {\r\n      'vote': [],\r\n      'errors': ''\r\n    }\r\n  }\r\n\r\n  processBdd() {\r\n    if (this.props.series.length === this.state.vote.length) {\r\n      this.state.vote.map((votes, i) => {\r\n        this.props.postSeries(votes)\r\n        return votes\r\n      })\r\n\r\n      this.context.router.history.push('/classement')\r\n    } else {\r\n      this.setState({ errors: 'Attention tu as deux équipes égalités' })\r\n    }\r\n  }\r\n\r\n  onFormSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    this.props.series.map((serie, i) => {\r\n      let selectTeams1 = document.getElementById(serie.team1.id)\r\n      let selectTeams2 = document.getElementById(serie.team2.id)\r\n      let valueTeams1 = parseInt(selectTeams1.value)\r\n      let valueTeams2 = parseInt(selectTeams2.value)\r\n\r\n      if (valueTeams1 !== valueTeams2) {\r\n        this.state.vote.push({\r\n          'userID': localStorage.getItem('userID'),\r\n          'seriesId': serie._id,\r\n          'team1': {\r\n            'name': serie.team1.name,\r\n            'img': serie.team1.img,\r\n            'score': valueTeams1\r\n          },\r\n          'team2': {\r\n            'name': serie.team2.name,\r\n            'img': serie.team2.img,\r\n            'score': valueTeams2\r\n          },\r\n          'winner': valueTeams1 > valueTeams2 ? 'team1' : 'team2',\r\n          'diff': valueTeams1 - valueTeams2\r\n        })\r\n        return this.state.vote\r\n      }\r\n\r\n      return false\r\n    })\r\n\r\n    this.processBdd()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col xs={12}>\r\n        <Card>\r\n          <Card.Header>\r\n            <Card.Title>\r\n              <img className='nhl-logo' src={nhlLogo} alt='NHL Logo' />\r\n              C'est le moment de voter pour les finales de conférence\r\n            </Card.Title>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={this.onFormSubmit.bind(this)}>\r\n              <Col xs={12}>\r\n                {\r\n                  this.props.series.map((serie, i) => {\r\n                    return(\r\n                      <Row key={i} className='form-series'>\r\n                        <Col xs={12} className='align-center'><h3>Finale de Conférence {i === 0 ? 'Est' : 'Ouest'}</h3></Col>\r\n                        <Col xs={12} md={4} lg={3} className='form-series-col'>\r\n                          <Col xs={6} md={8} className='align-center'>\r\n                            <img src={serie.team1.img} alt={serie.team1.name} />\r\n                            <p className='series-teams-name'>{serie.team1.name}</p>\r\n                          </Col>\r\n                          <Col xs={6} md={4}>\r\n                            <Form.Group>\r\n                              <Form.Control as=\"select\" id={serie.team1.id}>\r\n                                <option>0</option>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                              </Form.Control>\r\n                            </Form.Group>\r\n                          </Col>\r\n                        </Col>\r\n                        <Col xs={12} md={2} className='align-center'>\r\n                          <p className='series-versus'>VS</p>\r\n                        </Col>\r\n                        <Col xs={12} md={4} lg={3} className='form-series-col'>\r\n                          <Col xs={6} md={4}>\r\n                            <Form.Group>\r\n                              <Form.Control as=\"select\" id={serie.team2.id}>\r\n                                <option>0</option>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                              </Form.Control>\r\n                            </Form.Group>\r\n                          </Col>\r\n                          <Col xs={6} md={8} className='align-center'>\r\n                            <img src={serie.team2.img} alt={serie.team2.name} />\r\n                            <p className='series-teams-name'>{serie.team2.name}</p>\r\n                          </Col>\r\n                        </Col>\r\n                      </Row>\r\n                    )\r\n                  })\r\n                }\r\n              </Col>\r\n              <Col xs={12} className='align-center'>\r\n                <Button type=\"submit\">Submit</Button>\r\n                {this.state.errors !== '' && (<Col xs={12} className=\"invalid-feedback\">{this.state.errors}</Col>)}\r\n              </Col>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nFormVote.contextTypes = {\r\n  router: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    series: state.series.series\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n    getSeries, postSeries\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormVote);\r\n","// Lib\r\nimport React, { Component } from 'react'\r\nimport { Container, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Actions\r\nimport { getUserSeries } from '../actions/SeriesAction'\r\nimport { getSeries } from '../actions/SeriesAction'\r\n\r\n// Components\r\nimport UserVote from '../components/UserVote'\r\nimport FormVote from '../components/FormVote'\r\n\r\nclass Vote extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    let userID = localStorage.getItem(\"userID\");\r\n\r\n    this.state = {\r\n      userID: userID,\r\n      isVoted: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getUserSeries(this.state.userID)\r\n    this.props.userSeries.length === 1 && this.setState({ isVoted: true })\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    nextProps.userSeries.length !== 0 && this.setState({isVoted: true})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container id='vote-form' fluid>\r\n        <Row>\r\n          {this.state.isVoted ? this.props.userSeries.map((vote, i) => <UserVote key={i} {...vote} match={i} series={this.props.series} />) : <FormVote />}\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userSeries: state.series.userSeries,\r\n    series: state.series.series\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n    getUserSeries, getSeries\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Vote);\r\n","import axios from 'axios';\r\n\r\n// POST CLASSEMENT\r\nexport function postClassement(classement) {\r\n  return function(dispatch) {\r\n    axios.post('/classement', classement)\r\n    .then(function(response) {\r\n      dispatch({type:\"POST_CLASSEMENT\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"POST_CLASSEMENT_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n\r\n// GET CLASSEMENT BY USER\r\nexport function getClassement(id) {\r\n  return function(dispatch) {\r\n    axios.get('/classement/' + id)\r\n    .then(function(response) {\r\n      dispatch({type:\"GET_CLASSEMENT\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"GET_CLASSEMENT_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n\r\n// GET ALL CLASSEMENT\r\nexport function getAllClassement() {\r\n  return function(dispatch) {\r\n    axios.get('/classement')\r\n    .then(function(response) {\r\n      dispatch({type:\"GET_ALL_CLASSEMENT\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"GET_ALL_CLASSEMENT_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n\r\n// UPDATE CLASSEMENT BY USER\r\nexport function updateClassement(id, newData) {\r\n  return function(dispatch) {\r\n    axios.put('/classement/' + id, newData)\r\n    .then(function(response) {\r\n      dispatch({type:\"UPDATE_CLASSEMENT\", payload:response.data, userID:id, datas:newData})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"UPDATE_CLASSEMENT_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Col, Table, Button } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { getAllClassement } from '../actions/ClassementAction'\r\nimport { getSeries, getAllUserSeries } from '../actions/SeriesAction'\r\nimport { updateClassement } from '../actions/ClassementAction'\r\n\r\nclass Classement extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.props.getAllClassement()\r\n    this.props.getSeries()\r\n    this.props.getAllUserSeries()\r\n\r\n    this.state = {\r\n      userPseudo: localStorage.getItem(\"userPseudo\"),\r\n      isAdmin: false,\r\n      isLoading: false,\r\n      usersID: [],\r\n      usersPoints: [],\r\n      series: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.state.userPseudo === 'C Fab' && this.setState({ isAdmin: true })\r\n  }\r\n\r\n  getPoints() {\r\n    this.props.allClassement.map((classement, i) => {\r\n      this.state.usersID.push(classement.userID)\r\n      this.state.usersPoints.push(classement.points)\r\n      return [this.state.usersID, this.state.usersPoints]\r\n    })\r\n\r\n    this.props.series.map((serie, i) => this.state.series.push(serie._id))\r\n\r\n    this.props.allUserSeries.map((vote, i) => {\r\n      let userIndex = this.state.usersID.indexOf(vote.userID)\r\n      let userPoints = this.state.usersPoints[userIndex]\r\n      let seriesIndex = this.state.series.indexOf(vote.seriesId)\r\n\r\n      if(this.props.series[seriesIndex].winner === vote.winner && this.props.series[seriesIndex].diff === vote.diff) {\r\n        const newArray = this.state.usersPoints\r\n        const newItem = userPoints + 3\r\n        newArray[userIndex] = newItem\r\n\r\n        this.setState({\r\n          usersPoints: newArray\r\n        })\r\n      } else if(this.props.series[seriesIndex].winner === vote.winner) {\r\n        const newArray = this.state.usersPoints\r\n        const newItem = userPoints + 1\r\n        newArray[userIndex] = newItem\r\n\r\n        this.setState({\r\n          usersPoints: newArray\r\n        })\r\n      }\r\n\r\n      this.props.updateClassement(vote.userID, {provisoire:userPoints})\r\n      return userPoints\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col xs={12} md={{ span: 5, offset: 3 }} className='align-center'>\r\n        <Table striped bordered hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th className='align-center'>Classement</th>\r\n              <th className='align-center'>Pseudo</th>\r\n              <th className='align-center'>Points</th>\r\n              <th className='align-center'>Points provisoire</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.allClassement.map((stand, i) => <tr key={i}><td>{i + 1}</td><td>{stand.userPseudo}</td><td>{stand.points}</td><td>{stand.provisoire}</td></tr>)}\r\n          </tbody>\r\n        </Table>\r\n        {this.state.isAdmin && <Col xs={12} className=\"align-center\"><Button onClick={this.getPoints.bind(this)}>Calculer les points</Button></Col>}\r\n        {this.state.isLoading && <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>}\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    allClassement: state.classement.allClassement,\r\n    series: state.series.series,\r\n    allUserSeries: state.series.allUserSeries\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n    getAllClassement,\r\n    getSeries, getAllUserSeries,\r\n    updateClassement\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Classement);\r\n","// Lib\r\nimport React, { Component } from 'react'\r\nimport { Row, Col, Card } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { getAllUserSeries } from '../actions/SeriesAction'\r\n\r\nclass DisplayVote extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.props.getAllUserSeries()\r\n  }\r\n\r\n  render() {\r\n    const usersVote = (this.props.allVote.map((votes, i) => {\r\n      if (votes.userID === this.props.userID) {\r\n        return (\r\n          <Col xs={12} md={6} key={i} className='align-center'>\r\n            <p>\r\n              <img src={votes.team1.img} alt={votes.team1.name} width='25%' /> &nbsp;&nbsp;\r\n              <span className={votes.team1.score === 4 ? 'font-bold' : ''}>{votes.team1.score}</span>\r\n              &nbsp;&nbsp; Vs &nbsp;&nbsp;\r\n              <span className={votes.team2.score === 4 ? 'font-bold' : ''}>{votes.team2.score}</span>\r\n              &nbsp;&nbsp;\r\n              <img src={votes.team2.img} alt={votes.team2.name} width='25%' />\r\n            </p>\r\n          </Col>\r\n        )\r\n      }\r\n      return true\r\n    }))\r\n    return (\r\n      <Card>\r\n        <Card.Header>\r\n          <Card.Title>Vote de {this.props.userPseudo}</Card.Title>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            {usersVote}\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    allVote: state.series.allUserSeries\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n    getAllUserSeries\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayVote);\r\n","// Lib\r\nimport React, { Component } from 'react'\r\nimport { Container, Col } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Actions\r\nimport { getUserSeries, getAllUserSeries } from '../actions/SeriesAction'\r\nimport { getAllClassement } from '../actions/ClassementAction'\r\n\r\n//Components\r\nimport DisplayVote from './DisplayVote'\r\n\r\nclass AllVote extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.props.getUserSeries(localStorage.getItem(\"userID\"))\r\n    this.props.getAllUserSeries()\r\n    this.props.getAllClassement()\r\n\r\n    this.state = {\r\n      isVoted: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.userVote.length > 0 && this.setState({ isVoted: true })\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (prevState.allVote.length !== this.props.allVote.length) {\r\n      this.setState({ isVoted: true })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container id='all-votes' fluid>\r\n        <Col xs={12}>\r\n          {this.state.isVoted ? this.props.classement.map((users, i) => <DisplayVote key={i} {...users}/>) : <p>Il faut que tu vote d'abord !</p>}\r\n        </Col>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userVote: state.series.userSeries,\r\n    classement: state.classement.allClassement,\r\n    allVote: state.series.allUserSeries\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n    getUserSeries, getAllUserSeries,\r\n    getAllClassement\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllVote);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { Col, Card, Button, FormGroup, InputGroup, FormControl } from 'react-bootstrap'\r\nimport { findDOMNode } from 'react-dom'\r\n\r\nimport { updateUser, logoutUser } from '../actions/Authentication'\r\n\r\nclass ChangeUser extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let userID = this.props.id\r\n\r\n    this.state = {\r\n      userID: userID,\r\n      modifyUser: false\r\n    }\r\n  }\r\n\r\n  modifyUser() {\r\n    this.setState({modifyUser: !this.state.modifyUser})\r\n  }\r\n\r\n  changeUser() {\r\n    let newUserInfos = {\r\n      nom: findDOMNode(this.refs.newNom).value,\r\n      prenom: findDOMNode(this.refs.newPrenom).value,\r\n      pseudo: findDOMNode(this.refs.newPseudo).value,\r\n      email: findDOMNode(this.refs.newEmail).value\r\n    }\r\n    this.props.updateUser(this.state.userID, newUserInfos)\r\n    this.props.logoutUser()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col xs={12} md={{ span: 4, offset: 4 }}>\r\n        <Card>\r\n          <Card.Header>\r\n            <Card.Title>Modifie tes informations de compte</Card.Title>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            {this.state.modifyUser ?\r\n              <ul>\r\n                <li>\r\n                  <FormGroup controlId=\"newNom\">\r\n                    <InputGroup>Change ton Nom :</InputGroup>\r\n                    <FormControl\r\n                      type='text'\r\n                      defaultValue={this.props.nom}\r\n                      ref='newNom' />\r\n                  </FormGroup>\r\n                </li>\r\n                <li>\r\n                  <FormGroup controlId=\"newPrenom\">\r\n                    <InputGroup>Change ton Prénom :</InputGroup>\r\n                    <FormControl\r\n                      type='text'\r\n                      defaultValue={this.props.prenom}\r\n                      ref='newPrenom' />\r\n                  </FormGroup>\r\n                </li>\r\n                <li>\r\n                  <FormGroup controlId=\"newPseudo\">\r\n                    <InputGroup>Change ton pseudo :</InputGroup>\r\n                    <FormControl\r\n                      type='text'\r\n                      defaultValue={this.props.pseudo}\r\n                      ref='newPseudo' />\r\n                  </FormGroup>\r\n                </li>\r\n                <li>\r\n                  <FormGroup controlId=\"newEmail\">\r\n                    <InputGroup>Change ton email :</InputGroup>\r\n                    <FormControl\r\n                      type='text'\r\n                      defaultValue={this.props.email}\r\n                      ref='newEmail' />\r\n                  </FormGroup>\r\n                </li>\r\n                <li>\r\n                  <Button onClick={this.changeUser.bind(this)}>Sauvegarder</Button>\r\n                  <Button onClick={this.modifyUser.bind(this)}>Annuler</Button>\r\n                </li>\r\n                <li><p>Attention tu seras déconnecté automatiquement afin de faire la mise à jour. Il faudra te connecter à nouveau.</p></li>\r\n              </ul> :\r\n              <ul>\r\n                <li>Nom : {this.props.nom}</li>\r\n                <li>Prénom : {this.props.prenom}</li>\r\n                <li>Pseudo : {this.props.pseudo}</li>\r\n                <li>Email : {this.props.email}</li>\r\n                <li><Button onClick={this.modifyUser.bind(this)}>Modifier</Button></li>\r\n              </ul>\r\n            }\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({\r\n    updateUser, logoutUser\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ChangeUser);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { Container, Col } from 'react-bootstrap'\r\n\r\nimport { getUser } from '../actions/Authentication'\r\n\r\nimport ChangeUser from '../components/ChangeUser'\r\n\r\nexport class MonCompte extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    let userPseudo = localStorage.getItem(\"userPseudo\")\r\n    let userID = localStorage.getItem(\"userID\")\r\n\r\n    this.state = {\r\n      userPseudo: userPseudo,\r\n      userID: userID,\r\n      modifyName: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getUser({ id: this.state.userID })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container id=\"mon-compte\" className=\"vertical-middle\" fluid>\r\n        <Col xs={12}>\r\n          <h1 className=\"align-center\">Voici ton compte {this.state.userPseudo}</h1>\r\n          {this.props.userData.map((user, i) => <ChangeUser key={i} {...user} />)}\r\n        </Col>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    userData: state.auth.user\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({\r\n    getUser\r\n  }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MonCompte)\r\n","import axios from 'axios';\r\n\r\n// GET ARME\r\nexport function getTeams() {\r\n  return function(dispatch) {\r\n    axios.get('/teams')\r\n    .then(function(response) {\r\n      dispatch({type:\"GET_TEAMS\", payload:response.data})\r\n    })\r\n    .catch(function(err) {\r\n      dispatch({type:\"GET_TEAMS_REJECTED\", payload:err})\r\n    })\r\n  }\r\n}\r\n","// Lib\r\nimport React, { Component } from 'react'\r\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Actions\r\nimport { getTeams } from '../actions/TeamsAction'\r\nimport { postNhlSeries } from '../actions/SeriesAction'\r\n\r\nclass FormSeries extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.props.getTeams()\r\n  }\r\n\r\n  processBdd(team1, team2) {\r\n    let insertBdd = {\r\n      'team1': team1,\r\n      'team2': team2,\r\n      'winner': '',\r\n      'diff': 0\r\n    }\r\n\r\n    this.props.postNhlSeries(insertBdd)\r\n  }\r\n\r\n  onFormSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    let getTeam1 = document.getElementById('team1').value\r\n    let getTeam2 = document.getElementById('team2').value\r\n    let team1 = {}\r\n    let team2 = {}\r\n\r\n    this.props.teams.map((team, i) => {\r\n      if(getTeam1 === team.name) {\r\n        team1 = {\r\n          'id': team._id,\r\n          'name': team.name,\r\n          'img': team.img,\r\n          'score': 0\r\n        }\r\n      }\r\n      if(getTeam2 === team.name) {\r\n        team2 = {\r\n          'id': team._id,\r\n          'name': team.name,\r\n          'img': team.img,\r\n          'score': 0\r\n        }\r\n      }\r\n      return [team1, team2]\r\n    })\r\n\r\n    this.processBdd(team1, team2)\r\n  }\r\n\r\n  render() {\r\n    const optionTeams = this.props.teams.map((team, i) => <option key={i}>{team.name}</option>)\r\n    return (\r\n      <Col xs={12} md={{ span:6 , offset:3 }}>\r\n        <Card>\r\n          <Card.Header>\r\n            <Card.Title>\r\n              Mise en place des series\r\n            </Card.Title>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={this.onFormSubmit.bind(this)}>\r\n              <Col xs={12} className='align-center'><h3>Match</h3></Col>\r\n              <Row className='form-series'>\r\n                <Col xs={5}>\r\n                  <Form.Group>\r\n                    <Form.Control as=\"select\" id='team1'>\r\n                      {optionTeams}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={2} className='align-center'>\r\n                  <p className='series-versus'>VS</p>\r\n                </Col>\r\n                <Col xs={5}>\r\n                  <Form.Group>\r\n                    <Form.Control as=\"select\" id='team2'>\r\n                      {optionTeams}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Col xs={12} className='align-center'>\r\n                <Button type=\"submit\">Submit</Button>\r\n              </Col>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    teams: state.teams.teams\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n    getTeams,\r\n    postNhlSeries\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormSeries);\r\n","// Lib\r\nimport React, { Component } from 'react'\r\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Actions\r\nimport { getSeries, updateSeries } from '../actions/SeriesAction'\r\n\r\nclass UpdateSeries extends Component {\r\n  constructor(props, context) {\r\n    super(props, context)\r\n\r\n    this.props.getSeries()\r\n\r\n    this.state = {\r\n      'update': []\r\n    }\r\n  }\r\n\r\n  updateBdd() {\r\n    this.state.update.map((votes, i) => this.props.updateSeries(votes._id, votes))\r\n  }\r\n\r\n  onFormSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    this.props.series.map((serie, i) => {\r\n      let selectTeams1 = document.getElementById(serie.team1.id)\r\n      let selectTeams2 = document.getElementById(serie.team2.id)\r\n      let valueTeams1 = parseInt(selectTeams1.value)\r\n      let valueTeams2 = parseInt(selectTeams2.value)\r\n\r\n      this.state.update.push({\r\n        '_id': serie._id,\r\n        'team1': {\r\n          'name': serie.team1.name,\r\n          'img': serie.team1.img,\r\n          'score': valueTeams1,\r\n          'id': serie.team1.id\r\n        },\r\n        'team2': {\r\n          'name': serie.team2.name,\r\n          'img': serie.team2.img,\r\n          'score': valueTeams2,\r\n          'id': serie.team2.id\r\n        },\r\n        'winner': valueTeams1 > valueTeams2 ? 'team1' : (valueTeams1 === valueTeams2 ? '' :'team2'),\r\n        'diff': valueTeams1 - valueTeams2\r\n      })\r\n      return this.state.update\r\n    })\r\n\r\n    this.updateBdd()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col xs={12}>\r\n        <Card>\r\n          <Card.Header>\r\n            <Card.Title>\r\n              Mise à jour des Series\r\n            </Card.Title>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={this.onFormSubmit.bind(this)}>\r\n              <Col xs={12}>\r\n                {\r\n                  this.props.series.map((serie, i) => {\r\n                    return(\r\n                      <Row key={i} className='form-series'>\r\n                        <Col xs={12} className='align-center'><h3>Match {i + 1}</h3></Col>\r\n                        <Col xs={12} md={4} lg={3} className='form-series-col'>\r\n                          <Col xs={6} md={8} className='align-center'>\r\n                            <img src={serie.team1.img} alt={serie.team1.name} />\r\n                            <p className='series-teams-name'>{serie.team1.name}</p>\r\n                          </Col>\r\n                          <Col xs={6} md={4}>\r\n                            <Form.Group>\r\n                              <Form.Control as=\"input\" id={serie.team1.id} defaultValue={serie.team1.score} />\r\n                            </Form.Group>\r\n                          </Col>\r\n                        </Col>\r\n                        <Col xs={12} md={2} className='align-center'>\r\n                          <p className='series-versus'>VS</p>\r\n                        </Col>\r\n                        <Col xs={12} md={4} lg={3} className='form-series-col'>\r\n                          <Col xs={6} md={4}>\r\n                            <Form.Group>\r\n                              <Form.Control as='input' id={serie.team2.id} defaultValue={serie.team2.score} />\r\n                            </Form.Group>\r\n                          </Col>\r\n                          <Col xs={6} md={8} className='align-center'>\r\n                            <img src={serie.team2.img} alt={serie.team2.name} />\r\n                            <p className='series-teams-name'>{serie.team2.name}</p>\r\n                          </Col>\r\n                        </Col>\r\n                      </Row>\r\n                    )\r\n                  })\r\n                }\r\n              </Col>\r\n              <Col xs={12} className='align-center'>\r\n                <Button type=\"submit\">Submit</Button>\r\n              </Col>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    series: state.series.series\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n    getSeries, updateSeries\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateSeries);\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport Signin from \"./components/Signin\"\r\nimport Vote from \"./components/Vote\"\r\nimport Classement from \"./components/Classement\"\r\nimport AllVote from \"./components/AllVote\"\r\nimport MonCompte from \"./components/MonCompte\"\r\nimport FormSeries from \"./components/FormSeries\"\r\nimport UpdateSeries from \"./components/UpdateSeries\"\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Switch>\r\n      <Route exact path='/' component={Signin}/>\r\n      <Route path='/vote' component={Vote}/>\r\n      <Route path='/classement' component={Classement}/>\r\n      <Route path='/quiavotequoi' component={AllVote}/>\r\n      <Route path='/monCompte' component={MonCompte}/>\r\n      <Route path='/series' component={FormSeries}/>\r\n      <Route path='/updateseries' component={UpdateSeries}/>\r\n    </Switch>\r\n  </main>\r\n)\r\n\r\nexport default Main\r\n","import React, { Component } from 'react'\r\nimport FullNavbars from './FullNavbars'\r\nimport Content from './Content'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <section>\r\n        <FullNavbars />\r\n        <Content />\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const initialeState = {\r\n  teams: [],\r\n  error: null\r\n}\r\n\r\nexport const TeamsReducer = (state=initialeState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_TEAMS':\r\n      return {...state, teams:[...action.payload]};\r\n    case \"GET_TEAMS_REJECTED\":\r\n      return action.payload\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","const initialeState = {\r\n  series: [],\r\n  nhlSeries: [],\r\n  voteSeries: [],\r\n  userSeries: [],\r\n  allUserSeries: [],\r\n  error: null\r\n}\r\n\r\nexport const SeriesReducer = (state=initialeState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_SERIES':\r\n      return {...state, series:[...action.payload]};\r\n    case \"GET_SERIES_REJECTED\":\r\n      return action.payload\r\n\r\n    case 'POST_NHL_SERIES':\r\n      return {...state, nhlSeries:[...action.payload]}\r\n    case \"POST_NHL_SERIES_REJECTED\":\r\n      return action.payload\r\n\r\n    case \"UPDATE_SERIES\":\r\n      const newArray = [...state.series]\r\n      const newItem = action.datas\r\n      newArray[newArray.findIndex(item => item._id === action.id)] = newItem\r\n      return {\r\n        ...state,\r\n        series:newArray\r\n      };\r\n    case \"UPDATE_SERIES_REJECTED\":\r\n      return action.payload\r\n\r\n    case 'POST_SERIES':\r\n      return {...state, voteSeries:[...action.payload]}\r\n    case \"POST_SERIES_REJECTED\":\r\n      return action.payload\r\n\r\n    case 'GET_USER_SERIES_VOTE':\r\n      return {...state, userSeries:[...action.payload]}\r\n    case \"GET_USER_SERIES_VOTE_REJECTED\":\r\n      return action.payload\r\n\r\n    case 'GET_ALL_USER_SERIES_VOTE':\r\n      return {...state, allUserSeries:[...action.payload]}\r\n    case \"GET_ALL_USER_SERIES_VOTE_REJECTED\":\r\n      return action.payload\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","const initialeState = {\r\n  vote: [],\r\n  userVote: [],\r\n  allVote: []\r\n}\r\n\r\nexport const VoteReducer = (state=initialeState, action) => {\r\n  switch (action.type) {\r\n    case 'POST_VOTE':\r\n      return {...state, vote:[...state.vote, action.payload]}\r\n    case \"POST_VOTE_REJECTED\":\r\n      return action.payload\r\n    case 'GET_VOTE':\r\n      return {...state, userVote:[...action.payload]};\r\n    case \"GET_VOTE_REJECTED\":\r\n      return action.payload\r\n    case 'GET_ALL_VOTE':\r\n      return {...state, allVote:[...action.payload]};\r\n    case \"GET_ALL_VOTE_REJECTED\":\r\n      return action.payload\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","const initialeState = {\r\n  classement: [],\r\n  userClassement: [],\r\n  allClassement: []\r\n}\r\n\r\nexport const ClassementReducer = (state=initialeState, action) => {\r\n  switch (action.type) {\r\n    case 'POST_CLASSEMENT':\r\n      return {...state, classement:[...state.classement, action.payload]}\r\n    case \"POST_CLASSEMENT_REJECTED\":\r\n      return action.payload\r\n\r\n    case 'GET_CLASSEMENT':\r\n      return {...state, userClassement:[...action.payload]};\r\n    case \"GET_CLASSEMENT_REJECTED\":\r\n      return action.payload\r\n\r\n    case 'GET_ALL_CLASSEMENT':\r\n      return {...state, allClassement:[...action.payload]};\r\n    case \"GET_ALL_CLASSEMENT_REJECTED\":\r\n      return action.payload\r\n\r\n    case \"UPDATE_CLASSEMENT\":\r\n      const newArray = [...state.allClassement]\r\n      const newItem = action.datas\r\n      newArray[newArray.findIndex(item => item._id === action.id)] = newItem\r\n      return {\r\n        ...state,\r\n        allClassement:newArray\r\n      };\r\n    case \"UPDATE_CLASSEMENT_REJECTED\":\r\n      return action.payload\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","export const isEmpty = (value) => {\r\n  return (\r\n    value === undefined ||\r\n    value === null ||\r\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n    (typeof value === 'string' && value.trim().length === 0)\r\n  );\r\n}\r\n","import { SET_CURRENT_USER } from '../actions/Types';\r\nimport { isEmpty } from '../hocs/is-empty';\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: []\r\n}\r\n\r\nexport function authReducer(state = initialState, action ) {\r\n  switch(action.type) {\r\n    case SET_CURRENT_USER:\r\n    return {\r\n      ...state,\r\n      isAuthenticated: !isEmpty(action.payload),\r\n      user: [action.payload]\r\n    }\r\n    default:\r\n    return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from '../actions/Types';\r\n\r\nconst initialState = {};\r\n\r\nexport function errorReducer(state = initialState, action ) {\r\n  switch(action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { TeamsReducer } from './TeamsReducer'\r\nimport { SeriesReducer } from './SeriesReducer'\r\nimport { VoteReducer } from './VoteReducer'\r\nimport { ClassementReducer } from './ClassementReducer'\r\nimport { authReducer } from './AuthReducer'\r\nimport { errorReducer } from './ErrorReducer'\r\n\r\nexport default combineReducers({\r\n  teams: TeamsReducer,\r\n  series: SeriesReducer,\r\n  vote: VoteReducer,\r\n  classement: ClassementReducer,\r\n  errors: errorReducer,\r\n  auth: authReducer\r\n})\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n  .register(swUrl)\r\n  .then(registration => {\r\n    registration.onupdatefound = () => {\r\n      const installingWorker = registration.installing;\r\n      if (installingWorker == null) {\r\n        return;\r\n      }\r\n      installingWorker.onstatechange = () => {\r\n        if (installingWorker.state === 'installed') {\r\n          if (navigator.serviceWorker.controller) {\r\n            // At this point, the updated precached content has been fetched,\r\n            // but the previous service worker will still serve the older\r\n            // content until all client tabs are closed.\r\n            console.log(\r\n              'New content is available and will be used when all ' +\r\n              'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n            );\r\n\r\n            // Execute callback\r\n            if (config && config.onUpdate) {\r\n              config.onUpdate(registration);\r\n            }\r\n          } else {\r\n            // At this point, everything has been precached.\r\n            // It's the perfect time to display a\r\n            // \"Content is cached for offline use.\" message.\r\n            console.log('Content is cached for offline use.');\r\n\r\n            // Execute callback\r\n            if (config && config.onSuccess) {\r\n              config.onSuccess(registration);\r\n            }\r\n          }\r\n        }\r\n      };\r\n    };\r\n  })\r\n  .catch(error => {\r\n    console.error('Error during service worker registration:', error);\r\n  });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n  .then(response => {\r\n    // Ensure service worker exists, and that we really are getting a JS file.\r\n    const contentType = response.headers.get('content-type');\r\n    if (\r\n      response.status === 404 ||\r\n      (contentType != null && contentType.indexOf('javascript') === -1)\r\n    ) {\r\n      // No service worker found. Probably a different app. Reload the page.\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister().then(() => {\r\n          window.location.reload();\r\n        });\r\n      });\r\n    } else {\r\n      // Service worker found. Proceed as normal.\r\n      registerValidSW(swUrl, config);\r\n    }\r\n  })\r\n  .catch(() => {\r\n    console.log(\r\n      'No internet connection found. App is running in offline mode.'\r\n    );\r\n  });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// Library import\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\n\r\n// CSS import\r\nimport './style/index.css'\r\nimport './style/materia.min.css'\r\n\r\n// Component import\r\nimport App from './App'\r\n\r\n// Reducers Import\r\nimport reducers from './reducers/reducers'\r\n\r\n// Services import\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n// Middlewares import\r\nimport { applyMiddleware, createStore } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport promise from 'redux-promise-middleware'\r\n\r\nconst store = createStore(reducers, applyMiddleware(promise(), thunk))\r\n\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App/>\r\n    </BrowserRouter>\r\n  </Provider>\r\n), document.getElementById('root'))\r\n\r\nexport default store;\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Eastern_Conference.fdd85eae.png\";","module.exports = __webpack_public_path__ + \"static/media/Western_Conference.223abb5a.png\";","module.exports = __webpack_public_path__ + \"static/media/nhl.266661c7.svg\";"],"sourceRoot":""}