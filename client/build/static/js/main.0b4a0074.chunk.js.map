{"version":3,"sources":["actions/Types.js","SetAuthToken.js","actions/Authentication.js","FullNavbars.js","components/Signup.js","components/Signin.js","actions/SeriesAction.js","components/UserVote.js","components/FormVote.js","components/Vote.js","actions/ClassementAction.js","components/Classement.js","actions/VoteAction.js","actions/TeamsAction.js","components/DisplayVote.js","components/AllVote.js","components/ChangeUser.js","components/MonCompte.js","components/FormSeries.js","Content.js","App.js","reducers/TeamsReducer.js","reducers/SeriesReducer.js","reducers/VoteReducer.js","reducers/ClassementReducer.js","hocs/is-empty.js","reducers/AuthReducer.js","reducers/ErrorReducer.js","reducers/reducers.js","serviceWorker.js","index.js","images/Eastern_Conference.png","images/Western_Conference.png","images/nhl.svg"],"names":["GET_ERRORS","SET_CURRENT_USER","setAuthToken","token","axios","defaults","headers","common","updateUser","userID","newDatas","dispatch","put","catch","err","type","payload","loginUser","user","history","post","then","res","data","localStorage","setItem","decoded","jwt_decode","setCurrentUser","id","pseudo","push","getUser","getItem","logoutUser","removeItem","window","location","assign","FullNavbars","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isAuthenticated","nextProps","auth","setState","authNav","react_default","a","createElement","Navbar","Collapse","Nav","className","lib","to","Link","eventKey","onClick","onLogout","bind","bg","expand","Brand","Toggle","aria-controls","Component","connect","Signup","nom","prenom","email","password","password_confirm","errors","handleInputChange","assertThisInitialized","handleSubmit","e","defineProperty","target","name","value","registerUser","Container","fluid","Row","Col","xs","md","span","offset","Card","Header","Body","Form","Group","controlId","Control","classnames","is-invalid","placeholder","onChange","Button","response","Signin","FormGroup","FormControl","bindActionCreators","getSeries","get","postNhlSeries","series","postSeries","vote","getAllUserSeries","getUserSeries","UserVote","lg","Title","match","src","easternLogo","alt","westernLogo","team1","img","score","team2","FormVote","context","_this2","length","map","votes","i","router","_this3","preventDefault","serie","selectTeams1","document","getElementById","selectTeams2","valueTeams1","parseInt","valueTeams2","seriesId","_id","winner","diff","processBdd","nhlLogo","onSubmit","onFormSubmit","key","as","contextTypes","PropTypes","object","Vote","isVoted","userSeries","UserVote_UserVote","components_FormVote","getAllClassement","updateClassement","newData","datas","Classement","userPseudo","isAdmin","usersID","usersPoints","allClassement","classement","points","allUserSeries","userIndex","indexOf","userPoints","seriesIndex","newArray","newItem","console","log","Table","striped","bordered","hover","responsive","stand","getPoints","getVote","getAllVote","getTeams","DisplayVote","teamsSelected","allTeams","team","teams","userVote","prevState","allVote","components_DisplayVote","ChangeUser","modifyUser","newUserInfos","findDOMNode","refs","newNom","newPrenom","newPseudo","newEmail","InputGroup","defaultValue","ref","changeUser","MonCompte","_Component","modifyName","inherits","createClass","userData","components_ChangeUser","FormSeries","insertBdd","getTeam1","getTeam2","optionTeams","Main","Switch","Route","exact","path","component","AllVote","App","src_FullNavbars","Content","initialeState","error","nhlSeries","voteSeries","userClassement","isEmpty","undefined","keys","trim","initialState","combineReducers","arguments","action","objectSpread","toConsumableArray","concat","findIndex","item","Boolean","hostname","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","promise","thunk","createLogger","ReactDOM","render","es","BrowserRouter","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0b4a0074.chunk.js","sourcesContent":["export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if(token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  }\n  else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from './Types';\nimport setAuthToken from '../SetAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nexport const registerUser = (user, history) => dispatch => {\n  axios.post('/user', user)\n  .then(res => history.push('/signin'))\n  .catch(err => {\n    dispatch({type: GET_ERRORS, payload: err.response.data});\n  });\n}\n\nexport const updateUser = (userID, newDatas) => dispatch => {\n  axios.put('/user/' + userID, newDatas)\n  .catch(err => {\n    dispatch({type: GET_ERRORS, payload: err});\n  });\n}\n\nexport const loginUser = (user, history) => dispatch => {\n  axios.post('/login', user)\n  .then(res => {\n    const { token } = res.data;\n    localStorage.setItem('jwtToken', token);\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n    localStorage.setItem('userID', decoded.id);\n    localStorage.setItem('userPseudo', decoded.pseudo);\n    history.push('/vote')\n  })\n  .catch(err => {\n    dispatch({type: GET_ERRORS, payload: err});\n  });\n}\n\nexport const getUser = (userID) => dispatch => {\n  axios.post('/login', userID)\n  .then(res => {\n    let token = localStorage.getItem('jwtToken');\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n  })\n  .catch(err => {\n    dispatch({type: GET_ERRORS, payload: err});\n  });\n}\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  }\n}\n\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  localStorage.removeItem('userID');\n  localStorage.removeItem('userPseudo');\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n  window.location.assign(\"/\");\n}\n","import React, { Component }  from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { logoutUser } from './actions/Authentication'\n\nclass FullNavbars extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isAuthenticated: localStorage.getItem('jwtToken') !== null ? true : false\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.auth.isAuthenticated === true) this.setState({isAuthenticated: true})\n  }\n\n  onLogout() {\n    this.props.logoutUser()\n  }\n\n  render() {\n    const authNav = (\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <LinkContainer to={\"/vote\"}>\n            <Nav.Link eventKey={0}>Vote !</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to={\"/classement\"}>\n            <Nav.Link eventKey={1}>Classement</Nav.Link>\n          </LinkContainer>\n        </Nav>\n        <Nav>\n          <LinkContainer to={\"/monCompte\"}>\n            <Nav.Link eventKey={3}>Mon Compte</Nav.Link>\n          </LinkContainer>\n          <Nav.Link eventKey={4} onClick={this.onLogout.bind(this)}>Me déconnecter</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    )\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand className=\"navbar-brand\">NHL vote app</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        {this.state.isAuthenticated ? authNav : null}\n      </Navbar>\n    )\n  }\n}\n\nFullNavbars.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, { logoutUser })(FullNavbars);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { Container, Row, Col, Form, Button, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport { registerUser } from \"../actions/Authentication\";\n\nclass Signup extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      nom: '',\n      prenom: '',\n      pseudo: '',\n      email: '',\n      password: '',\n      password_confirm: '',\n      errors: {}\n    }\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit() {\n    const user = {\n      nom: this.state.nom,\n      prenom: this.state.prenom,\n      pseudo: this.state.pseudo,\n      email: this.state.email,\n      password: this.state.password,\n      password_confirm: this.state.password_confirm\n    }\n    this.props.registerUser(user, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <Container id=\"logup\" className=\"vertical-middle\" fluid>\n        <Row>\n          <Col xs={12} md={{ span: 4, offset: 4 }}>\n            <Card id=\"logup-panel-group\">\n              <Card.Header><h3>Créer ton compte</h3></Card.Header>\n              <Card.Body>\n                <Form.Group controlId=\"nom\">\n                  <Form.Control\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.nom\n                    })}\n                    placeholder=\"Entre ton nom\"\n                    name=\"nom\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.nom } />\n                  {errors.nom && (<div className=\"invalid-feedback\">{errors.nom}</div>)}\n                </Form.Group>\n                <Form.Group controlId=\"prenom\">\n                  <Form.Control\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.prenom\n                    })}\n                    placeholder=\"Entre ton prénom\"\n                    name=\"prenom\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.prenom } />\n                  {errors.prenom && (<div className=\"invalid-feedback\">{errors.prenom}</div>)}\n                </Form.Group>\n                <Form.Group controlId=\"pseudo\">\n                  <Form.Control\n                    type='text'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.pseudo\n                    })}\n                    placeholder=\"Entre ton pseudo\"\n                    name=\"pseudo\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.pseudo } />\n                  {errors.pseudo && (<div className=\"invalid-feedback\">{errors.pseudo}</div>)}\n                </Form.Group>\n                <Form.Group controlId=\"email\">\n                  <Form.Control\n                    type='email'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.email\n                    })}\n                    placeholder=\"Entre ton email\"\n                    name=\"email\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.email } />\n                  {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n                </Form.Group>\n                <Form.Group controlId=\"password\">\n                  <Form.Control\n                    type='password'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.password\n                    })}\n                    placeholder=\"Entre ton mot de passe\"\n                    name=\"password\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password } />\n                  {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n                </Form.Group>\n                <Form.Group controlId=\"password_confirm\">\n                  <Form.Control\n                    type='password'\n                    className={classnames('form-control form-control-lg', {\n                      'is-invalid': errors.password_confirm\n                    })}\n                    placeholder=\"Confirme ton mot de passe\"\n                    name=\"password_confirm\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password_confirm } />\n                  {errors.password_confirm && (<div className=\"invalid-feedback\">{errors.password_confirm}</div>)}\n                </Form.Group>\n                <Button onClick={this.handleSubmit}>Enregistrer</Button>\n                <Col xs={12} className='signup-to-signin'>\n                  <Link to='/signin'>Sinon pour te connecter c'est par ici</Link>\n                </Col>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nSignup.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(Signup);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Col, FormGroup, FormControl, Button, Card } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from 'redux';\nimport classnames from 'classnames';\n\nimport { loginUser } from '../actions/Authentication';\n\nclass Signin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit() {\n    const user = {\n      email: this.state.email,\n      password: this.state.password,\n    }\n    this.props.loginUser(user, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors.response.data\n      });\n    }\n  }\n\n  render() {\n    const {errors} = this.state;\n    return (\n      <Container id=\"login\" className=\"vertical-middle\" fluid>\n        <Col xs={12}  md={{ span: 4, offset: 4 }}>\n          <Card id=\"signinPanel\">\n            <Card.Header><h3>Connecte toi</h3></Card.Header>\n            <Card.Body>\n              <FormGroup controlId=\"email\">\n                <FormControl\n                  type='email'\n                  placeholder=\"Entre ton email\"\n                  className={classnames('form-control form-control-lg', {\n                    'is-invalid': errors.email\n                  })}\n                  name=\"email\"\n                  onChange={ this.handleInputChange }\n                  value={ this.state.email } />\n                {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n              </FormGroup>\n              <FormGroup controlId=\"password\">\n                <FormControl\n                  type='password'\n                  placeholder=\"Entre ton mot de passe\"\n                  className={classnames('form-control form-control-lg', {\n                    'is-invalid': errors.password\n                  })}\n                  name=\"password\"\n                  onChange={ this.handleInputChange }\n                  value={ this.state.password } />\n                {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n              </FormGroup>\n              <Button onClick={this.handleSubmit}>Envoyer</Button>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Container>\n    )\n  }\n}\n\nSignin.propTypes = {\n  errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors\n})\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators ({\n    loginUser\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)\n","import axios from 'axios';\n\nexport function getSeries() {\n  return function(dispatch) {\n    axios.get('/series')\n    .then(function(response) {\n      dispatch({type:\"GET_SERIES\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_SERIES_REJECTED\", payload:err})\n    })\n  }\n}\n\nexport function postNhlSeries(series) {\n  return function(dispatch) {\n    axios.post('/series', series)\n    .then(function(response) {\n      dispatch({type:\"POST_NHL_SERIES\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"POST_NHL_SERIES_REJECTED\", payload:err})\n    })\n  }\n}\n\nexport function postSeries(vote) {\n  return function(dispatch) {\n    axios.post('/voteseries', vote)\n    .then(function(response) {\n      dispatch({type:\"POST_SERIES\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"POST_SERIES_REJECTED\", payload:err})\n    })\n  }\n}\n\nexport function getAllUserSeries() {\n  return function(dispatch) {\n    axios.get('/voteseries')\n    .then(function(response) {\n      dispatch({type:\"GET_ALL_USER_SERIES_VOTE\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_ALL_USER_SERIES_VOTE_REJECTED\", payload:err})\n    })\n  }\n}\n\nexport function getUserSeries(id) {\n  return function(dispatch) {\n    axios.get('/voteseries/' + id)\n    .then(function(response) {\n      dispatch({type:\"GET_USER_SERIES_VOTE\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_USER_SERIES_VOTE_REJECTED\", payload:err})\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport { Card, Row, Col } from 'react-bootstrap'\n\n// Components\nimport easternLogo from '../images/Eastern_Conference.png'\nimport westernLogo from '../images/Western_Conference.png'\n\nexport default class UserVote extends Component {\n  render() {\n    return (\n      <Col xs={12} md={6} lg={3}>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              {this.props.match < 4 ? <img className='nhl-logo' src={easternLogo} alt='NHL Logo' /> : <img className='nhl-logo' src={westernLogo} alt='NHL Logo' />}\n              Match {this.props.match + 1}\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <Row className='user-series-vote'>\n              <Col xs={4}>\n                <img src={this.props.team1.img} alt={this.props.team1.name} />\n              </Col>\n              <Col xs={7} className={this.props.team1.score === 4 && 'user-series-vote-score font-bold'}>\n                <p>{this.props.team1.name} {this.props.team1.score}</p>\n              </Col>\n            </Row>\n            <Row className='user-series-vote'>\n              <Col xs={4}>\n                <img src={this.props.team2.img} alt={this.props.team2.name} />\n              </Col>\n              <Col xs={7} className={this.props.team2.score === 4 && 'user-series-vote-score font-bold'}>\n                <p>{this.props.team2.name} {this.props.team2.score}</p>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n      </Col>\n    )\n  }\n}\n","// Lib\nimport React, { Component } from 'react'\nimport PropTypes from \"prop-types\"\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Actions\nimport { getSeries, postSeries } from '../actions/SeriesAction'\n\n// Components\nimport nhlLogo from '../images/nhl.svg'\n\nclass FormVote extends Component {\n  constructor(props, context) {\n    super(props, context)\n\n    this.props.getSeries()\n\n    this.state = {\n      'vote': [],\n      'errors': ''\n    }\n  }\n\n  processBdd() {\n    if (this.props.series.length === this.state.vote.length) {\n      this.state.vote.map((votes, i) => {\n        this.props.postSeries(votes)\n        return votes\n      })\n\n      this.context.router.history.push('/classement')\n    } else {\n      this.setState({ errors: 'Attention tu as deux équipes égalités' })\n    }\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault()\n\n    this.props.series.map((serie, i) => {\n      let selectTeams1 = document.getElementById(serie.team1.id)\n      let selectTeams2 = document.getElementById(serie.team2.id)\n      let valueTeams1 = parseInt(selectTeams1.value)\n      let valueTeams2 = parseInt(selectTeams2.value)\n\n      if (valueTeams1 !== valueTeams2) {\n        this.state.vote.push({\n          'userID': localStorage.getItem('userID'),\n          'seriesId': serie._id,\n          'team1': {\n            'name': serie.team1.name,\n            'img': serie.team1.img,\n            'score': valueTeams1\n          },\n          'team2': {\n            'name': serie.team2.name,\n            'img': serie.team2.img,\n            'score': valueTeams2\n          },\n          'winner': valueTeams1 > valueTeams2 ? 'team1' : 'team2',\n          'diff': valueTeams1 - valueTeams2\n        })\n        return this.state.vote\n      }\n\n      return false\n    })\n\n    this.processBdd()\n  }\n\n  render() {\n    return (\n      <Col xs={12}>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              <img className='nhl-logo' src={nhlLogo} alt='NHL Logo' />\n              C'est le moment de voter pour les series - 1<sup>st</sup> round\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={this.onFormSubmit.bind(this)}>\n              <Col xs={12}>\n                {\n                  this.props.series.map((serie, i) => {\n                    return(\n                      <Row key={i} className='form-series'>\n                        <Col xs={12} className='align-center'><h3>Match {i + 1}</h3></Col>\n                        <Col xs={12} md={4} lg={3} className='form-series-col'>\n                          <Col xs={6} md={8} className='align-center'>\n                            <img src={serie.team1.img} alt={serie.team1.name} />\n                            <p className='series-teams-name'>{serie.team1.name}</p>\n                          </Col>\n                          <Col xs={6} md={4}>\n                            <Form.Group>\n                              <Form.Control as=\"select\" id={serie.team1.id}>\n                                <option>0</option>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                              </Form.Control>\n                            </Form.Group>\n                          </Col>\n                        </Col>\n                        <Col xs={12} md={2} className='align-center'>\n                          <p className='series-versus'>VS</p>\n                        </Col>\n                        <Col xs={12} md={4} lg={3} className='form-series-col'>\n                          <Col xs={6} md={4}>\n                            <Form.Group>\n                              <Form.Control as=\"select\" id={serie.team2.id}>\n                                <option>0</option>\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                              </Form.Control>\n                            </Form.Group>\n                          </Col>\n                          <Col xs={6} md={8} className='align-center'>\n                            <img src={serie.team2.img} alt={serie.team2.name} />\n                            <p className='series-teams-name'>{serie.team2.name}</p>\n                          </Col>\n                        </Col>\n                      </Row>\n                    )\n                  })\n                }\n              </Col>\n              <Col xs={12} className='align-center'>\n                <Button type=\"submit\">Submit</Button>\n                {this.state.errors !== '' && (<Col xs={12} className=\"invalid-feedback\">{this.state.errors}</Col>)}\n              </Col>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Col>\n    )\n  }\n}\n\nFormVote.contextTypes = {\n  router: PropTypes.object\n}\n\nconst mapStateToProps = state => {\n  return {\n    series: state.series.series\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getSeries, postSeries\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormVote);\n","// Lib\nimport React, { Component } from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Actions\nimport { getUserSeries } from '../actions/SeriesAction'\n\n// Components\nimport UserVote from '../components/UserVote'\nimport FormVote from '../components/FormVote'\n\nclass Vote extends Component {\n\n  constructor(props) {\n    super(props)\n\n    let userID = localStorage.getItem(\"userID\");\n\n    this.state = {\n      userID: userID,\n      isVoted: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.getUserSeries(this.state.userID)\n    this.props.userSeries.length === 1 && this.setState({ isVoted: true })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    nextProps.userSeries.length !== 0 && this.setState({isVoted: true})\n  }\n\n  render() {\n    return (\n      <Container id='vote-form' fluid>\n        <Row>\n          {this.state.isVoted ? this.props.userSeries.map((vote, i) => <UserVote key={i} {...vote} match={i} />) : <FormVote />}\n        </Row>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userSeries: state.series.userSeries\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getUserSeries\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Vote);\n","import axios from 'axios';\n\n// POST CLASSEMENT\nexport function postClassement(classement) {\n  return function(dispatch) {\n    axios.post('/classement', classement)\n    .then(function(response) {\n      dispatch({type:\"POST_CLASSEMENT\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"POST_CLASSEMENT_REJECTED\", payload:err})\n    })\n  }\n}\n\n// GET CLASSEMENT BY USER\nexport function getClassement(id) {\n  return function(dispatch) {\n    axios.get('/classement/' + id)\n    .then(function(response) {\n      dispatch({type:\"GET_CLASSEMENT\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_CLASSEMENT_REJECTED\", payload:err})\n    })\n  }\n}\n\n// GET ALL CLASSEMENT\nexport function getAllClassement() {\n  return function(dispatch) {\n    axios.get('/classement')\n    .then(function(response) {\n      dispatch({type:\"GET_ALL_CLASSEMENT\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_ALL_CLASSEMENT_REJECTED\", payload:err})\n    })\n  }\n}\n\n// UPDATE CLASSEMENT BY USER\nexport function updateClassement(id, newData) {\n  return function(dispatch) {\n    axios.put('/classement/' + id, newData)\n    .then(function(response) {\n      dispatch({type:\"UPDATE_CLASSEMENT\", payload:response.data, userID:id, datas:newData})\n    })\n    .catch(function(err) {\n      dispatch({type:\"UPDATE_CLASSEMENT_REJECTED\", payload:err})\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport { Col, Table, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { getAllClassement } from '../actions/ClassementAction'\nimport { getSeries, getAllUserSeries } from '../actions/SeriesAction'\nimport { updateClassement } from '../actions/ClassementAction'\n\nclass Classement extends Component {\n  constructor(props) {\n    super(props)\n    let userPseudo = localStorage.getItem(\"userPseudo\")\n\n    this.props.getAllClassement()\n    this.props.getSeries()\n    this.props.getAllUserSeries()\n\n    this.state = {\n      userPseudo: userPseudo,\n      isAdmin: false,\n      usersID: [],\n      usersPoints: [],\n      series: []\n    }\n  }\n\n  componentDidMount() {\n    this.state.userPseudo === 'C Fab' && this.setState({ isAdmin: true })\n  }\n\n  getPoints() {\n    this.props.allClassement.map((classement, i) => {\n      this.state.usersID.push(classement.userID)\n      this.state.usersPoints.push(classement.points)\n      return [this.state.usersID, this.state.usersPoints]\n    })\n\n    this.props.series.map((serie, i) => {\n      this.state.series.push(serie._id)\n      return this.state.series\n    })\n\n    this.props.allUserSeries.map((vote, i) => {\n      let userIndex = this.state.usersID.indexOf(vote.userID)\n      let userPoints = this.state.usersPoints[userIndex]\n      let seriesIndex = this.state.series.indexOf(vote.seriesId)\n\n      if(this.props.series[seriesIndex].winner === vote.winner && this.props.series[seriesIndex].diff === vote.diff) {\n        const newArray = this.state.usersPoints\n        const newItem = userPoints + 3\n        newArray[userIndex] = newItem\n\n        this.setState({\n          usersPoints: newArray\n        })\n      } else if(this.props.series[seriesIndex].winner === vote.winner) {\n        const newArray = this.state.usersPoints\n        const newItem = userPoints + 1\n        newArray[userIndex] = newItem\n\n        this.setState({\n          usersPoints: newArray\n        })\n      }\n\n      console.log('userPoints : ', userPoints)\n      return userPoints\n    })\n  }\n\n  render() {\n    return (\n      <Col xs={12} md={{ span: 4, offset: 4 }} className='align-center'>\n        <Table striped bordered hover responsive>\n          <thead>\n            <tr>\n              <th className='align-center'>Classement</th>\n              <th className='align-center'>Pseudo</th>\n              <th className='align-center'>Points</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.allClassement.map((stand, i) => <tr key={i}><td>{i + 1}</td><td>{stand.userPseudo}</td><td>{stand.points}</td></tr>)}\n          </tbody>\n        </Table>\n        {this.state.isAdmin ? <Col xs={12} className=\"align-center\"><Button onClick={this.getPoints.bind(this)}>Calculer les points</Button></Col> : null}\n      </Col>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    allClassement: state.classement.allClassement,\n    series: state.series.series,\n    allUserSeries: state.series.allUserSeries\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getAllClassement,\n    getSeries, getAllUserSeries,\n    updateClassement\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Classement);\n","import axios from 'axios';\n\n// POST VOTE\nexport function postVote(vote) {\n  return function(dispatch) {\n    axios.post('/vote', vote)\n    .then(function(response) {\n      dispatch({type:\"POST_VOTE\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"POST_VOTE_REJECTED\", payload:err})\n    })\n  }\n}\n\n// GET VOTE BY USER\nexport function getVote(id) {\n  return function(dispatch) {\n    axios.get('/vote/' + id)\n    .then(function(response) {\n      dispatch({type:\"GET_VOTE\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_VOTE_REJECTED\", payload:err})\n    })\n  }\n}\n\n// GET ALL VOTE\nexport function getAllVote() {\n  return function(dispatch) {\n    axios.get('/vote')\n    .then(function(response) {\n      dispatch({type:\"GET_ALL_VOTE\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_ALL_VOTE_REJECTED\", payload:err})\n    })\n  }\n}\n","import axios from 'axios';\n\n// GET ARME\nexport function getTeams() {\n  return function(dispatch) {\n    axios.get('/teams')\n    .then(function(response) {\n      dispatch({type:\"GET_TEAMS\", payload:response.data})\n    })\n    .catch(function(err) {\n      dispatch({type:\"GET_TEAMS_REJECTED\", payload:err})\n    })\n  }\n}\n","// Lib\nimport React, { Component } from 'react'\nimport { Card, Col } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { getTeams } from '../actions/TeamsAction'\n\nclass DisplayVote extends Component {\n  constructor(props) {\n    super(props)\n\n    this.props.getTeams()\n  }\n\n  render() {\n    const teamsSelected = (this.props.allTeams.map((team, i) => {\n      let teamsArray = this.props.teams\n      let teamsIndex = teamsArray.indexOf(team._id)\n\n      if (teamsIndex !== -1) return (<Col xs={12} md={4} key={i} className='user-vote-list-item'><img className=\"teams-logo\" src={team.img} alt={team.name} /> {team.name}</Col>)\n      return true\n    }))\n    return (\n      <Card>\n        <Card.Header>\n          <Card.Title>Vote de {this.props.userPseudo}</Card.Title>\n        </Card.Header>\n        <Card.Body className='user-vote-list'>\n          {teamsSelected}\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    allTeams: state.teams.teams\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getTeams\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayVote);\n","// Lib\nimport React, { Component } from 'react'\nimport { Container, Col } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Actions\nimport { getVote, getAllVote } from '../actions/VoteAction'\n\n//Components\nimport DisplayVote from './DisplayVote'\n\nclass Vote extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.props.getVote(localStorage.getItem(\"userID\"))\n    this.props.getAllVote()\n\n    this.state = {\n      isVoted: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.userVote.length === 1 && this.setState({ isVoted: true })\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.userVote.length !== this.props.userVote.length) {\n      this.setState({ isVoted: true })\n    }\n  }\n\n  render() {\n    return (\n      <Container id='vote-form' fluid>\n        <Col xs={12}>\n          {this.state.isVoted ? this.props.allVote.map((votes, i) => <DisplayVote key={i} {...votes}/>) : <p>Il faut que tu vote d'abord !</p>}\n        </Col>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userVote: state.vote.userVote,\n    allVote: state.vote.allVote\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getVote, getAllVote\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Vote);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Col, Card, Button, FormGroup, InputGroup, FormControl } from 'react-bootstrap'\nimport { findDOMNode } from 'react-dom'\n\nimport { updateUser, logoutUser } from '../actions/Authentication'\n\nclass ChangeUser extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let userID = this.props.id\n\n    this.state = {\n      userID: userID,\n      modifyUser: false\n    }\n  }\n\n  modifyUser() {\n    this.setState({modifyUser: !this.state.modifyUser})\n  }\n\n  changeUser() {\n    let newUserInfos = {\n      nom: findDOMNode(this.refs.newNom).value,\n      prenom: findDOMNode(this.refs.newPrenom).value,\n      pseudo: findDOMNode(this.refs.newPseudo).value,\n      email: findDOMNode(this.refs.newEmail).value\n    }\n    this.props.updateUser(this.state.userID, newUserInfos)\n    this.props.logoutUser()\n  }\n\n  render() {\n    return (\n      <Col xs={12} md={{ span: 4, offset: 4 }}>\n        <Card>\n          <Card.Header>\n            <Card.Title>Modifie tes informations de compte</Card.Title>\n          </Card.Header>\n          <Card.Body>\n            {this.state.modifyUser ?\n              <ul>\n                <li>\n                  <FormGroup controlId=\"newNom\">\n                    <InputGroup>Change ton Nom :</InputGroup>\n                    <FormControl\n                      type='text'\n                      defaultValue={this.props.nom}\n                      ref='newNom' />\n                  </FormGroup>\n                </li>\n                <li>\n                  <FormGroup controlId=\"newPrenom\">\n                    <InputGroup>Change ton Prénom :</InputGroup>\n                    <FormControl\n                      type='text'\n                      defaultValue={this.props.prenom}\n                      ref='newPrenom' />\n                  </FormGroup>\n                </li>\n                <li>\n                  <FormGroup controlId=\"newPseudo\">\n                    <InputGroup>Change ton pseudo :</InputGroup>\n                    <FormControl\n                      type='text'\n                      defaultValue={this.props.pseudo}\n                      ref='newPseudo' />\n                  </FormGroup>\n                </li>\n                <li>\n                  <FormGroup controlId=\"newEmail\">\n                    <InputGroup>Change ton email :</InputGroup>\n                    <FormControl\n                      type='text'\n                      defaultValue={this.props.email}\n                      ref='newEmail' />\n                  </FormGroup>\n                </li>\n                <li>\n                  <Button onClick={this.changeUser.bind(this)}>Sauvegarder</Button>\n                  <Button onClick={this.modifyUser.bind(this)}>Annuler</Button>\n                </li>\n                <li><p>Attention tu seras déconnecté automatiquement afin de faire la mise à jour. Il faudra te connecter à nouveau.</p></li>\n              </ul> :\n              <ul>\n                <li>Nom : {this.props.nom}</li>\n                <li>Prénom : {this.props.prenom}</li>\n                <li>Pseudo : {this.props.pseudo}</li>\n                <li>Email : {this.props.email}</li>\n                <li><Button onClick={this.modifyUser.bind(this)}>Modifier</Button></li>\n              </ul>\n            }\n          </Card.Body>\n        </Card>\n      </Col>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    updateUser, logoutUser\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(ChangeUser);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Container, Col } from 'react-bootstrap'\n\nimport { getUser } from '../actions/Authentication'\n\nimport ChangeUser from '../components/ChangeUser'\n\nexport class MonCompte extends Component {\n\n  constructor(props) {\n    super(props)\n    let userPseudo = localStorage.getItem(\"userPseudo\")\n    let userID = localStorage.getItem(\"userID\")\n\n    this.state = {\n      userPseudo: userPseudo,\n      userID: userID,\n      modifyName: false\n    }\n  }\n\n  componentDidMount() {\n    this.props.getUser({ id: this.state.userID })\n  }\n\n  render() {\n    return (\n      <Container id=\"mon-compte\" className=\"vertical-middle\" fluid>\n        <Col xs={12}>\n          <h1 className=\"align-center\">Voici ton compte {this.state.userPseudo}</h1>\n          {this.props.userData.map((user, i) => <ChangeUser key={i} {...user} />)}\n        </Col>\n      </Container>\n    )\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    userData: state.auth.user\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getUser\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MonCompte)\n","// Lib\nimport React, { Component } from 'react'\nimport { Card, Row, Col, Form, Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Actions\nimport { getTeams } from '../actions/TeamsAction'\nimport { postNhlSeries } from '../actions/SeriesAction'\n\nclass FormSeries extends Component {\n  constructor(props) {\n    super(props)\n\n    this.props.getTeams()\n  }\n\n  processBdd(team1, team2) {\n    let insertBdd = {\n      'team1': team1,\n      'team2': team2,\n      'winner': '',\n      'diff': 0\n    }\n\n    this.props.postNhlSeries(insertBdd)\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault()\n\n    let getTeam1 = document.getElementById('team1').value\n    let getTeam2 = document.getElementById('team2').value\n    let team1 = {}\n    let team2 = {}\n\n    this.props.teams.map((team, i) => {\n      if(getTeam1 === team.name) {\n        team1 = {\n          'id': team._id,\n          'name': team.name,\n          'img': team.img,\n          'score': 0\n        }\n      }\n      if(getTeam2 === team.name) {\n        team2 = {\n          'id': team._id,\n          'name': team.name,\n          'img': team.img,\n          'score': 0\n        }\n      }\n      return [team1, team2]\n    })\n\n    this.processBdd(team1, team2)\n  }\n\n  render() {\n    const optionTeams = this.props.teams.map((team, i) => <option key={i}>{team.name}</option>)\n    return (\n      <Col xs={12} md={{ span:6 , offset:3 }}>\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              Mise en place des series\n            </Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={this.onFormSubmit.bind(this)}>\n              <Col xs={12} className='align-center'><h3>Match</h3></Col>\n              <Row className='form-series'>\n                <Col xs={5}>\n                  <Form.Group>\n                    <Form.Control as=\"select\" id='team1'>\n                      {optionTeams}\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n                <Col xs={2} className='align-center'>\n                  <p className='series-versus'>VS</p>\n                </Col>\n                <Col xs={5}>\n                  <Form.Group>\n                    <Form.Control as=\"select\" id='team2'>\n                      {optionTeams}\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n              </Row>\n              <Col xs={12} className='align-center'>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Col>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    teams: state.teams.teams\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getTeams,\n    postNhlSeries\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormSeries);\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Signup from \"./components/Signup\"\nimport Signin from \"./components/Signin\"\nimport Vote from \"./components/Vote\"\nimport Classement from \"./components/Classement\"\nimport AllVote from \"./components/AllVote\"\nimport MonCompte from \"./components/MonCompte\"\nimport FormSeries from \"./components/FormSeries\"\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component={Signup}/>\n      <Route path='/signin' component={Signin}/>\n      <Route path='/vote' component={Vote}/>\n      <Route path='/classement' component={Classement}/>\n      <Route path='/quiavotequoi' component={AllVote}/>\n      <Route path='/monCompte' component={MonCompte}/>\n      <Route path='/series' component={FormSeries}/>\n    </Switch>\n  </main>\n)\n\nexport default Main\n","import React, { Component } from 'react'\nimport FullNavbars from './FullNavbars'\nimport Content from './Content'\n\nclass App extends Component {\n  render() {\n    return (\n      <section>\n        <FullNavbars />\n        <Content />\n      </section>\n    )\n  }\n}\n\nexport default App;\n","const initialeState = {\n  teams: [],\n  error: null\n}\n\nexport const TeamsReducer = (state=initialeState, action) => {\n  switch (action.type) {\n    case 'GET_TEAMS':\n      return {...state, teams:[...action.payload]};\n    case \"GET_TEAMS_REJECTED\":\n      return action.payload\n    default: {\n      return state\n    }\n  }\n}\n","const initialeState = {\n  series: [],\n  nhlSeries: [],\n  voteSeries: [],\n  userSeries: [],\n  allUserSeries: [],\n  error: null\n}\n\nexport const SeriesReducer = (state=initialeState, action) => {\n  switch (action.type) {\n    case 'GET_SERIES':\n      return {...state, series:[...action.payload]};\n    case \"GET_SERIES_REJECTED\":\n      return action.payload\n\n    case 'POST_NHL_SERIES':\n      return {...state, nhlSeries:[...action.payload]}\n    case \"POST_NHL_SERIES_REJECTED\":\n      return action.payload\n\n    case 'POST_SERIES':\n      return {...state, voteSeries:[...action.payload]}\n    case \"POST_SERIES_REJECTED\":\n      return action.payload\n\n    case 'GET_USER_SERIES_VOTE':\n      return {...state, userSeries:[...action.payload]}\n    case \"GET_USER_SERIES_VOTE_REJECTED\":\n      return action.payload\n\n    case 'GET_ALL_USER_SERIES_VOTE':\n      return {...state, allUserSeries:[...action.payload]}\n    case \"GET_ALL_USER_SERIES_VOTE_REJECTED\":\n      return action.payload\n\n    default: {\n      return state\n    }\n  }\n}\n","const initialeState = {\n  vote: [],\n  userVote: [],\n  allVote: []\n}\n\nexport const VoteReducer = (state=initialeState, action) => {\n  switch (action.type) {\n    case 'POST_VOTE':\n      return {...state, vote:[...state.vote, action.payload]}\n    case \"POST_VOTE_REJECTED\":\n      return action.payload\n    case 'GET_VOTE':\n      return {...state, userVote:[...action.payload]};\n    case \"GET_VOTE_REJECTED\":\n      return action.payload\n    case 'GET_ALL_VOTE':\n      return {...state, allVote:[...action.payload]};\n    case \"GET_ALL_VOTE_REJECTED\":\n      return action.payload\n    default: {\n      return state\n    }\n  }\n}\n","const initialeState = {\n  classement: [],\n  userClassement: [],\n  allClassement: []\n}\n\nexport const ClassementReducer = (state=initialeState, action) => {\n  switch (action.type) {\n    case 'POST_CLASSEMENT':\n      return {...state, classement:[...state.classement, action.payload]}\n    case \"POST_CLASSEMENT_REJECTED\":\n      return action.payload\n\n    case 'GET_CLASSEMENT':\n      return {...state, userClassement:[...action.payload]};\n    case \"GET_CLASSEMENT_REJECTED\":\n      return action.payload\n\n    case 'GET_ALL_CLASSEMENT':\n      return {...state, allClassement:[...action.payload]};\n    case \"GET_ALL_CLASSEMENT_REJECTED\":\n      return action.payload\n\n    case \"UPDATE_CLASSEMENT\":\n      const newArray = [...state.allClassement]\n      const newItem = action.datas\n      newArray[newArray.findIndex(item => item._id === action.id)] = newItem\n      return {\n        ...state,\n        allClassement:newArray\n      };\n    case \"UPDATE_CLASSEMENT_REJECTED\":\n      return action.payload\n    default: {\n      return state\n    }\n  }\n}\n","export const isEmpty = (value) => {\n  return (\n    value === undefined ||\n    value === null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0)\n  );\n}\n","import { SET_CURRENT_USER } from '../actions/Types';\nimport { isEmpty } from '../hocs/is-empty';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: []\n}\n\nexport function authReducer(state = initialState, action ) {\n  switch(action.type) {\n    case SET_CURRENT_USER:\n    return {\n      ...state,\n      isAuthenticated: !isEmpty(action.payload),\n      user: [action.payload]\n    }\n    default:\n    return state;\n  }\n}\n","import { GET_ERRORS } from '../actions/Types';\n\nconst initialState = {};\n\nexport function errorReducer(state = initialState, action ) {\n  switch(action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux'\nimport { TeamsReducer } from './TeamsReducer'\nimport { SeriesReducer } from './SeriesReducer'\nimport { VoteReducer } from './VoteReducer'\nimport { ClassementReducer } from './ClassementReducer'\nimport { authReducer } from './AuthReducer'\nimport { errorReducer } from './ErrorReducer'\n\nexport default combineReducers({\n  teams: TeamsReducer,\n  series: SeriesReducer,\n  vote: VoteReducer,\n  classement: ClassementReducer,\n  errors: errorReducer,\n  auth: authReducer\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n  .register(swUrl)\n  .then(registration => {\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n      if (installingWorker == null) {\n        return;\n      }\n      installingWorker.onstatechange = () => {\n        if (installingWorker.state === 'installed') {\n          if (navigator.serviceWorker.controller) {\n            // At this point, the updated precached content has been fetched,\n            // but the previous service worker will still serve the older\n            // content until all client tabs are closed.\n            console.log(\n              'New content is available and will be used when all ' +\n              'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n            );\n\n            // Execute callback\n            if (config && config.onUpdate) {\n              config.onUpdate(registration);\n            }\n          } else {\n            // At this point, everything has been precached.\n            // It's the perfect time to display a\n            // \"Content is cached for offline use.\" message.\n            console.log('Content is cached for offline use.');\n\n            // Execute callback\n            if (config && config.onSuccess) {\n              config.onSuccess(registration);\n            }\n          }\n        }\n      };\n    };\n  })\n  .catch(error => {\n    console.error('Error during service worker registration:', error);\n  });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n  .then(response => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (\n      response.status === 404 ||\n      (contentType != null && contentType.indexOf('javascript') === -1)\n    ) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n  .catch(() => {\n    console.log(\n      'No internet connection found. App is running in offline mode.'\n    );\n  });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Library import\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\n// CSS import\nimport './style/index.css'\nimport './style/materia.min.css'\n\n// Component import\nimport App from './App'\n\n// Reducers Import\nimport reducers from './reducers/reducers'\n\n// Services import\nimport * as serviceWorker from './serviceWorker'\n\n// Middlewares import\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware'\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancer(applyMiddleware(promise(), thunk, createLogger())))\n\nReactDOM.render((\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>\n), document.getElementById('root'))\n\nexport default store;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Eastern_Conference.fdd85eae.png\";","module.exports = __webpack_public_path__ + \"static/media/Western_Conference.223abb5a.png\";","module.exports = __webpack_public_path__ + \"static/media/nhl.266661c7.svg\";"],"sourceRoot":""}